{"version":3,"sources":["apis/auth.js","redux/actions/actionTypes.js","redux/reducers/authReducer.js","redux/reducers/createReducers.js","redux/reducers/listReducer.js","redux/reducers/updateReducer.js","redux/reducers/reducer.js","redux/store.js","apis/list.js","apis/create.js","apis/update.js","redux/actions/actions.js","components/auth/index.js","components/header.js","components/layout.js","components/home/chart1.js","components/home/charts/daily_vol.js","components/home/chart2.js","components/home/charts/main_chart.js","components/home/charts_section.js","components/home/customers.js","components/home/upload_form.js","components/home/customer-upload.js","components/home/truck_upload.js","components/home/upload_excel.js","components/home/input-section.js","components/home/top-tabs.js","components/home/index.js","components/orders/excel.js","components/orders/top.js","components/orders/edit.js","components/orders/table.js","components/orders/index.js","components/products/graphs/bar_chart.js","components/products/graphs/first.js","components/products/graphs/radar_chart.js","components/products/graphs/index.js","components/products/table.js","components/products/top.js","components/products/index.js","components/customers/chart1.js","components/customers/chart2.js","components/customers/top_tab.js","components/customers/orders.js","components/customers/index.js","routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["get_token","username","password","a","fetch","method","headers","body","JSON","stringify","raw_data","json","data","console","log","GET_TOKEN","GET_TOKEN_ERROR","GET_TOKEN_ERROR_REMOVE","CREATE_CUSTOMER","CREATE_CUSTOMER_ERROR","CUSTOMER_LIST","CREATE_TRUCK","CREATE_TRUCK_ERROR","CREATE_ENTRY","CREATE_ENTRY_ERROR","UPDATE_ENTRY","UPDATE_ENTRY_ERROR","DELETE_ENTRY","DELETE_ENTRY_ERROR","ENTRY_LIST","PRODUCT_LIST","PRODUCT_INDEX","BI_LIST","PRODUCT_BI_LIST","CUSTOMER_BI_LIST","CUSTOMER_DATA","ORDER_DATES","USER_LOGGED_OUT","UPLOAD_EXCEL","UPLOAD_EXCEL_ERROR","merge","prev","next","Object","assign","AuthReducer","state","action","type","token","payload","login_error","CreateReducer","created_customer","create_customer_error","created_truck","create_truck_error","created_entry","create_entry_error","uploaded_excel","upload_excel_error","ListReducer","customers","products","product_index","entries","bi_list","product_bi_list","customer_bi_list","customer_data","order_dates","UpdateReducer","updated_entry","update_entry_error","deleted_entry","delete_entry_error","appReducer","combineReducers","auth_reducer","create_reducer","list_reducer","update_reducer","rootReducer","storage","removeItem","undefined","persistConfig","key","persistedReducer","persistReducer","reducer","store","createStore","applyMiddleware","thunk","persistStore","customer_list","name","location","getState","product_list","depot_id","entry_list","customer_create","depot","parseInt","truck_create","customer","plate_no","driver","entry_create","product","truck","entry_no","order_no","date","vol_obs","vol_20","selling_price","upload_excel","file","formData","FormData","append","rData","entry_update","id","entry_delete","CUSTOMER_LIST_ACTION","dispatch","then","catch","error","ENTRY_LIST_ACTION","PRODUCT_INDEX_ACTION","BI_LIST_ACTION","PRODUCT_BI_LIST_ACTION","CUSTOMER_BI_LIST_ACTION","LoginPage","spinner","redirect","email","show_error","null_error","componentWillReceiveProps","nextProps","setState","status_code","props","PRODUCT_LIST_ACTION","onSubmit","event","preventDefault","GET_TOKEN_ACTION","componentWillMount","GET_TOKEN_ERROR_REMOVE_ACTION","this","to","Container","Row","className","ariaLabel","color","height","width","timeout","visible","Col","src","alt","xs","Alert","variant","keys","map","idx","Form","Group","controlId","Control","placeholder","onChange","e","target","value","Button","Component","mapDispatchToProps","errors","non_field_errors","connect","HeaderComponent","headerTitle","size","first_name","last_name","React","Layout","dashboard","orders","handleClick","btn","filtered","filter","index","arr","link","handleLogOut","USER_LOGGED_OUT_ACTION","fluid","exact","onClick","children","ApexChart","componentDidMount","series","i","length","concat","values","err","options","chart","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","title","text","align","stroke","show","colors","xaxis","categories","months","yaxis","fill","opacity","tooltip","y","formatter","val","DailyVolChart","position","offsetX","style","fontSize","shared","intersect","dates","MainChart","curve","x","format","bi","ChartsSection","my_ref","createRef","daily_products_comp","Customers","numberWithCommas","toString","replace","amount","increase","UploadForm","Date","trucks","success","customerSelect","items","CREATE_ENTRY_ACTION","show_errors","Label","Select","marginTop","CustomerUpload","CREATE_CUSTOMER_ACTION","TruckUpload","CREATE_TRUCK_ACTION","UploadExcel","UPLOAD_EXCEL_ACTION","message","accept","files","status","MyComponent","startDate","endDate","handleSelect","ranges","selection","trigger","toDateString","window","open","contentStyle","minHeight","TopTabs","total_earns","total_orders","total_customers","HomePage","didnt_load","customers_month","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","DownloadFile","element","label","TopComponent","start_date","end_date","cost","ORDER_DATES_ACTION","showSelectionPreview","moveRangeOnFirstSelection","direction","preventSnapRefocus","calendarFocus","EditForm","order","product_id","truck_id","customer_changed","other_products","customerChange","UPDATE_ENTRY_ACTION","OrderTable","active","delete_order","onSearchChange","onSearch","or","includes","d","handleDelete","DELETE_ENTRY_ACTION","start_index","end_index","number","push","Pagination","Item","Math","ceil","FormControl","Table","striped","bordered","hover","slice","onOpen","OrderPage","BarChart","today","ProductMainChart","addMonths","setMonth","getMonth","timeline","zoom","autoScaleYaxis","annotations","getFullYear","getTime","borderColor","yAxisIndex","background","markers","min","tickAmount","gradient","shadeIntensity","opacityFrom","opacityTo","stops","month","six_months","year","ApexCharts","exec","updateData","RadarChart","radar","polygons","strokeColors","strokeColor","strokeWidth","labels","ChartComponent","main","ProductOrderTable","ProductTopComponent","handleSubmit","marginRight","ProductPage","CustomerBarChart","monthly_orders","CustomerRadarChart","CustomerTop","info","order_total","truck_total","total","CustomerOrderTable","CustomerPage","customer_id","toLowerCase","findIndex","CUSTOMER_DATA_ACTION","Routes","path","component","DownloadExcelReport","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ef3ff17.chunk.js","sourcesContent":["export async function get_token(username, password) {\r\n\t\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/accounts/get-token/`,{\r\n\t\t\tmethod: 'POST',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\r\n\t        },\r\n\t        body: JSON.stringify({\r\n\t            username: username,\r\n\t            password: password,\r\n\t        })\r\n \r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n","\r\n// AUTHENTICATION\r\nexport const GET_TOKEN = \"GET_TOKEN\";\r\nexport const GET_TOKEN_ERROR =  \"GET_TOKEN_ERROR\";\r\nexport const GET_TOKEN_ERROR_REMOVE = \"GET_TOKEN_ERROR_REMOVE\"\r\n\r\n\r\n// CUSTOMERS\r\nexport const CREATE_CUSTOMER = \"CREATE_CUSTOMER\"\r\nexport const CREATE_CUSTOMER_ERROR = \"CREATE_CUSTOMER_ERROR\"\r\n\r\nexport const CUSTOMER_LIST = \"CUSTOMER_LIST\"\r\n\r\n// TRUCKS\r\nexport const CREATE_TRUCK = \"CREATE_TRUCK\"\r\nexport const CREATE_TRUCK_ERROR = \"CREATE_TRUCK_ERROR\"\r\n\r\n// ENTRY\r\nexport const CREATE_ENTRY = \"CREATE_ENTRY\"\r\nexport const CREATE_ENTRY_ERROR = \"CREATE_ENTRY_ERROR\"\r\n\r\nexport const UPDATE_ENTRY = \"UPDATE_ENTRY\"\r\nexport const UPDATE_ENTRY_ERROR = \"UPDATE_ENTRY_ERROR\"\r\n\r\nexport const DELETE_ENTRY = \"DELETE_ENTRY\"\r\nexport const DELETE_ENTRY_ERROR = \"DELETE_ENTRY_ERROR\"\r\n\r\nexport const ENTRY_LIST = \"ENTRY_LIST\"\r\n\r\n\r\n// PRODUCTS\r\nexport const PRODUCT_LIST = \"PRODUCT_LIST\"\r\nexport const PRODUCT_INDEX = \"PRODUCT_INDEX\"\r\n\r\n// BUSINESS INTELLIGENCE\r\nexport const BI_LIST = \"BI_LIST\"\r\nexport const PRODUCT_BI_LIST = \"PRODUCT_BI_LIST\"\r\nexport const CUSTOMER_BI_LIST = \"CUSTOMER_BI_LIST\"\r\n\r\n// HELPERS\r\nexport const CUSTOMER_DATA = \"CUSTOMER_DATA\"\r\nexport const ORDER_DATES = \"ORDER_DATES\"\r\nexport const USER_LOGGED_OUT = \"USER_LOGGED_OUT\"\r\n\r\n// UPLOAD EXCEL\r\nexport const UPLOAD_EXCEL = \"UPLOAD_EXCEL\"\r\nexport const UPLOAD_EXCEL_ERROR = \"UPLOAD_EXCEL_ERROR\"\r\nexport const UPLOAD_EXCEL_ERROR_REMOVE = \"UPLOAD_EXCEL_ERROR_REMOVE\"","import {\r\n\tGET_TOKEN,\r\n    GET_TOKEN_ERROR,\r\n\tGET_TOKEN_ERROR_REMOVE\r\n\r\n} from \"../actions/actionTypes\"\r\n\r\nconst merge = (prev, next) => Object.assign({}, prev, next)\r\n\r\nconst AuthReducer = (state={}, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n        // Get token\r\n\t\tcase GET_TOKEN:\r\n\t\t\treturn merge(state, {token:action.payload, login_error:null})\r\n\t\t\tbreak;\r\n\r\n\t\tcase GET_TOKEN_ERROR:\r\n\t\t\t\r\n\t\t\treturn merge(state, {login_error:action.payload})\r\n\t\t\tbreak;\r\n\r\n\t\tcase GET_TOKEN_ERROR_REMOVE:\r\n\t\t\t\r\n\t\t\treturn merge(state, {login_error:action.payload})\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport default AuthReducer","import {\r\n\tCREATE_CUSTOMER, CREATE_CUSTOMER_ERROR,\r\n    CREATE_TRUCK, CREATE_TRUCK_ERROR,\r\n\tCREATE_ENTRY, CREATE_ENTRY_ERROR,\r\n\tUPLOAD_EXCEL, UPLOAD_EXCEL_ERROR,\r\n\r\n} from \"../actions/actionTypes\"\r\n\r\nconst merge = (prev, next) => Object.assign({}, prev, next)\r\n\r\nconst CreateReducer = (state={}, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n        // CUSTOMER\r\n\t\tcase CREATE_CUSTOMER:\r\n\t\t\treturn merge(state, {created_customer:action.payload, create_customer_error:null})\r\n\t\t\tbreak;\r\n\r\n\t\tcase CREATE_CUSTOMER_ERROR:\r\n\t\t\t\r\n\t\t\treturn merge(state, {create_customer_error:action.payload})\r\n\t\t\tbreak;\r\n        \r\n        // TRUCKS\r\n        case CREATE_TRUCK:\r\n\t\t\treturn merge(state, {created_truck:action.payload, create_truck_error:null})\r\n\t\t\tbreak;\r\n\r\n\t\tcase CREATE_TRUCK_ERROR:\r\n\t\t\t\r\n\t\t\treturn merge(state, {create_truck_error:action.payload})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\t// ENTRY\r\n        case CREATE_ENTRY:\r\n\t\t\treturn merge(state, {created_entry:action.payload, create_entry_error:null})\r\n\t\t\tbreak;\r\n\r\n\t\tcase CREATE_ENTRY_ERROR:\r\n\t\t\t\r\n\t\t\treturn merge(state, {create_entry_error:action.payload})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase UPLOAD_EXCEL:\r\n\t\t\t\r\n\t\t\treturn merge(state, {uploaded_excel:action.payload, upload_excel_error:null})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase UPLOAD_EXCEL_ERROR:\r\n\t\t\t\r\n\t\t\treturn merge(state, {upload_excel_error:action.payload})\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport default CreateReducer","import {\r\n    CUSTOMER_LIST,\r\n\tPRODUCT_LIST, PRODUCT_INDEX,\r\n\tENTRY_LIST,\r\n\tBI_LIST,\r\n\tPRODUCT_BI_LIST,\r\n\tCUSTOMER_BI_LIST,\r\n\tCUSTOMER_DATA, ORDER_DATES,\r\n} from \"../actions/actionTypes\"\r\n\r\nconst merge = (prev, next) => Object.assign({}, prev, next)\r\n\r\nconst ListReducer = (state={}, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n        // Get token\r\n\t\tcase CUSTOMER_LIST:\r\n\t\t\treturn merge(state, {customers:action.payload})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase PRODUCT_LIST:\r\n\t\t\treturn merge(state, {products:action.payload})\r\n\t\t\tbreak;\r\n\t\tcase PRODUCT_INDEX:\r\n\t\t\t\treturn merge(state, {product_index:action.payload})\r\n\t\t\t\tbreak;\r\n\t\t\r\n\t\tcase ENTRY_LIST:\r\n\t\t\treturn merge(state, {entries:action.payload})\r\n\t\t\tbreak;\r\n\r\n\t\tcase BI_LIST:\r\n\t\t\treturn merge(state, {bi_list:action.payload})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase PRODUCT_BI_LIST:\r\n\t\t\treturn merge(state, {product_bi_list:action.payload})\r\n\t\t\tbreak;\r\n\t\tcase CUSTOMER_BI_LIST:\r\n\t\t\treturn merge(state, {customer_bi_list:action.payload})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase CUSTOMER_DATA:\r\n\t\t\treturn merge(state, {customer_data:action.payload})\r\n\t\t\tbreak;\t\t\r\n\t\tcase ORDER_DATES:\r\n\t\t\treturn merge(state, {order_dates:action.payload})\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport default ListReducer","import {\r\n\tUPDATE_ENTRY, UPDATE_ENTRY_ERROR, DELETE_ENTRY, DELETE_ENTRY_ERROR,\r\n\r\n} from \"../actions/actionTypes\"\r\n\r\nconst merge = (prev, next) => Object.assign({}, prev, next)\r\n\r\nconst UpdateReducer = (state={}, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n        // CUSTOMER\r\n\t\tcase UPDATE_ENTRY:\r\n\t\t\treturn merge(state, {updated_entry:action.payload, update_entry_error:null})\r\n\t\t\tbreak;\r\n\r\n\t\tcase UPDATE_ENTRY_ERROR:\r\n\t\t\t\r\n\t\t\treturn merge(state, {update_entry_error:action.payload})\r\n\t\t\tbreak;\r\n        \r\n\t\tcase DELETE_ENTRY:\r\n\t\t\treturn merge(state, {deleted_entry:action.payload, delete_entry_error:null})\r\n\t\t\tbreak;\r\n\r\n\t\tcase DELETE_ENTRY_ERROR:\r\n\t\t\t\r\n\t\t\treturn merge(state, {delete_entry_error:action.payload})\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport default UpdateReducer","import {combineReducers} from \"redux\";\r\nimport storage from 'redux-persist/lib/storage'\r\nimport AuthReducer from \"./authReducer\";\r\nimport CreateReducer from \"./createReducers\"\r\nimport ListReducer from \"./listReducer\";\r\nimport UpdateReducer from \"./updateReducer\";\r\nimport {USER_LOGGED_OUT} from \"../actions/actionTypes\"\r\n\r\n\r\nconst appReducer = combineReducers({\r\n\tauth_reducer:AuthReducer,\r\n\tcreate_reducer:CreateReducer,\r\n\tlist_reducer:ListReducer,\r\n\tupdate_reducer:UpdateReducer,\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n    if (action.type === USER_LOGGED_OUT) {\r\n        // for all keys defined in your persistConfig(s)\r\n        storage.removeItem('persist:root')\r\n        // storage.removeItem('persist:otherKey')\r\n\r\n        state = undefined;\r\n    }\r\n    return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer","import {createStore, applyMiddleware} from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\"\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducers/reducer\"\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n\tkey: \"root\",\r\n\tstorage:storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\nexport const store =  createStore(persistedReducer, applyMiddleware(thunk))\r\nexport const persistor =  persistStore(store)","import {store} from \"../redux/store\"\r\n\r\n// CUSTOMER LIST\r\n\r\nexport async function customer_list(name, location) {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/customers/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n// PRODUCT LIST\r\n\r\nexport async function product_list() {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\tvar depot_id = store.getState().auth_reducer.token.depot_id\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/${depot_id}/products/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n// ENTRIES\r\n\r\nexport async function entry_list() {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/orders/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\t\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n// BUSINESS INTELLIGENCE\r\n\r\nexport async function bi_list() {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\tvar depot_id = store.getState().auth_reducer.token.depot_id\r\n\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/${depot_id}/bi/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\t\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function product_bi_list() {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\tvar depot_id = store.getState().auth_reducer.token.depot_id\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/${depot_id}/product_bi/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\t\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function customer_bi_list() {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/orders/customer_bi/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\t\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n","import {store} from \"../redux/store\"\r\n\r\nexport async function customer_create(name, location) {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\tvar depot_id = store.getState().auth_reducer.token.depot_id\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/customers/`,{\r\n\t\t\tmethod: 'POST',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n            body: JSON.stringify({\r\n\t\t\t\tdepot: parseInt(depot_id),\r\n\t            name: name,\r\n\t            location: location,\r\n\t        })\r\n \r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport async function truck_create(customer, plate_no, driver) {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/customers/trucks/`,{\r\n\t\t\tmethod: 'POST',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n            body: JSON.stringify({\r\n\t            customer: customer,\r\n\t            plate_no: plate_no,\r\n                driver: driver,\r\n\t        })\r\n \r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n// ENTRY\r\nexport async function entry_create(\r\n\tproduct, \r\n\ttruck,\r\n\tentry_no, \r\n\torder_no,\r\n\tdate,\r\n\tvol_obs,\r\n\tvol_20,\r\n\tselling_price\r\n\t) {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/orders/`,{\r\n\t\t\tmethod: 'POST',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n            body: JSON.stringify({\r\n\t            product: [product],\r\n\t            truck: truck,\r\n                entry_no: entry_no,\r\n\t\t\t\torder_no: order_no,\r\n\t\t\t\tdate: date,\r\n\t\t\t\tvol_obs:vol_obs,\r\n\t\t\t\tvol_20:vol_20,\r\n\t\t\t\tselling_price: selling_price,\r\n\t        })\r\n \r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\n// UPLOAD EXCEL\r\nexport async function upload_excel(file) {\r\n\tvar depot_id = store.getState().auth_reducer.token.depot_id\r\n\ttry{\r\n\t\t\r\n\t\tlet formData = new FormData()\r\n\t\tformData.append(\"file\", file)\r\n\t\t// formData.append(\"health_id\", health_id)\r\n\t\tlet rData = await fetch(`https://opl.azurewebsites.net/depots/${depot_id}/upload_excel/`,{\r\n\t\t\tmethod: 'POST',\r\n\t        headers: {\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t        },\r\n\t        body: formData\r\n \r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await rData.json();\r\n\t\t\r\n\t\trData = null;\r\n\t\t\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}","import {store} from \"../redux/store\"\r\n\r\n// ENTRY\r\nexport async function entry_update(\r\n    id,\r\n\tproduct, \r\n\ttruck,\r\n\tentry_no, \r\n\torder_no,\r\n\tdate,\r\n\tvol_obs,\r\n\tvol_20,\r\n\tselling_price\r\n\t) {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/orders/update/${id}/`,{\r\n\t\t\tmethod: 'PUT',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n            body: JSON.stringify({\r\n\t            product: product,\r\n\t            truck: truck,\r\n                entry_no: entry_no,\r\n\t\t\t\torder_no: order_no,\r\n\t\t\t\tdate: date,\r\n\t\t\t\tvol_obs:vol_obs,\r\n\t\t\t\tvol_20:vol_20,\r\n\t\t\t\tselling_price: selling_price,\r\n\t        })\r\n \r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\nexport async function entry_delete(id, data) {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tawait fetch(`https://opl.azurewebsites.net/orders/update/${id}/`,{\r\n\t\t\tmethod: 'DELETE',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n \r\n\t\t});\r\n\r\n\t\t\r\n\t\t\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}","import {\r\n\tget_token\r\n} from \"../../apis/auth\"\r\nimport {\r\n\tcustomer_list,\r\n\tproduct_list,\r\n\tentry_list,\r\n\tbi_list,\r\n\tproduct_bi_list,\r\n\tcustomer_bi_list,\r\n} from \"../../apis/list\"\r\nimport { \r\n\tcustomer_create, \r\n\ttruck_create,\r\n\tentry_create,\r\n\tupload_excel\r\n} from \"../../apis/create\"\r\n\r\nimport { entry_update, entry_delete} from \"../../apis/update\"\r\n\r\nimport {\r\n\tGET_TOKEN, GET_TOKEN_ERROR, GET_TOKEN_ERROR_REMOVE,\r\n\tCREATE_CUSTOMER, CREATE_CUSTOMER_ERROR, CUSTOMER_LIST,\r\n\tCREATE_TRUCK, CREATE_TRUCK_ERROR,\r\n\tCREATE_ENTRY, CREATE_ENTRY_ERROR, ENTRY_LIST, UPDATE_ENTRY, UPDATE_ENTRY_ERROR, DELETE_ENTRY, DELETE_ENTRY_ERROR,\r\n\tPRODUCT_LIST, PRODUCT_INDEX,\r\n\tBI_LIST, PRODUCT_BI_LIST, CUSTOMER_BI_LIST,\r\n\tCUSTOMER_DATA, ORDER_DATES, USER_LOGGED_OUT,\r\n\tUPLOAD_EXCEL,\r\n\tUPLOAD_EXCEL_ERROR,\r\n} from \"./actionTypes\"\r\n\r\n// LOGIN ACTIONS\r\n\r\nexport const GET_TOKEN_ACTION = (username, password) =>async dispatch => {\r\n\t\r\n\tawait get_token(username, password).then(data => {\r\n\t\tconsole.log(data)\r\n\t\tif (data.token !== undefined){\r\n\t\t\tdispatch({type:GET_TOKEN, payload:data})\r\n\t\t}\r\n\t\telse{\r\n\t\t\ttry{\r\n\t\t\t\tlet errors = data.non_field_errors\r\n\t\t\t\tdispatch({type:GET_TOKEN_ERROR, payload:{\"\":errors}})\r\n\t\t\t}catch(e){\r\n\t\t\t\tdispatch({type:GET_TOKEN_ERROR, payload:data})\r\n\t\t\t}\r\n\t \t}\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const GET_TOKEN_ERROR_REMOVE_ACTION = () => dispatch => {\r\n\tdispatch({type:GET_TOKEN_ERROR_REMOVE, payload:null})\r\n}\r\n\r\n// CUSTOMERS\r\n\r\nexport const CREATE_CUSTOMER_ACTION = (name, location) =>async dispatch => {\r\n\t\r\n\tawait customer_create(name, location).then(data => {\r\n\t\t\r\n\t\tif (data.name === name){\r\n\t\t\tdispatch({type:CREATE_CUSTOMER, payload:data})\r\n\t\t}\r\n\t\telse{\r\n\t\t\ttry{\r\n\t\t\t\tlet errors = data.non_field_errors\r\n\t\t\t\tdispatch({type:CREATE_CUSTOMER_ERROR, payload:{\"\":errors}})\r\n\t\t\t}catch(e){\r\n\t\t\t\tdispatch({type:CREATE_CUSTOMER_ERROR, payload:data})\r\n\t\t\t}\r\n\t \t}\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const CUSTOMER_LIST_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait customer_list().then(data => {\r\n\t\t\r\n\t\t\r\n\t\t\tdispatch({type:CUSTOMER_LIST, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\n\r\n// TRUCK ACTIONS\r\nexport const CREATE_TRUCK_ACTION = (customer, plate_no, driver) =>async dispatch => {\r\n\t\r\n\tawait truck_create(customer, plate_no, driver).then(data => {\r\n\t\t\r\n\t\tif (data.plate_no === plate_no){\r\n\t\t\tdispatch({type:CREATE_TRUCK, payload:data})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tdispatch({type:CREATE_TRUCK_ERROR, payload:data})\r\n\t \t}\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\n\r\n// ENTRY ACTIONS\r\nexport const CREATE_ENTRY_ACTION = (product, truck, entry_no, order_no, date, vol_obs, vol_20, selling_price) =>async dispatch => {\r\n\t\r\n\tawait entry_create(product, truck, entry_no, order_no, date, vol_obs, vol_20, selling_price).then(data => {\r\n\t\t\r\n\t\tif (data.entry_no === entry_no){\r\n\t\t\tdispatch({type:CREATE_ENTRY, payload:data})\r\n\t\t}\r\n\t\telse{\r\n\t\t\ttry{\r\n\t\t\t\tlet errors = data.non_field_errors\r\n\t\t\t\tdispatch({type:CREATE_ENTRY_ERROR, payload:{\"\":errors}})\r\n\t\t\t}catch(e){\r\n\t\t\t\tdispatch({type:CREATE_ENTRY_ERROR, payload:data})\r\n\t\t\t}\r\n\t \t}\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const UPDATE_ENTRY_ACTION = (id, product, truck, entry_no, order_no, date, vol_obs, vol_20, selling_price) =>async dispatch => {\r\n\t\r\n\tawait entry_update(id, product, truck, entry_no, order_no, date, vol_obs, vol_20, selling_price).then(data => {\r\n\t\t\r\n\t\tif (data.entry_no === entry_no){\r\n\t\t\tdispatch({type:UPDATE_ENTRY, payload:data})\r\n\t\t}\r\n\t\telse{\r\n\t\t\ttry{\r\n\t\t\t\tlet errors = data.non_field_errors\r\n\t\t\t\tdispatch({type:UPDATE_ENTRY_ERROR, payload:{\"\":errors}})\r\n\t\t\t}catch(e){\r\n\t\t\t\tdispatch({type:UPDATE_ENTRY_ERROR, payload:data})\r\n\t\t\t}\r\n\t \t}\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const DELETE_ENTRY_ACTION = (id, order) =>async dispatch => {\r\n\t\r\n\tawait entry_delete(id, order).then(data => {\r\n\t\t\r\n\t\tdispatch({type:DELETE_ENTRY, payload:data})\r\n\t\t// if (data.entry_no === entry_no){\r\n\t\t// \tdispatch({type:UPDATE_ENTRY, payload:data})\r\n\t\t// }\r\n\t\t// else{\r\n\t\t// \tdispatch({type:UPDATE_ENTRY_ERROR, payload:data})\r\n\t \t// }\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\n\r\nexport const ENTRY_LIST_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait entry_list().then(data => {\r\n\t\t\r\n\t\t\tdispatch({type:ENTRY_LIST, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\n// PRODUCTS\r\nexport const PRODUCT_LIST_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait product_list().then(data => {\r\n\t\t\tdispatch({type:PRODUCT_LIST, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const PRODUCT_INDEX_ACTION = (data) => dispatch => {\r\n\tdispatch({type:PRODUCT_INDEX, payload:data})\r\n}\r\n\r\n// BUSINESS INTELLIGENCE\r\nexport const BI_LIST_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait bi_list().then(data => {\r\n\t\t\tdispatch({type:BI_LIST, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const PRODUCT_BI_LIST_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait product_bi_list().then(data => {\r\n\t\t\tdispatch({type:PRODUCT_BI_LIST, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const CUSTOMER_BI_LIST_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait customer_bi_list().then(data => {\r\n\t\t\tdispatch({type:CUSTOMER_BI_LIST, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\n\r\n\r\n// HELPERS\r\n\r\nexport const CUSTOMER_DATA_ACTION = (data) => dispatch => {\r\n\tdispatch({type:CUSTOMER_DATA, payload:data})\r\n}\r\n\r\nexport const ORDER_DATES_ACTION = (data) => dispatch => {\r\n\tdispatch({type:ORDER_DATES, payload:data})\r\n}\r\n\r\nexport const USER_LOGGED_OUT_ACTION = () => dispatch => {\r\n\tdispatch({type:USER_LOGGED_OUT, payload:null})\r\n}\r\n\r\n// UPLOADS\r\nexport const UPLOAD_EXCEL_ACTION = (file) =>async dispatch => {\r\n\t\r\n\tawait upload_excel(file).then(data => {\r\n\t\t\tif(data.status === \"success\"){\r\n\t\t\t\tdispatch({type:UPLOAD_EXCEL, payload:data})\r\n\t\t\t}else{\r\n\t\t\t\tdispatch({type:UPLOAD_EXCEL_ERROR, payload:data})\r\n\t\t\t}\r\n\t\t\t\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Button, Form, Container, Row, Col, Alert} from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Triangle } from \"react-loader-spinner\";\r\n\r\nimport { \r\n    GET_TOKEN_ACTION, \r\n    CUSTOMER_LIST_ACTION,\r\n    PRODUCT_LIST_ACTION,\r\n    BI_LIST_ACTION,\r\n    PRODUCT_BI_LIST_ACTION,\r\n    ENTRY_LIST_ACTION,\r\n    CUSTOMER_BI_LIST_ACTION,\r\n    PRODUCT_INDEX_ACTION,\r\n    GET_TOKEN_ERROR_REMOVE_ACTION\r\n} from '../../redux/actions/actions';\r\n\r\nimport \"../../themes/theme1/login.css\"\r\n\r\nclass LoginPage extends Component{\r\n    state = {\r\n        spinner: false,\r\n        redirect: false,\r\n        email: \"\",\r\n        password: \"\",\r\n        show_error: false,\r\n        null_error: false\r\n    }\r\n\r\n    componentWillReceiveProps = async (nextProps) => {\r\n        if(nextProps.error){\r\n            this.setState({show_error: true})\r\n        }\r\n        if(nextProps.token){\r\n            if(nextProps.token.status_code === 201){\r\n                await this.props.CUSTOMER_LIST_ACTION()\r\n                await this.props.PRODUCT_LIST_ACTION()\r\n                await this.props.BI_LIST_ACTION()\r\n                await this.props.PRODUCT_BI_LIST_ACTION()\r\n                await this.props.ENTRY_LIST_ACTION()\r\n                await this.props.CUSTOMER_BI_LIST_ACTION()\r\n                await this.props.PRODUCT_INDEX_ACTION(0)\r\n                this.setState({\r\n                    spinner: false, \r\n                    redirect:true,\r\n                    email: \"\",\r\n                    password: \"\",\r\n                })\r\n            }\r\n        }\r\n        else{\r\n            this.setState({spinner:false})\r\n        }\r\n    }\r\n    onSubmit = async(event) => {\r\n        event.preventDefault()\r\n        const {email, password} = this.state\r\n        if(email === \"\" || password === \"\"){\r\n            this.setState({null_error:true})\r\n        }else{\r\n            this.setState({spinner:true})\r\n            await this.props.GET_TOKEN_ACTION(email, password)\r\n        }\r\n        \r\n    }\r\n    \r\n    componentWillMount = async() => {\r\n        await this.props.GET_TOKEN_ERROR_REMOVE_ACTION()\r\n        this.setState({show_error: false, null_error:false})\r\n    }\r\n    render(){\r\n        console.log(this.props.error)\r\n        if(this.state.redirect){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        return (\r\n            <Container>\r\n                \r\n                <Row className='login-row'>\r\n                    {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            ariaLabel=\"Please wait as we log you in ...\"\r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: null}\r\n                    <Col className='logo-col'>\r\n                        <img src='https://opl.azurewebsites.net/static/opl_logo.png' alt='logo' />\r\n                    </Col>\r\n                    <Col xs={7} className=\"form-col\">\r\n                        <div className='title-div'>\r\n                            <h3>Sign in To The Dashboard</h3>\r\n                            <p>Enter your email and password to sign in.</p>\r\n                        </div>\r\n                        {this.state.null_error ?  <Alert variant=\"danger\">The fields should not be empty</Alert>: null}\r\n                        {(this.props.error && this.state.show_error) ? \r\n                            Object.keys(this.props.error).map((key, idx) => \r\n                                <Alert key={idx} variant=\"danger\">{key}: {this.props.error[key][0]}</Alert>\r\n                            ): null}\r\n                        <Form onSubmit={this.onSubmit}>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Enter email\" \r\n                                    className='input' \r\n                                    onChange={(e) => this.setState({\r\n                                        email:e.target.value, \r\n                                        show_error:false,\r\n                                        null_error: false,\r\n                                    })}/>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                \r\n                                <Form.Control \r\n                                    type=\"password\" \r\n                                    placeholder=\"Password\" \r\n                                    className='input' \r\n                                    onChange={(e) => this.setState({\r\n                                        password:e.target.value, \r\n                                        show_error:false,\r\n                                        null_error: false\r\n                                    })}/>\r\n                            </Form.Group>\r\n                            \r\n                            <Button variant=\"primary\" type=\"submit\" className='submit'>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n               \r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      token: state.auth_reducer.token,\r\n      error: (state.auth_reducer.login_error ? state.auth_reducer.login_error: null),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    GET_TOKEN_ACTION,\r\n    CUSTOMER_LIST_ACTION,\r\n    PRODUCT_LIST_ACTION,\r\n    BI_LIST_ACTION,\r\n    PRODUCT_BI_LIST_ACTION,\r\n    ENTRY_LIST_ACTION,\r\n    CUSTOMER_BI_LIST_ACTION,\r\n    PRODUCT_INDEX_ACTION,\r\n    GET_TOKEN_ERROR_REMOVE_ACTION\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(LoginPage);\r\n  ","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\"\r\nimport '../themes/theme1/layout.css'\r\n\r\nclass HeaderComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <h5>{this.props.headerTitle}</h5>\r\n                <div className=\"left\">\r\n                    <Button variant=\"secondary\" size=\"sm\">{this.props.first_name[0]}{this.props.last_name[0]}</Button>\r\n                    <p className=\"header-name\">{this.props.first_name} {this.props.last_name}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponent;","import React from \"react\";\r\nimport {Container, Button} from 'react-bootstrap'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {MdLogout, MdDashboard,MdOutlineListAlt, MdOpacity, MdPeople, MdAnchor} from \"react-icons/md\";\r\nimport { Link, NavLink, Redirect} from \"react-router-dom\";\r\nimport '../themes/theme1/layout.css'\r\nimport HeaderComponent from \"./header\";\r\nimport {USER_LOGGED_OUT_ACTION} from \"../redux/actions/actions\"\r\n\r\nclass Layout extends React.Component {\r\n    state = {\r\n        dashboard: \"success\",\r\n        products: \"transparent\",\r\n        orders: \"transparent\",\r\n        customers: \"transparent\",\r\n        redirect: false,\r\n    }\r\n\r\n    handleClick = (btn) => {\r\n        \r\n        let links = [\"dashboard\", \"products\", \"orders\", \"customers\"]\r\n\r\n        let filtered = links.filter(function(value, index, arr){ \r\n            return value !== btn;\r\n        });\r\n        this.setState({btn:\"success\"})\r\n        filtered.map((link) => {\r\n            this.setState({link:\"transparent\"})\r\n        })\r\n       \r\n    }\r\n\r\n    handleLogOut = () => {\r\n        this.props.USER_LOGGED_OUT_ACTION()\r\n        this.setState({redirect:true})\r\n        \r\n    }\r\n    render(){\r\n        const {dashboard, products, orders, customers} = this.state\r\n        \r\n        console.log(this.props.token)\r\n        if(this.state.redirect){\r\n            return <Redirect to={\"/login\"} />\r\n        }\r\n        return (\r\n            <Container fluid className=\"main\">\r\n                \r\n                <div className=\"side\">\r\n                    <Link to=\"/\" className=\"logo\">\r\n                        <img src=\"https://opl.azurewebsites.net/static/opl_logo.png\" />\r\n                    </Link>\r\n                    \r\n                    <div className=\"links\">\r\n                        <NavLink to=\"/\" exact={true} className=\"button\">\r\n                            <h6><span><MdDashboard size={20} color=\"#D04D30\"/></span>Dashboard</h6>\r\n                        </NavLink>\r\n                        {/* <NavLink to=\"/products\" className=\"button\">\r\n                            <h6><span><MdAnchor /></span>Depots</h6>\r\n                        </NavLink> */}\r\n                        <NavLink to=\"/products\" className=\"button\">\r\n                            <h6><span><MdOpacity /></span>Products</h6>\r\n                        </NavLink>\r\n                        <NavLink to=\"/orders\" className=\"button\">\r\n                            <h6><span><MdOutlineListAlt /></span>Orders</h6>\r\n                        </NavLink>\r\n                        <NavLink to=\"/customers\" className=\"button\">\r\n                            <h6><span><MdPeople /></span>Customers</h6>\r\n                        </NavLink>\r\n                        <Button variant=\"transparent\" className=\"button logout\" onClick={this.handleLogOut}>\r\n                            <h6><span><MdLogout /></span>Log Out</h6>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"component\">\r\n                    {this.props.token ? \r\n                        <HeaderComponent headerTitle={this.props.headerTitle} first_name={this.props.token.data.first_name} last_name={this.props.token.data.last_name}/>:\r\n                        <HeaderComponent headerTitle={this.props.headerTitle} first_name={\"Hashim\"} last_name={\"Athman\"}/>}\r\n                    {this.props.children}\r\n                </div>\r\n                \r\n            </Container>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n      token: state.auth_reducer.token,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    USER_LOGGED_OUT_ACTION\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Layout);\r\n  ","import React from \"react\"\r\nimport ReactApexChart from 'react-apexcharts'\r\n\r\nclass ApexChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    \r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          type: 'bar',\r\n          height: 350\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: false,\r\n            columnWidth: '55%',\r\n            endingShape: 'rounded'\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        title: {\r\n          text: 'Products Trends by Months',\r\n          align: 'left'\r\n        },\r\n        stroke: {\r\n          show: true,\r\n          width: 2,\r\n          colors: ['transparent']\r\n        },\r\n        xaxis: {\r\n          categories: this.props.data.months,\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: '$ (Millions)'\r\n          }\r\n        },\r\n        fill: {\r\n          opacity: 1\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return \"$ \" + val + \" Millions\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n    \r\n    \r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount = () => {\r\n    const products = this.props.data.products\r\n    \r\n    let series = []\r\n    try{\r\n      for(let i=0; i < products.length; i++){\r\n        series = series.concat(\r\n            {\r\n              name: products[i].name,\r\n              data: products[i].values\r\n            }\r\n        )\r\n      }\r\n      \r\n      this.setState({series:series})\r\n    }\r\n    catch(err){\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n\r\n<div id=\"chart\">\r\n<ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\r\n</div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\nexport default ApexChart;","import React from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\n\r\nclass DailyVolChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        series: [],\r\n        options: {\r\n          chart: {\r\n            type: 'bar',\r\n            height: 430\r\n          },\r\n          plotOptions: {\r\n            bar: {\r\n              horizontal: true,\r\n              dataLabels: {\r\n                position: 'top',\r\n              },\r\n            }\r\n          },\r\n          dataLabels: {\r\n            enabled: true,\r\n            offsetX: -6,\r\n            style: {\r\n              fontSize: '10px',\r\n              colors: ['black']\r\n            }\r\n          },\r\n          title: {\r\n            text: 'Daily Orders',\r\n            align: 'left'\r\n          },\r\n          stroke: {\r\n            show: true,\r\n            width: 1,\r\n            colors: ['#fff']\r\n          },\r\n          tooltip: {\r\n            shared: true,\r\n            intersect: false\r\n          },\r\n          xaxis: {\r\n            type: \"date\",\r\n            categories: (this.props.data.dates ? this.props.data.dates:[])\r\n          },\r\n        },\r\n      \r\n      \r\n      };\r\n    }\r\n\r\n  \r\n    componentDidMount = () => {\r\n      const products = this.props.data.products\r\n      \r\n      let series = []\r\n      try{\r\n        for(let i=0; i < products.length; i++){\r\n          series = series.concat(\r\n              {\r\n                name: products[i].name,\r\n                data: products[i].orders\r\n              }\r\n          )\r\n        }\r\n        \r\n        this.setState({series:series})\r\n      }\r\n      catch(err){\r\n\r\n      }\r\n    }\r\n    render() {\r\n      return (\r\n        \r\n    <div className='chart-area'>\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\r\n        </div>\r\n    </div>\r\n    \r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\nexport default DailyVolChart","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\"\r\n\r\nclass ComparisonChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        series: [45, 55],\r\n        options: {\r\n          chart: {\r\n            width: 180,\r\n            type: 'donut',\r\n          },\r\n          plotOptions: {\r\n            pie: {\r\n              startAngle: -90,\r\n              endAngle: 270\r\n            }\r\n          },\r\n          dataLabels: {\r\n            enabled: false\r\n          },\r\n          fill: {\r\n            type: 'gradient',\r\n          },\r\n          \r\n          title: {\r\n            text: 'Products Comparison (Vol OBS)'\r\n          },\r\n          responsive: [{\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 200\r\n              },\r\n             \r\n            }\r\n          }]\r\n        },\r\n      \r\n      \r\n      };\r\n    }\r\n\r\n  \r\n\r\n    render() {\r\n      return (\r\n        \r\n    <div className=\"chart-area\">\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"donut\" width={400} />\r\n        </div>\r\n    </div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n  export default ComparisonChart;","import React from 'react'\r\nimport ReactApexChart from \"react-apexcharts\"\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass MainChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        \r\n          series: [],\r\n          options: {\r\n            chart: {\r\n              height: 350,\r\n              type: 'area'\r\n            },\r\n            dataLabels: {\r\n              enabled: false\r\n            },\r\n            stroke: {\r\n              curve: 'straight'\r\n            },\r\n            title: {\r\n                text: 'Revenue by Day',\r\n                align: 'left'\r\n              },\r\n            xaxis: {\r\n              type: 'date',\r\n              categories: (this.props.data.dates ? this.props.data.dates:[])\r\n            },\r\n            yaxis: {\r\n              title: {\r\n                text: '$ (Millions)'\r\n              }\r\n            },\r\n            tooltip: {\r\n              x: {\r\n                format: 'dd/MM/yy'\r\n              },\r\n            },\r\n          },\r\n        \r\n        \r\n        };\r\n      }\r\n    \r\n      componentDidMount = () => {\r\n        const products = this.props.data.products\r\n        \r\n        let series = []\r\n        try{\r\n          for(let i=0; i < products.length; i++){\r\n            series = series.concat(\r\n                {\r\n                  name: products[i].name,\r\n                  data: products[i].values\r\n                }\r\n            )\r\n          }\r\n          \r\n          this.setState({series:series})\r\n        }\r\n        catch(err){\r\n\r\n        }\r\n      }\r\n    render(){\r\n      \r\n        return (\r\n            <div className='chart-area'>\r\n                <div id=\"chart\">\r\n                <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" height={350} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    bi: (state.list_reducer.bi_list ? state.list_reducer.bi_list: {})\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps =  {\r\n  \r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MainChart);\r\n","import React from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport ApexChart from './chart1';\r\nimport ComparisonChart from './chart2';\r\nimport DailyVolChart from './charts/daily_vol';\r\nimport MainChart from './charts/main_chart';\r\n\r\nclass ChartsSection extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.my_ref = React.createRef()\r\n        this.state = {\r\n            data: {}\r\n        }\r\n    }\r\n    \r\n    componentDidMount = async()=>{\r\n       \r\n    }\r\n    render(){\r\n        const daily_products_comp = this.props.bi_list.daily_products_comp\r\n        const months = this.props.bi_list.months\r\n        return (\r\n            <div className='charts-section'>\r\n                <Row>\r\n                    <Col xs={7}>\r\n                        <MainChart data={daily_products_comp}/>\r\n                    </Col>\r\n                    <Col>\r\n                        <DailyVolChart data={daily_products_comp}/>\r\n                    </Col>\r\n                </Row>\r\n                 <Row>\r\n                    <Col>                 \r\n                        <div className='chart-area'>\r\n                            <ApexChart data={months}/>\r\n                        </div>\r\n                    </Col>\r\n                    {/* <Col>\r\n                        <ComparisonChart />\r\n                    </Col> */}\r\n                </Row>\r\n            </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default ChartsSection","import React from 'react'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {MdTrendingDown, MdTrendingUp} from \"react-icons/md\"\r\nimport '../../themes/theme1/home.css'\r\n\r\nclass Customers extends React.Component {\r\n    numberWithCommas = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className='customer-top'>\r\n                    <h6>Top Customers This Month</h6>\r\n                    <div className='legends'>\r\n                        <div className='legend-item'>\r\n                            \r\n                        </div>\r\n\r\n                        <div className='legend-item'>\r\n                           \r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                \r\n                <Row className='customer-row'>\r\n                    {this.props.data.map((customer, idx) => \r\n                    <Col key={idx} xs={3}>\r\n                        \r\n                            <div className='customer' >\r\n                                <div className='customer-total'>\r\n                                    <h5 className='customer-amount'>Kshs. {this.numberWithCommas(customer.amount)}</h5>\r\n                                    \r\n                                </div>\r\n                                <div className='customer-info'>\r\n                                    <div className='customer-profile'>\r\n                                        {customer.increase ? <MdTrendingUp size={30} color='green'/> : <MdTrendingDown size={30} color='red' />}\r\n                                    </div>\r\n                                    <div>\r\n                                        <h6 className='customer-name'>{customer.name}</h6>\r\n                                        <p className='customer-location'>{customer.location}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        \r\n                    </Col>\r\n                    )}\r\n                </Row>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Customers","import React from 'react';\r\nimport {Form, Row, Col, Button, Alert} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport {Triangle} from \"react-loader-spinner\"\r\n\r\nimport { CREATE_ENTRY_ACTION } from '../../redux/actions/actions';\r\nimport '../../themes/theme1/home.css'\r\n\r\nclass UploadForm extends React.Component {\r\n    state = {\r\n        product: null,\r\n        truck: null,\r\n        entry_no: \"\",\r\n        order_no: \"\",\r\n        date: new Date(),\r\n        vol_obs: null,\r\n        vol_20: null,\r\n        selling_price: null,\r\n        trucks: [],\r\n\r\n        spinner:false,\r\n        success: false,\r\n        null_error: false,\r\n    }\r\n\r\n    customerSelect = (idx) => {\r\n        let customer = this.props.customers[idx]\r\n        this.setState({trucks: this.state.trucks.concat(customer.trucks)})\r\n    }\r\n\r\n    componentWillReceiveProps = async(nextProps) => {\r\n        \r\n        if (nextProps.created_entry.entry_no === this.state.entry_no) {\r\n            this.setState({spinner:false, success:true})\r\n        }else{\r\n            this.setState({spinner: false})\r\n        }\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const {product, truck, entry_no, order_no, date, vol_obs, vol_20, selling_price} = this.state\r\n        \r\n        let items = [product, truck, entry_no, order_no, date, vol_obs, vol_20, selling_price]\r\n        let null_error = false\r\n        for(let i=0; i<items.length; i++){\r\n            if(items[i] === null || items[i] === \"\" || items[i] === undefined){\r\n                null_error = true\r\n            }\r\n        }\r\n\r\n        if(null_error){\r\n            this.setState({null_error:true})\r\n        }else{\r\n            this.setState({spinner:true})\r\n            await this.props.CREATE_ENTRY_ACTION(product, truck, entry_no, order_no, date, vol_obs, vol_20, selling_price)\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        const {date, trucks} = this.state\r\n        const {products, customers} = this.props\r\n\r\n        return (\r\n            <div className='upload-form'>\r\n\r\n                {/* SPINNER */}\r\n                {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: null}\r\n\r\n                    {/* FORM */}\r\n                <h4 className='upload-title'>Fill the information</h4>\r\n\r\n                 {/* If successful */}\r\n                 {this.state.success ?\r\n                <Alert variant={\"success\"} size=\"sm\">\r\n                    Entry Created successful\r\n                </Alert>: null}\r\n\r\n                {/* Null error */}\r\n                {this.state.null_error ?\r\n                <Alert variant={\"danger\"} size=\"sm\">\r\n                    All the fields must be field\r\n                </Alert>: null}\r\n                \r\n                {/* IF errors */}\r\n                {this.state.show_errors ?\r\n                    Object.keys(this.props.error).map((key, idx) => \r\n                        <Alert key={idx} variant=\"danger\">{key}: {this.props.create_customer_error[key][0]}</Alert>\r\n                    )\r\n                : null}\r\n\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Date</Form.Label>\r\n                        <Form.Control type=\"date\" placeholder=\"Date\" size='sm' value={date} onChange={(e)=>this.setState({date:e.target.value})}/>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Product</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.setState({product:e.target.value})}>\r\n                            <option>Select</option>\r\n                            {products.map((product) => \r\n                                <option value={product.id}>{product.name}</option>\r\n                            )}\r\n                            \r\n                            \r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <Row style={{marginTop:0, height:'auto'}}>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Customer</Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.customerSelect(e.target.value)}>\r\n                                    <option>Select</option>\r\n                                    {customers.map((customer, idx) => \r\n                                        <option value={idx}>{customer.name}</option>\r\n                                    )}\r\n                                    \r\n                                    \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Truck</Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.setState({truck:e.target.value})}>\r\n                                    <option>Select</option>\r\n                                    {trucks.map((truck) => \r\n                                        <option value={truck.id}>{truck.plate_no}</option>\r\n                                    )}\r\n                                    \r\n                                    \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <h6 className='upload-form-details'>Details</h6>\r\n\r\n                    \r\n\r\n                    <Row style={{marginTop:0, height:'auto'}}>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Order No</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' onChange={(e)=>this.setState({order_no:e.target.value})}/>\r\n                            </Form.Group>\r\n                            \r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Entry no</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' onChange={(e)=>this.setState({entry_no:e.target.value})}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row style={{marginTop:0, height:'auto'}}>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Vol OBS</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' onChange={(e)=>this.setState({vol_obs:e.target.value})}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Vol@20</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' onChange={(e)=>this.setState({vol_20:e.target.value})}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Selling Price</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' onChange={(e)=>this.setState({selling_price:e.target.value})}/>\r\n                    </Form.Group>\r\n                    <div align='center'>\r\n                    <Button variant='primary' type='submit'>Upload</Button>\r\n                    </div>\r\n                    \r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      created_entry: state.create_reducer.created_entry,\r\n      error: (state.create_reducer.create_entry_error ? state.create_reducer.create_entry_error: null),\r\n      customers: (state.list_reducer.customers ? state.list_reducer.customers: []),\r\n      products: (state.list_reducer.products ? state.list_reducer.products: []),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    CREATE_ENTRY_ACTION\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(UploadForm);\r\n  ","import React from 'react';\r\nimport {Form, Button, Alert} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport {Triangle} from \"react-loader-spinner\"\r\nimport { CREATE_CUSTOMER_ACTION, CUSTOMER_LIST_ACTION } from '../../redux/actions/actions';\r\nimport '../../themes/theme1/home.css'\r\n\r\nclass CustomerUpload extends React.Component {\r\n    state = {\r\n        name:\"\",\r\n        location:\"\",\r\n        spinner: false,\r\n        success: false,\r\n        null_error: false,\r\n        show_errors: false,\r\n    }\r\n\r\n    componentWillReceiveProps = async(nextProps) => {\r\n        if(nextProps.create_customer_error){\r\n            this.setState({show_errors:true, spinner:false})\r\n        }\r\n        else if (nextProps.created_customer.name === this.state.name) {\r\n            await this.props.CUSTOMER_LIST_ACTION()\r\n            this.setState({spinner:false, success:true, name:\"\", location:\"\"})\r\n        }else{\r\n            this.setState({spinner: false})\r\n        }\r\n    }\r\n    onSubmit =async (event)=>{\r\n        event.preventDefault()\r\n        \r\n        const {name, location} = this.state\r\n        \r\n        if(name === \"\" || location === \"\"){\r\n            this.setState({null_error: true})\r\n        }else{\r\n            this.setState({spinner:true})\r\n            await this.props.CREATE_CUSTOMER_ACTION(name, location)\r\n        }\r\n      \r\n    }\r\n\r\n    \r\n    render(){\r\n        return (\r\n            <div className='upload-form'>\r\n                 {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: null}\r\n                <h4>Customer information</h4>\r\n\r\n                {/* If successful */}\r\n                {this.state.success ?\r\n                <Alert variant={\"success\"} size=\"sm\">\r\n                    Customer created successful\r\n                </Alert>: null}\r\n                \r\n                {/* IF null error */}\r\n                {this.state.null_error ?\r\n                <Alert variant={\"danger\"} size=\"sm\">\r\n                    The fields cannot be empty\r\n                </Alert>: null}\r\n\r\n                {/* IF errors */}\r\n                {this.state.show_errors ?\r\n                    Object.keys(this.props.error).map((key, idx) => \r\n                        <Alert key={idx} variant=\"danger\">{key}: {this.props.create_customer_error[key][0]}</Alert>\r\n                    )\r\n                : null}\r\n\r\n\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Customer name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Name\" size='sm' value={this.state.name} \r\n                            onChange={(e)=>this.setState({name:e.target.value, success:false, null_error:false, show_errors:false})}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Location</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Name\" size='sm' value={this.state.location} \r\n                        onChange={(e) => this.setState({location: e.target.value, success:false, null_error:false, show_errors:false})}/>\r\n\r\n                    </Form.Group>\r\n\r\n                    <div>\r\n                    <Button variant='primary' type='submit' size='sm'>Add</Button>\r\n                    </div>\r\n                    \r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      created_customer: state.create_reducer.created_customer,\r\n      error: (state.create_reducer.create_customer_error ? state.create_reducer.create_customer_error: null),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    CREATE_CUSTOMER_ACTION,\r\n    CUSTOMER_LIST_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomerUpload);\r\n  ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Form, Button, Alert} from 'react-bootstrap';\r\nimport {Triangle} from \"react-loader-spinner\"\r\n\r\nimport { CREATE_TRUCK_ACTION, CUSTOMER_LIST_ACTION } from '../../redux/actions/actions';\r\n\r\nimport '../../themes/theme1/home.css'\r\n\r\nclass TruckUpload extends React.Component {\r\n\r\n    state = {\r\n        customer: null,\r\n        plate_no: \"\",\r\n        driver: \"\",\r\n        spinner: false,\r\n        success: false,\r\n    }\r\n    componentWillReceiveProps = async(nextProps) => {\r\n        if (nextProps.created_truck.plate_no === this.state.plate_no) {\r\n            await this.props.CUSTOMER_LIST_ACTION()\r\n            this.setState({spinner:false, success:true, plate_no:\"\", driver:\"\"})\r\n        }else{\r\n            this.setState({spinner: false})\r\n        }\r\n    }\r\n    onSubmit =async (event)=>{\r\n        event.preventDefault()\r\n        const {customer, plate_no, driver} = this.state\r\n        this.setState({spinner:true})\r\n        \r\n        await this.props.CREATE_TRUCK_ACTION(customer, plate_no, driver)\r\n    }\r\n    render(){\r\n        return (\r\n            <div className='upload-form'>\r\n                 {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: null}\r\n                <h4>Truck information</h4>\r\n\r\n                {/* If successful */}\r\n                {this.state.success ?\r\n                <Alert variant={\"success\"} size=\"sm\">\r\n                    Truck created successful\r\n                </Alert>: null}\r\n\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Customer</Form.Label>\r\n                        <Form.Select aria-label=\"Customers\" size='sm' onChange={(e) => this.setState({customer:e.target.value, success:false})}>\r\n                        <option>Select</option>\r\n                            {this.props.customers.map((customer) => \r\n                                <option value={customer.id}>{customer.name}</option>\r\n                            )} \r\n                            \r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Truck Number</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Truck no\" size='sm' value={this.state.plate_no} onChange={(e)=>this.setState({plate_no:e.target.value, success:false})}/>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Driver Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Driver name\" size='sm' value={this.state.driver} onChange={(e)=>this.setState({driver:e.target.value, success:false})}/>\r\n                    </Form.Group>\r\n                    <div>\r\n                        <Button variant='primary' type='submit' size='sm'>Add</Button>\r\n                    </div>\r\n                    \r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      created_truck: state.create_reducer.created_truck,\r\n      customers: (state.list_reducer.customers ? state.list_reducer.customers: []),\r\n      \r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    CREATE_TRUCK_ACTION,\r\n    CUSTOMER_LIST_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(TruckUpload);\r\n  ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Form, Alert, Button} from 'react-bootstrap'\r\nimport {Triangle} from \"react-loader-spinner\"\r\n\r\nimport {UPLOAD_EXCEL_ACTION} from \"../../redux/actions/actions\"\r\n\r\nclass UploadExcel extends React.Component {\r\n\r\n    state = {\r\n        file: null,\r\n        spinner: false,\r\n        success: false,\r\n        show_error: false,\r\n        null_error: false,\r\n    }\r\n\r\n    componentWillReceiveProps = async(nextProps) => {\r\n        if(nextProps.upload_excel_error){\r\n            this.setState({show_error:true, spinner:false})\r\n        }else{\r\n            this.setState({spinner:false, success:true})\r\n        }\r\n        \r\n    }\r\n\r\n    onSubmit =async (event)=>{\r\n        event.preventDefault()\r\n        const {file} = this.state\r\n        if(file === null){\r\n            this.setState({null_error:true})\r\n        }else{\r\n            this.setState({spinner:true})\r\n            await this.props.UPLOAD_EXCEL_ACTION(file)\r\n        }\r\n       \r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className='upload-form'>\r\n                 {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: null}\r\n                <h5>Upload File</h5>\r\n\r\n                {/* If successful */}\r\n                {this.state.success ?\r\n                <Alert variant={\"success\"} size=\"sm\">\r\n                    File Uploaded successful\r\n                </Alert>: null}\r\n\r\n                {/* If error */}\r\n                {this.state.show_error ?\r\n                <Alert variant={\"danger\"} size=\"sm\">\r\n                    {this.props.upload_excel_error.message}\r\n                </Alert>: null}\r\n                \r\n                {/* If null */}\r\n                {this.state.null_error ?\r\n                <Alert variant={\"danger\"} size=\"sm\">\r\n                    You must select an excel file!\r\n                </Alert>: null}\r\n\r\n                <Form onSubmit={this.onSubmit}>\r\n                    \r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>File</Form.Label>\r\n                        <Form.Control \r\n                            type=\"file\" \r\n                            accept=\".xlsx, .xls, .csv\" \r\n                            placeholder=\"File\" \r\n                            size='sm' \r\n                            onChange={(e) => this.setState({file:e.target.files[0]})}\r\n                        />\r\n                    </Form.Group>\r\n                    \r\n                    <div>\r\n                        <Button \r\n                            variant='primary' \r\n                            type='submit' \r\n                            \r\n                            value={this.state.file} \r\n                            size='sm' \r\n                            >\r\n                                Upload\r\n                            </Button>\r\n                    </div>\r\n                        \r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      uploaded_excel: state.create_reducer.uploaded_excel,\r\n      upload_excel_error: state.create_reducer.upload_excel_error,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    UPLOAD_EXCEL_ACTION\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(UploadExcel);\r\n  ","import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\n\r\nimport { MdOutlineAddCircle, MdCalendarToday, MdKeyboardArrowDown, MdCloudDownload} from \"react-icons/md\";\r\nimport { SiMicrosoftexcel} from \"react-icons/si\";\r\n\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport {Button} from 'react-bootstrap'\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport '../../themes/theme1/home.css'\r\nimport 'reactjs-popup/dist/index.css';\r\n\r\nimport UploadForm from './upload_form';\r\nimport CustomerUpload from './customer-upload';\r\nimport TruckUpload from './truck_upload';\r\nimport UploadExcel from './upload_excel';\r\n\r\nclass MyComponent extends React.Component {\r\n    state = {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: 'selection', \r\n      }\r\n  handleSelect = (ranges) => {\r\n    \r\n    this.setState({\r\n        startDate:ranges.selection.startDate,\r\n        endDate: ranges.selection.endDate\r\n    })\r\n\r\n    \r\n  }\r\n  render(){\r\n    \r\n    return (\r\n        <div className='inputs'>\r\n            <div className='buttons'>\r\n                <Popup trigger={\r\n                    <Button className='input-dates' size='sm'>\r\n                        <div className='input-display'>\r\n                            <span><MdCalendarToday color='#D04D30' size={18}/></span>\r\n                            {this.state.startDate.toDateString()} - {this.state.endDate.toDateString()}\r\n                            <span>\r\n                                {/* <MdKeyboardArrowDown size={18}/> */}\r\n                            </span>\r\n                        </div>\r\n                        \r\n                    </Button>\r\n                } \r\n                    position=\"bottom\"\r\n                >\r\n                {/* <DateRangePicker\r\n                    onChange={this.handleSelect}\r\n                    showSelectionPreview={true}\r\n                    moveRangeOnFirstSelection={false}\r\n                    months={2}\r\n                    ranges={[this.state]}\r\n                    direction=\"horizontal\"\r\n                    preventSnapRefocus={true}\r\n                    calendarFocus=\"backwards\"\r\n                    className='date-range'\r\n                /> */}\r\n                </Popup>\r\n                \r\n                <div className='form'>\r\n                    <Button \r\n                        variant=\"secondary\" \r\n                        size='sm' \r\n                        className='add-button' \r\n                        style={{color:\"black\"}}\r\n                        onClick={()=> window.open(`https://opl.azurewebsites.net/depots/download/`, \"_blank\")}\r\n                    >\r\n                        <MdCloudDownload color=\"green\" size={20}/> \r\n                        Template \r\n                    </Button>\r\n                    <Popup \r\n                        contentStyle={{width:300}}\r\n                        trigger={\r\n                        <Button variant=\"secondary\" size='sm' className='add-button' style={{color:\"black\"}}>\r\n                            <SiMicrosoftexcel color=\"green\" size={20}/> \r\n                              Upload \r\n                        </Button>\r\n                        } \r\n                        position=\"bottom center\"\r\n                        \r\n                    >\r\n                        <UploadExcel />\r\n                        \r\n                    </Popup>\r\n\r\n                    <Popup \r\n                        contentStyle={{width:300}}\r\n                        trigger={\r\n                        <Button variant=\"info\" size='sm' className='add-button'>\r\n                            <MdOutlineAddCircle color=\"#e9e7ec\" size={20}/> \r\n                            Customer\r\n                        </Button>\r\n                        } \r\n                        position=\"bottom center\"\r\n                        \r\n                    >\r\n                        <CustomerUpload />\r\n                        \r\n                    </Popup>\r\n                    {/* <Popup \r\n                        contentStyle={{width:300}}\r\n                        trigger={\r\n                        <Button variant=\"warning\" size='sm' className='add-button'>\r\n                            <MdOutlineAddCircle color=\"#e9e7ec\" size={20}/> \r\n                            Truck\r\n                        </Button>\r\n                        } \r\n                        position=\"bottom center\"\r\n                        \r\n                    >\r\n                        <TruckUpload />\r\n                        \r\n                    </Popup> */}\r\n                    <Popup \r\n                        contentStyle={{width:500, minHeight:400}}\r\n                        trigger={\r\n                        <Button variant=\"primary\" size='sm' className='add-button'>\r\n                            <MdOutlineAddCircle color=\"#e9e7ec\" size={20}/> \r\n                            Add Order\r\n                        </Button>\r\n                        } \r\n                        position=\"left top\"\r\n                        \r\n                    >\r\n                        <UploadForm />\r\n                        \r\n                    </Popup>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n        \r\n    )\r\n  }\r\n}\r\n\r\nexport default MyComponent","import React from 'react';\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport { MdSupervisorAccount, MdOutlineAttachMoney, MdOutlineListAlt} from \"react-icons/md\";\r\nimport { GiMoneyStack} from \"react-icons/gi\";\r\n\r\nimport '../../themes/theme1/home.css'\r\n\r\nclass TopTabs extends React.Component {\r\n    numberWithCommas = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    render(){\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <div className='tab'>\r\n                        <div className='icon'>\r\n                            <GiMoneyStack size={30} color=\"#866365\"/>\r\n                        </div>\r\n                        <div className='tab-text'>\r\n                            <p className='tab-title'>Total Revenue</p>\r\n                            <h5 className='tab-amount'>Kshs. {this.numberWithCommas(this.props.total_earns)}</h5>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div className='tab'>\r\n                        <div className='icon'>\r\n                            <MdOutlineListAlt size={30} color=\"green\"/>\r\n                        </div>\r\n                        <div className='tab-text'>\r\n                            <p className='tab-title'>Total Orders</p>\r\n                            <h5 className='tab-amount'>{this.props.total_orders}</h5>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div className='tab'>\r\n                        <div className='icon'>\r\n                            <MdSupervisorAccount size={30} color=\"#304577\"/>\r\n                        </div>\r\n                        <div className='tab-text'>\r\n                            <p className='tab-title'>Total Customers</p>\r\n                            <h5 className='tab-amount'>{this.props.total_customers}</h5>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopTabs","import React from 'react';\r\n\r\nimport {Alert} from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Triangle } from 'react-loader-spinner';\r\n\r\nimport { BI_LIST_ACTION } from '../../redux/actions/actions';\r\nimport Layout from '../layout';\r\nimport ChartsSection from './charts_section';\r\nimport Customers from './customers';\r\nimport InputComponent from './input-section'\r\nimport TopTabs from './top-tabs'\r\n\r\n\r\nclass HomePage extends React.Component {\r\n    state = {\r\n        redirect:false,\r\n        spinner: false,\r\n        didnt_load: false,\r\n        \r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if (this.props.bi_list.daily_products_comp.total_earns){\r\n            this.setState({spinner:false, didnt_load:false})\r\n        }else{\r\n            this.setState({spinner:false, didnt_load:true})\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    componentWillMount = async() => {\r\n        const token = this.props.token\r\n        if(token === undefined || token===\"\"){\r\n            this.setState({redirect:true})    \r\n        }else {\r\n            this.setState({spinner:true})\r\n            await this.props.BI_LIST_ACTION()\r\n        }\r\n    }\r\n    render(){\r\n        \r\n        if(this.state.redirect){\r\n            return <Redirect to={\"/login\"} />\r\n        }\r\n        return (\r\n            <Layout headerTitle={\"Dashboard\"}>\r\n            <InputComponent />\r\n            {this.state.didnt_load ? \r\n                <div>\r\n                    <Alert variant={\"info\"} size=\"sm\">\r\n                        Nothing to show now. Until data is uploaded\r\n                    </Alert>\r\n                </div>\r\n            :\r\n            <div>\r\n                {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: \r\n                    <div>\r\n                        \r\n                        <TopTabs \r\n                            total_earns={this.props.bi_list.daily_products_comp.total_earns} \r\n                            total_orders={this.props.bi_list.daily_products_comp.total_orders}\r\n                            total_customers = {this.props.bi_list.daily_products_comp.total_customers}\r\n                        />\r\n                        <ChartsSection bi_list={this.props.bi_list}/>\r\n                        <Customers data={this.props.bi_list.customers_month}/>\r\n                    </div>\r\n                }\r\n \r\n            </div>}\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      token: state.auth_reducer.token,\r\n      bi_list: (state.list_reducer.bi_list ? state.list_reducer.bi_list: {})\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    BI_LIST_ACTION\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(HomePage);\r\n  ","import React from \"react\";\r\nimport ReactExport from \"react-export-excel\";\r\nimport { SiMicrosoftexcel} from \"react-icons/si\";\r\nimport {Button} from \"react-bootstrap\"\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\n\r\n\r\nexport default class DownloadFile extends React.Component {\r\n    \r\n    render() {\r\n        console.log(this.props.entries[0])\r\n        return (\r\n            <ExcelFile element={<Button variant=\"transparent\" className=\"exports\">\r\n                    <SiMicrosoftexcel size={25} color=\"green\"/>\r\n                </Button>}>\r\n                <ExcelSheet data={this.props.entries} name=\"Employees\">\r\n                    <ExcelColumn label=\"Date\" value=\"date\"/>\r\n                    {/* <ExcelColumn label=\"Product\" value=\"product\"/> */}\r\n                    <ExcelColumn label=\"Order No\" value=\"order_no\"/>\r\n                    <ExcelColumn label=\"Entry No\" value=\"entry_no\"/>\r\n                    <ExcelColumn label=\"S.Price\" value=\"selling_price\"/>\r\n                    <ExcelColumn label=\"OBS Vol\" value=\"vol_obs\"/>\r\n                    <ExcelColumn label=\"Vol@20\" value=\"vol_20\"/>\r\n                    <ExcelColumn label=\"Amount\" value=\"amount\"/>\r\n                </ExcelSheet>\r\n                \r\n            </ExcelFile>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\"\r\nimport {connect} from \"react-redux\"\r\nimport { ORDER_DATES_ACTION } from \"../../redux/actions/actions\";\r\nimport { MdCalendarToday, MdKeyboardArrowDown} from \"react-icons/md\";\r\nimport { SiMicrosoftexcel} from \"react-icons/si\";\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport Popup from 'reactjs-popup';\r\nimport DownloadFile from \"./excel\";\r\n\r\nimport '../../themes/theme1/orders.css'\r\n\r\n\r\nclass TopComponent extends React.Component {\r\n    state = {\r\n        startDate: new Date(this.props.order_dates.start_date),\r\n        endDate: new Date(this.props.order_dates.end_date),\r\n        key: 'selection', \r\n        date: true,\r\n        cost: false,\r\n      }\r\n    \r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.setState({\r\n            startDate: new Date(nextProps.order_dates.start_date),\r\n            endDate: new Date(nextProps.order_dates.end_date),\r\n        })\r\n    }\r\n    handleSelect = async(ranges) => {\r\n        \r\n        this.setState({\r\n            startDate:ranges.selection.startDate,\r\n            endDate: ranges.selection.endDate\r\n        })\r\n\r\n        const dates = {\r\n            start_date: ranges.selection.startDate,\r\n            end_date: ranges.selection.endDate\r\n        }\r\n        await this.props.ORDER_DATES_ACTION(dates)\r\n      }\r\n    render() {\r\n        \r\n        const start_date = this.state.startDate\r\n        const end_date = this.state.endDate\r\n        return (\r\n            <div>\r\n                 <div className=\"order-top\">\r\n                    \r\n                    <Popup trigger={\r\n                            <Button className='input-dates' size='sm'>\r\n                                <div className='input-display'>\r\n                                    <span><MdCalendarToday color='#D04D30' size={18}/></span>\r\n                                    {start_date.toDateString()} - {end_date.toDateString()}\r\n                                    <span><MdKeyboardArrowDown size={18}/></span>\r\n                                </div>\r\n                                \r\n                            </Button>\r\n                        } \r\n                            position=\"bottom\"\r\n                        >\r\n                        <DateRangePicker\r\n                            onChange={this.handleSelect}\r\n                            showSelectionPreview={true}\r\n                            moveRangeOnFirstSelection={false}\r\n                            months={2}\r\n                            ranges={[this.state]}\r\n                            direction=\"horizontal\"\r\n                            preventSnapRefocus={true}\r\n                            calendarFocus=\"backwards\"\r\n                            className='date-range'\r\n                        />\r\n                    </Popup>\r\n                    {/* <DownloadFile entries={this.props.entries}/> */}\r\n                </div>\r\n\r\n        </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const dates = {\r\n        start_date:new Date(2022, 1, 20), \r\n        end_date: new Date(2022, 1, 28)\r\n    }\r\n    return {\r\n      order_dates: (state.list_reducer.order_dates ? state.list_reducer.order_dates:dates ),\r\n      entries: (state.list_reducer.entries ? state.list_reducer.entries: []),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    ORDER_DATES_ACTION\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(TopComponent);\r\n  ","import React from 'react';\r\nimport {connect} from \"react-redux\"\r\nimport {Form, Row, Col, Button, Alert} from 'react-bootstrap';\r\nimport {Triangle} from \"react-loader-spinner\"\r\n\r\nimport { UPDATE_ENTRY_ACTION, ENTRY_LIST_ACTION } from '../../redux/actions/actions';\r\nimport '../../themes/theme1/home.css'\r\nclass EditForm extends React.Component {\r\n    state = {\r\n        date: this.props.order.date,\r\n        product: this.props.order.product,\r\n        product_id: this.props.order.product.id,\r\n        truck: this.props.order.truck,\r\n        truck_id: this.props.order.truck.id,\r\n        customer: this.props.customers.filter(x=>x.name === this.props.order.truck.customer)[0],\r\n        customer_changed: false,\r\n        customers: this.props.customers.filter(x=>x.name !== this.props.order.truck.customer),\r\n        other_products: this.props.products.filter(x => x.name !== this.props.order.product.name),\r\n        order_no: this.props.order.order_no,\r\n        entry_no: this.props.order.entry_no ? this.props.order.entry_no: \"\",\r\n        vol_obs: this.props.order.vol_obs,\r\n        vol_20: this.props.order.vol_20,\r\n        selling_price: this.props.order.selling_price,\r\n\r\n        spinner: false,\r\n        success: false,\r\n        null_error: false,\r\n        show_errors: false,\r\n    }\r\n\r\n    customerChange = (id) => {\r\n        \r\n        this.setState({customer: this.props.customers.filter(x => x.id === parseInt(id))[0], customer_changed:true})\r\n    }\r\n\r\n    componentWillReceiveProps = async(nextProps) => {\r\n        \r\n        if (nextProps.updated_entry.entry_no === this.state.entry_no) {\r\n            await this.props.ENTRY_LIST_ACTION()\r\n            this.setState({spinner:false, success:true})\r\n        }else{\r\n            this.setState({spinner: false})\r\n        }\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const {product, truck, entry_no, order_no, date, vol_obs, vol_20, selling_price} = this.state\r\n        let items = [product, truck, entry_no, order_no, date, vol_obs, vol_20, selling_price]\r\n        let null_error = false\r\n        for(let i=0; i<items.length; i++){\r\n            if(items[i] === null || items[i] === \"\" || items[i] === undefined){\r\n                null_error = true\r\n            }\r\n        }\r\n        if(null_error){\r\n            this.setState({null_error:true})\r\n        }else{\r\n            this.setState({spinner:true}) \r\n            // await this.props.UPDATE_ENTRY_ACTION(this.props.order.id, product.id, truck.id, entry_no, order_no, date, vol_obs, vol_20, selling_price)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {date,customer_changed, customer, customers, truck, product, other_products, order_no, entry_no, vol_obs, vol_20, selling_price} = this.state\r\n        \r\n        return (\r\n            <div className='upload-form'>\r\n                 {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: null}\r\n                <h4 className='upload-title'>Fill the information</h4>\r\n\r\n                {/* If successful */}\r\n                {this.state.success ?\r\n                <Alert variant={\"success\"} size=\"sm\">\r\n                    Entry Updated Successful\r\n                </Alert>: null}\r\n\r\n                 {/* Null error */}\r\n                 {this.state.null_error ?\r\n                <Alert variant={\"danger\"} size=\"sm\">\r\n                    All the fields must be field\r\n                </Alert>: null}\r\n                \r\n                {/* IF errors */}\r\n                {this.state.show_errors ?\r\n                    Object.keys(this.props.error).map((key, idx) => \r\n                        <Alert key={idx} variant=\"danger\">{key}: {this.props.create_customer_error[key][0]}</Alert>\r\n                    )\r\n                : null}\r\n\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Date</Form.Label>\r\n                        <Form.Control type=\"date\" placeholder=\"Date\" size='sm' value={date} onChange={e => this.setState({date:e.target.value})}/>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Product</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={e => this.setState({product_id:e.target.value})}>\r\n                            <option>{product.name}</option>\r\n                            {other_products.map((product, idx) =>\r\n                                <option key={idx} value={product.id}>{product.name}</option>\r\n                            )}\r\n                            \r\n                            \r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <Row style={{marginTop:0, height:'auto'}}>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Customer</Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\" size='sm' onChange={e => this.customerChange(e.target.value)}>\r\n                                    <option>{customer.name}</option>\r\n                                    {customers.map((customer, idx) => \r\n                                        <option key={idx} value={customer.id}>{customer.name}</option>\r\n                                    )}\r\n                                    \r\n                                    \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Truck</Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\" size='sm' onChange={e => this.setState({truck_id:e.target.value})}>\r\n                                    {customer_changed ? <option>Select</option>:\r\n                                    <option>{truck.plate_no}</option>}\r\n                                    {customer.trucks.map((truck) => \r\n                                        <option value={truck.id}>{truck.plate_no}</option>\r\n                                    )}\r\n                                    \r\n                                    \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <h6 className='upload-form-details'>Details</h6>\r\n\r\n                    \r\n\r\n                    <Row style={{marginTop:0, height:'auto'}}>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Order No</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' value={order_no} onChange={e => this.setState({order_no:e.target.value})}/>\r\n                            </Form.Group>\r\n                            \r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Entry no</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' value={entry_no} onChange={e => this.setState({entry_no:e.target.value})}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row style={{marginTop:0, height:'auto'}}>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Vol</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' value={vol_obs} onChange={e => this.setState({vol_obs:e.target.value})}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Vol@20</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' value={vol_20} onChange={e => this.setState({vol_20:e.target.value})}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Selling Price</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' value={selling_price} onChange={e => this.setState({selling_price:e.target.value})}/>\r\n                    </Form.Group>\r\n                    <div align='center'>\r\n                    <Button variant='primary' type='submit'>Upload</Button>\r\n                    </div>\r\n                    \r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      updated_entry: state.update_reducer.updated_entry,\r\n      error: (state.update_reducer.update_entry_error ? state.update_reducer.update_entry_error: null),\r\n      customers: (state.list_reducer.customers ? state.list_reducer.customers: []),\r\n      products: (state.list_reducer.products ? state.list_reducer.products: []),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    UPDATE_ENTRY_ACTION,\r\n    ENTRY_LIST_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(EditForm);\r\n  ","import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\n\r\nimport {Button, Table, Form, FormControl, Pagination, Alert} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport {MdEditNote, MdDelete} from \"react-icons/md\";\r\nimport { Triangle } from 'react-loader-spinner';\r\n\r\nimport '../../themes/theme1/orders.css'\r\nimport EditForm from './edit';\r\nimport {DELETE_ENTRY_ACTION, ENTRY_LIST_ACTION} from \"../../redux/actions/actions\"\r\nimport { stackOrderNone } from 'd3';\r\n\r\nclass OrderTable extends React.Component {\r\n    state = {\r\n        orders: this.props.entries,\r\n        order_no: null,\r\n        active: 1,\r\n        spinner: false,\r\n        success: true,\r\n        delete_order: null,\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        \r\n        if (e === \"\" || e === undefined || e === null){\r\n            this.setState({orders: this.props.entries})\r\n        }else {\r\n            this.setState({order_no: e})\r\n        }\r\n    }\r\n    \r\n    onSearch = (e) => {\r\n        e.preventDefault()\r\n        const {order_no} = this.state\r\n        let orders = this.props.entries\r\n        orders = orders.filter(function (or) {\r\n            return or.order_no.includes(order_no)\r\n        });\r\n        this.setState({orders:orders})\r\n    }\r\n\r\n    componentWillReceiveProps = async(nextProps) => {\r\n        this.setState({success:true})\r\n        if(nextProps.deleted_entry){\r\n            if(nextProps.deleted_entry.order_no === this.state.delete_order){\r\n                console.log(\"hereee\")\r\n                await this.props.ENTRY_LIST_ACTION()\r\n                this.setState({spinner:false, success:true, delete_order:null})\r\n            }\r\n        }\r\n        let orders = nextProps.entries\r\n        var start_date = new Date(nextProps.order_dates.start_date)\r\n        var end_date = new Date(nextProps.order_dates.end_date)\r\n\r\n        orders = orders.filter(function (or) {\r\n            const d = new Date(or.date)\r\n            if(d >= start_date && d <= end_date){\r\n                return true\r\n            }\r\n            return false\r\n          });\r\n        this.setState({\r\n            orders:orders,\r\n            active: 1,\r\n        })\r\n    }\r\n\r\n    numberWithCommas(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    handleDelete = async(id, order) => {\r\n        this.setState({spinner: true, delete_order:order.order_no})\r\n        await this.props.DELETE_ENTRY_ACTION(id, order)\r\n    }\r\n    componentDidMount = () => {\r\n        // this.setState({orders: this.state.orders.concat(this.props.entries)})\r\n        // console.log(this.props.entries)\r\n        \r\n\r\n        let orders = this.props.entries\r\n        var start_date = new Date(this.props.order_dates.start_date)\r\n        var end_date = new Date(this.props.order_dates.end_date)\r\n\r\n        orders = orders.filter(function (or) {\r\n            const d = new Date(or.date)\r\n            if(d >= start_date && d <= end_date){\r\n                return true\r\n            }\r\n            return false\r\n          });\r\n        this.setState({\r\n            orders:orders,\r\n            delete_order: null,\r\n        })\r\n    }\r\n    render() {\r\n        let items = [];\r\n        const NUM_ORDERS = 15\r\n        let active = this.state.active;\r\n        const start_index = (active - 1) * NUM_ORDERS\r\n        const end_index = (active * NUM_ORDERS)\r\n        \r\n        for (let number = 1; number <= Math.ceil(this.state.orders.length / NUM_ORDERS); number++) {\r\n            items.push(\r\n                <Pagination.Item key={number} active={number === active} onClick={() => this.setState({active:number})}>\r\n                {number}\r\n                </Pagination.Item>,\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='order-table'>\r\n                <div className='table-header'>\r\n                    <h6></h6>\r\n\r\n                    <Form className=\"d-flex\" onSubmit={this.onSearch}>\r\n                        <FormControl\r\n                            type=\"search\"\r\n                            placeholder=\"Search by order no.\"\r\n                            className=\"me-2\"\r\n                            aria-label=\"Search by order no.\"\r\n                            size='sm'\r\n                            onChange={(e)=> this.onSearchChange(e.target.value)}\r\n                            />\r\n                            <Button variant=\"outline-primary\" type='submit'>Search</Button>\r\n                    </Form>\r\n                </div>\r\n\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Date</th>\r\n                            <th>Product</th>\r\n                            <th>Customer</th>\r\n                            <th>Order No</th>\r\n                            <th>Entry No</th>\r\n                            <th>S.Price</th>\r\n                            <th>OBS Vol</th>\r\n                            <th>Vol@20</th>\r\n                            <th>Amount</th>\r\n                            <th>Edit</th>\r\n                            <th>Del</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.orders.slice(start_index, end_index).map((order, idx) => \r\n                            <tr key={idx}>\r\n                                <td>{start_index + idx + 1}</td>\r\n                                <td>{order.date}</td>\r\n                                <td>{order.product.name}</td>\r\n                                <td>{order.truck.customer}</td>\r\n                                <td>{order.order_no}</td>\r\n                                <td>{order.entry_no}</td>\r\n                                <td>{order.selling_price}</td>\r\n                                <td>{this.numberWithCommas(order.vol_obs)}</td>\r\n                                <td>{this.numberWithCommas(order.vol_20)}</td>\r\n                                <td>{this.numberWithCommas(order.vol_obs * order.selling_price)}</td>\r\n                                <td>\r\n                                    <Popup \r\n                                        contentStyle={{width:500, minHeight:400}}\r\n                                        trigger={\r\n                                            <Button variant='transparent' className='action-button'>\r\n                                                <MdEditNote color='blue' size={20}/>\r\n                                            </Button>\r\n                                        }\r\n                                        position=\"left top\"\r\n                                    >\r\n                                        \r\n                                        <EditForm order={order} />\r\n                                    </Popup>\r\n                                </td>\r\n                                <td>\r\n                                    <Popup \r\n                                        contentStyle={{width:300, minHeight:150}}\r\n                                        onOpen= {() => this.setState({success:false})}\r\n                                        trigger={\r\n                                        <Button variant='transparent' className='action-button' onClick={() => this.setState({success:false})}>\r\n                                            <MdDelete color='red' size={20}/>\r\n                                        </Button>\r\n                                        }\r\n                                        position=\"left top\"\r\n                                    >\r\n                                       \r\n                                        <div className='order-delete'>\r\n                                        {this.state.spinner ?\r\n                                            <div className=\"spinner\">\r\n                                                <Triangle \r\n                                                    \r\n                                                    color=\"#00BFFF\"\r\n                                                    height={100}\r\n                                                    width={100}\r\n                                                    timeout={4000} //3 secs\r\n                                                    visible={this.state.spinner}\r\n                                                    \r\n                                                />\r\n                                            </div>: null}\r\n                                            <h6>Are you sure you want to delete this record?</h6>\r\n                                            {this.state.success ?\r\n                                            <Alert variant={\"success\"} size=\"sm\">\r\n                                                Entry Deleted Successful\r\n                                            </Alert>: null}\r\n                                            <div className='delete-buttons'>\r\n\r\n                                               \r\n                                                <Button variant='secondary' className='cancel-button' onClick={() => this.setState({success:false})}>\r\n                                                    Cancel\r\n                                                </Button>\r\n                                                \r\n                                               \r\n                                                <Button variant=\"danger\" onClick={() => this.handleDelete(order.id, order)}>\r\n                                                <MdDelete color='red' size={20}/> Delete\r\n                                                </Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Popup>\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n   \r\n                    </tbody>\r\n                </Table>\r\n                <div>\r\n                                        \r\n\r\n            <Pagination size=\"sm\">{items}</Pagination>\r\n        </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const dates = {\r\n        start_date:new Date(2022, 1, 20), \r\n        end_date: new Date(2022, 1, 28)\r\n    }\r\n    return {\r\n      entries: (state.list_reducer.entries ? state.list_reducer.entries: []),\r\n      deleted_entry: state.update_reducer.deleted_entry,\r\n      order_dates: (state.list_reducer.order_dates ? state.list_reducer.order_dates:dates ),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    DELETE_ENTRY_ACTION,\r\n    ENTRY_LIST_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(OrderTable);\r\n  ","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Triangle } from 'react-loader-spinner'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Layout from '../layout'\r\nimport TopComponent from './top'\r\nimport OrderTable from './table'\r\n\r\nimport {ENTRY_LIST_ACTION} from \"../../redux/actions/actions\"\r\n\r\nclass OrderPage extends React.Component {\r\n    state = {\r\n        spinner: false,\r\n        redirect: false\r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.setState({spinner:false})\r\n    }\r\n    componentWillMount = async() => {\r\n        const token = this.props.token\r\n        if(token === undefined || token===\"\"){\r\n            this.setState({redirect:true})    \r\n        }else{\r\n            this.setState({spinner:true})\r\n            await this.props.ENTRY_LIST_ACTION()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.redirect){\r\n            return <Redirect to={\"/login\"} />\r\n        }\r\n        return (\r\n            <Layout headerTitle={\"Orders\"}>\r\n                 {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: \r\n                    <div>\r\n                        <TopComponent />\r\n                        <OrderTable data={this.props.entries}/>\r\n                    </div>}\r\n                \r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n        entries: (state.list_reducer.entries ? state.list_reducer.entries: []),\r\n\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    ENTRY_LIST_ACTION\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(OrderPage);\r\n  ","import React from \"react\"\r\nimport ReactApexChart from \"react-apexcharts\"\r\n\r\nclass BarChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        series: [{\r\n          name: this.props.data.data.name,\r\n          data: this.props.data.data.values\r\n        }],\r\n        options: {\r\n          chart: {\r\n            type: 'bar',\r\n            height: 350\r\n          },\r\n          title: {\r\n            text: 'Monthly Sale Comparison'\r\n          },\r\n          plotOptions: {\r\n            bar: {\r\n              horizontal: false,\r\n              columnWidth: '55%',\r\n              endingShape: 'rounded'\r\n            },\r\n          },\r\n          dataLabels: {\r\n            enabled: false\r\n          },\r\n          stroke: {\r\n            show: true,\r\n            width: 2,\r\n            colors: ['transparent']\r\n          },\r\n          xaxis: {\r\n            categories: this.props.data.months,\r\n          },\r\n          yaxis: {\r\n            title: {\r\n              text: '$ (Millions)'\r\n            }\r\n          },\r\n          fill: {\r\n            opacity: 1\r\n          },\r\n          tooltip: {\r\n            y: {\r\n              formatter: function (val) {\r\n                return \"$ \" + val + \" thousands\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n      \r\n      \r\n      };\r\n    }\r\n\r\n  \r\n    componentWillReceiveProps = (nextProps) => {\r\n      console.log(\"in chart will receive\")\r\n      this.setState({series: [{data:nextProps.data.data.values, name:nextProps.data.data.name}]})\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        \r\n\r\n  <div id=\"chart\">\r\n<ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\r\n</div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\nexport default BarChart","import React from 'react'\r\n\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport ApexCharts from 'apexcharts';\r\nvar today = new Date(\"28 Feb 2022\")\r\nvar months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\nclass ProductMainChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {\r\n      \r\n        series: [{\r\n          name: this.props.name,\r\n          data: this.props.data.values\r\n        }],\r\n        options: {\r\n          chart: {\r\n            id: 'area-datetime',\r\n            type: 'area',\r\n            height: 350,\r\n            zoom: {\r\n              autoScaleYaxis: true\r\n            }\r\n          },\r\n          title: {\r\n            text: 'Sales Trend'\r\n          },\r\n          annotations: {\r\n            \r\n            xaxis: [{\r\n              x: new Date(`1 ${months[today.getMonth()]} ${today.getFullYear()}`).getTime(),\r\n              borderColor: '#999',\r\n              yAxisIndex: 0,\r\n              label: {\r\n                show: true,\r\n                text: 'Sales',\r\n                style: {\r\n                  color: \"#fff\",\r\n                  background: '#775DD0'\r\n                }\r\n              }\r\n            }]\r\n          },\r\n          dataLabels: {\r\n            enabled: true\r\n          },\r\n          markers: {\r\n            size: 0,\r\n            style: 'hollow',\r\n          },\r\n          xaxis: {\r\n            type: 'datetime',\r\n            min: new Date(`1 ${months[today.getMonth()]} ${today.getFullYear()}`).getTime(),\r\n            tickAmount: 10,\r\n          },\r\n          yaxis: {\r\n            title: {\r\n              text: '$ (Millions)'\r\n            }\r\n          },\r\n          tooltip: {\r\n            x: {\r\n              format: 'dd MMM yyyy'\r\n            }\r\n          },\r\n          fill: {\r\n            type: 'gradient',\r\n            gradient: {\r\n              shadeIntensity: 1,\r\n              opacityFrom: 0.7,\r\n              opacityTo: 0.9,\r\n              stops: [0, 100]\r\n            }\r\n          },\r\n        },\r\n      \r\n      \r\n        selection: 'one_month',\r\n      \r\n      };\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n      console.log(\"in chart will receive\")\r\n      this.setState({series: [{data:nextProps.data.values, name:nextProps.name}]})\r\n    }\r\n\r\n    addMonths = (date, months) => {\r\n      date.setMonth(date.getMonth() + months);\r\n      return date;\r\n    }\r\n\r\n    updateData(timeline) {\r\n      this.setState({\r\n        selection: timeline\r\n      })\r\n      const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\n      const month = new Date(`1 ${months[today.getMonth()]} ${today.getFullYear()}`)\r\n\r\n      let six_months = new Date(\"28 Feb 2022\")\r\n      six_months = this.addMonths(six_months, -6)\r\n\r\n      let year = new Date(\"28 Feb 2022\")\r\n      year = this.addMonths(year, -12)\r\n\r\n      \r\n      switch (timeline) {\r\n        case 'one_month':\r\n          ApexCharts.exec(\r\n            'area-datetime',\r\n            'zoomX',\r\n            month.getTime(),\r\n            today.getTime(),\r\n            \r\n          )\r\n          break\r\n        case 'six_months':\r\n          ApexCharts.exec(\r\n            'area-datetime',\r\n            'zoomX',\r\n            six_months.getTime(),\r\n            today.getTime()\r\n          )\r\n          break\r\n        case 'one_year':\r\n          ApexCharts.exec(\r\n            'area-datetime',\r\n            'zoomX',\r\n            year.getTime(),\r\n            today.getTime()\r\n          )\r\n          break\r\n        case 'ytd':\r\n          ApexCharts.exec(\r\n            'area-datetime',\r\n            'zoomX',\r\n            new Date(`01 Jan ${today.getFullYear()}`).getTime(),\r\n            today.getTime()\r\n          )\r\n          break\r\n      \r\n        default:\r\n      }\r\n    }\r\n  \r\n    componentDidMount = () => {\r\n      this.setState({data:this.props.data.values, name:this.props.name, timeline:\"one_month\"})\r\n    }\r\n    render() {\r\n      \r\n      return (\r\n        <div id=\"chart\">\r\n            <div className=\"toolbar\">\r\n            <button id=\"one_month\"\r\n                \r\n                onClick={()=>this.updateData('one_month')} className={ (this.state.selection==='one_month' ? 'date_select active' : 'date_select')}>\r\n            One Month\r\n            </button>\r\n            &nbsp;\r\n            <button id=\"six_months\"\r\n                \r\n                onClick={()=>this.updateData('six_months')} className={ (this.state.selection==='six_months' ? 'date_select active' : 'date_select')}>\r\n            Six Months\r\n            </button>\r\n            &nbsp;\r\n            <button id=\"one_year\"\r\n                \r\n                \r\n                onClick={()=>this.updateData('one_year')} className={ (this.state.selection==='one_year' ? 'date_select active' : 'date_select')}>\r\n            One Year\r\n            </button>\r\n            &nbsp;\r\n            <button id=\"ytd\"\r\n                \r\n                onClick={()=>this.updateData('ytd')} className={ (this.state.selection==='ytd' ? 'date_select active' : 'date_select')}>\r\n            This year\r\n            </button>\r\n            &nbsp;\r\n            \r\n            </div>\r\n\r\n            <div id=\"chart-timeline\">\r\n              <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" height={350} />\r\n            </div>\r\n        </div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\nexport default ProductMainChart","import React from 'react'\r\nimport ReactApexChart from \"react-apexcharts\"\r\n\r\nclass RadarChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        series: [{\r\n          name: this.props.data.data.name,\r\n          data: this.props.data.data.orders,\r\n        }],\r\n        options: {\r\n            chart: {\r\n              height: 300,\r\n              type: 'radar',\r\n            },\r\n            dataLabels: {\r\n              enabled: true\r\n            },\r\n            plotOptions: {\r\n              radar: {\r\n                size: 140,\r\n                polygons: {\r\n                  strokeColors: '#e9e9e9',\r\n                  fill: {\r\n                    colors: ['aliceblue', '#fff']\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            title: {\r\n              text: 'Monthly Orders'\r\n            },\r\n            colors: ['#008ffb'],\r\n            markers: {\r\n              size: 4,\r\n              colors: ['#fff'],\r\n              strokeColor: '#FF4560',\r\n              strokeWidth: 2,\r\n            },\r\n            tooltip: {\r\n              y: {\r\n                formatter: function(val) {\r\n                  return val\r\n                }\r\n              }\r\n            },\r\n            xaxis: {\r\n              categories: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"]\r\n            },\r\n            yaxis: {\r\n              tickAmount: 7,\r\n              labels: {\r\n                formatter: function(val, i) {\r\n                  if (i % 2 === 0) {\r\n                    return val\r\n                  } else {\r\n                    return ''\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n      \r\n      \r\n      };\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n      console.log(\"in chart will receive\")\r\n      this.setState({series: [{data:nextProps.data.data.orders, name:nextProps.data.data.name}]})\r\n    }\r\n\r\n\r\n    render() {\r\n      console.log(this.props.data)\r\n      return (\r\n        \r\n\r\n  <div id=\"chart\">\r\n<ReactApexChart options={this.state.options} series={this.state.series} type=\"radar\" height={350} />\r\n</div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\nexport default RadarChart;","import React from \"react\";\r\nimport {Row, Col} from \"react-bootstrap\"\r\nimport '../../../themes/theme1/products.css'\r\nimport BarChart from \"./bar_chart\";\r\nimport ProductMainChart from \"./first\";\r\nimport RadarChart from \"./radar_chart\";\r\n\r\nclass ChartComponent extends React.Component {\r\n    state = {\r\n        data: this.props.data\r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.setState({data:nextProps.data})\r\n    }\r\n    render(){\r\n        console.log(this.state.data)\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"chart-area large-chart\">\r\n                            <ProductMainChart name={this.state.data.name} data={this.state.data.main}/>\r\n                        </div>\r\n                    </Col>\r\n                    {/* <Col>\r\n                        <div className=\"chart-area small-chart\">\r\n\r\n                        </div>\r\n                    </Col> */}\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={7}>\r\n                        <div className=\"chart-area large-chart\">\r\n                            <BarChart data={this.state.data.months}/>\r\n                        </div>\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"chart-area small-chart\">\r\n                            <RadarChart data={this.state.data.months}/>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChartComponent","import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport { connect } from 'react-redux';\r\nimport {Button, Table, Form, FormControl, Pagination} from 'react-bootstrap';\r\n\r\nimport '../../themes/theme1/orders.css'\r\n\r\n\r\nclass ProductOrderTable extends React.Component {\r\n    state = {\r\n        orders: [],\r\n        order_no: null,\r\n        active: 1,\r\n    }\r\n\r\n    numberWithCommas(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        \r\n        if (e === \"\" || e === undefined || e === null){\r\n            this.setState({orders: this.props.entries})\r\n        }else {\r\n            this.setState({order_no: e})\r\n        }\r\n    }\r\n    \r\n    onSearch = (e) => {\r\n        e.preventDefault()\r\n        const {order_no} = this.state\r\n        let orders = this.props.entries\r\n        orders = orders.filter(function (or) {\r\n            return or.order_no === order_no \r\n          });\r\n          this.setState({orders:orders})\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        const name = nextProps.name\r\n        let orders = nextProps.entries\r\n        orders = orders.filter(function (or) {\r\n            return or.product.name === name \r\n        });\r\n          this.setState({orders:orders})\r\n    }\r\n    componentDidMount = () => {\r\n        const name = this.props.name\r\n        let orders = this.props.entries\r\n        orders = orders.filter(function (or) {\r\n            return or.product.name === name \r\n        });\r\n          this.setState({orders:orders})\r\n    }\r\n    render() {\r\n        let items = [];\r\n        const NUM_ORDERS = 10\r\n        let active = this.state.active;\r\n        const start_index = (active - 1) * NUM_ORDERS\r\n        const end_index = (active * NUM_ORDERS)\r\n        \r\n        for (let number = 1; number <= Math.ceil(this.state.orders.length / NUM_ORDERS); number++) {\r\n            items.push(\r\n                <Pagination.Item key={number} active={number === active} onClick={() => this.setState({active:number})}>\r\n                {number}\r\n                </Pagination.Item>,\r\n            );\r\n        }\r\n        return (\r\n            <div className='order-table'>\r\n                <div className='table-header'>\r\n                    <h6>Records</h6>\r\n\r\n                    <Form className=\"d-flex\" onSubmit={this.onSearch}>\r\n                        <FormControl\r\n                            type=\"search\"\r\n                            placeholder=\"Search by order no.\"\r\n                            className=\"me-2\"\r\n                            aria-label=\"Search by order no.\"\r\n                            size='sm'\r\n                            onChange={(e)=> this.onSearchChange(e.target.value)}\r\n                            />\r\n                            <Button variant=\"outline-primary\" type='submit'>Search</Button>\r\n                    </Form>\r\n                </div>\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Date</th>\r\n                            <th>Product</th>\r\n                            <th>Customer</th>\r\n                            <th>Order No</th>\r\n                            <th>Entry No</th>\r\n                            <th>S.Price</th>\r\n                            <th>OBS Vol</th>\r\n                            <th>Vol@20</th>\r\n                            <th>Amount (Kshs)</th>\r\n                           \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.orders.slice(start_index, end_index).map((order, idx) => \r\n                        <tr key={idx}>\r\n                            <td>{idx + 1}</td>\r\n                            <td>{order.date}</td>\r\n                            <td>{order.product.name}</td>\r\n                            <td>{order.truck.customer}</td>\r\n                            <td>{order.order_no}</td>\r\n                            <td>{order.entry_no}</td>\r\n                            <td>{order.selling_price}</td>\r\n                            <td>{this.numberWithCommas(order.vol_obs)}</td>\r\n                            <td>{this.numberWithCommas(order.vol_20)}</td>\r\n                            <td>{this.numberWithCommas(order.vol_obs * order.selling_price)}</td>\r\n                           \r\n                        </tr>\r\n                        )}\r\n                       \r\n                        \r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Pagination size=\"sm\">{items}</Pagination>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        entries: (state.list_reducer.entries ? state.list_reducer.entries: []),\r\n        product_bi_list: (state.list_reducer.product_bi_list ? state.list_reducer.product_bi_list: {}),\r\n        product_index: state.list_reducer.product_index\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    \r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ProductOrderTable);\r\n  ","import React from \"react\";\r\nimport {Button, Form} from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\";\r\nimport {MdOutlineRefresh} from \"react-icons/md\";\r\n\r\nimport {PRODUCT_INDEX_ACTION} from \"../../redux/actions/actions\"\r\nimport '../../themes/theme1/products.css'\r\n\r\nclass ProductTopComponent extends React.Component {\r\n    state = {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: 'selection', \r\n        date: true,\r\n        cost: false,\r\n        index: null,\r\n      }\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const {index} = this.state\r\n        \r\n        await this.props.PRODUCT_INDEX_ACTION(index)\r\n      }\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                 <div className=\"product-top\">\r\n                    <div>\r\n                        <h6>{this.props.products[this.props.product_index].name}</h6>\r\n                    </div>\r\n\r\n                    <Form className=\"product-form\" onSubmit={this.handleSubmit}>\r\n                        <Form.Group className=\"mb-2 product-input\" controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label style={{marginRight: 10}}>Product</Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.setState({index:e.target.value})}>\r\n                                <option>Select</option>\r\n                                {this.props.products.map((product, index) => \r\n                                    <option value={index}>{product.name}</option>\r\n                                )}\r\n                                \r\n                                \r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                        <button type=\"submit\" className=\"product-refresh\">\r\n                            <MdOutlineRefresh size={30} color=\"#008ffb\"/>\r\n                        </button>\r\n                    </Form>\r\n                    \r\n                       \r\n                   \r\n                </div>\r\n            \r\n                 \r\n            \r\n        </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        products: (state.list_reducer.products ? state.list_reducer.products: []),\r\n        product_index: (state.list_reducer.product_index),\r\n        entries: (state.list_reducer.entries ? state.list_reducer.entries: []),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    PRODUCT_INDEX_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ProductTopComponent);\r\n  ","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Triangle } from 'react-loader-spinner';\r\n\r\nimport { PRODUCT_BI_LIST_ACTION } from \"../../redux/actions/actions\";\r\n\r\nimport Layout from \"../layout\";\r\nimport ChartComponent from \"./graphs\";\r\nimport ProductOrderTable from \"./table\";\r\nimport ProductTopComponent from \"./top\";\r\n\r\nclass ProductPage extends React.Component {\r\n    state = {\r\n        redirect: false,\r\n        spinner: false,\r\n        didnt_load: false,\r\n        data: null\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.product_bi_list[nextProps.product_index].main){\r\n            this.setState({spinner:false, didnt_load:false, data:nextProps.product_bi_list[nextProps.product_index]})\r\n        }else{\r\n            this.setState({spinner:false, didnt_load:true})\r\n        }\r\n        \r\n    }\r\n    componentDidMount = async() => {\r\n        this.setState({data: this.props.product_bi_list[this.props.product_index]})\r\n    }\r\n    componentWillMount = async() => {\r\n        const token = this.props.token\r\n        \r\n        if(token === undefined || token===\"\"){\r\n            this.setState({redirect:true})    \r\n        }else {\r\n            this.setState({spinner:true})\r\n            await this.props.PRODUCT_BI_LIST_ACTION()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect){\r\n            return <Redirect to={\"/login\"} />\r\n        }\r\n        const product_bi_list = this.state.data\r\n        \r\n        return (\r\n            <Layout headerTitle={\"Products\"}>\r\n                {this.state.didnt_load ? \r\n                <div>\r\n                    <Alert variant={\"danger\"} size=\"sm\">\r\n                        Something went wrong. Please contact the Admin.\r\n                    </Alert>\r\n                </div>\r\n                :\r\n                <div>\r\n                    {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: \r\n                    <div>\r\n                        <ProductTopComponent />\r\n                        <ChartComponent data={product_bi_list}/>\r\n                        <ProductOrderTable name={product_bi_list.name}/>\r\n                    </div>\r\n                    }\r\n                </div>}\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n        product_bi_list: (state.list_reducer.product_bi_list ? state.list_reducer.product_bi_list: {}),\r\n        product_index: state.list_reducer.product_index\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    PRODUCT_BI_LIST_ACTION\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ProductPage);\r\n  ","import React from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport ReactApexChart from \"react-apexcharts\"\r\n\r\nclass CustomerBarChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        series: [],\r\n        options: {\r\n          chart: {\r\n            type: 'bar',\r\n            height: 350\r\n          },\r\n          \r\n          title: {\r\n            text: 'Monthly Sale Comparison'\r\n          },\r\n          plotOptions: {\r\n            bar: {\r\n              horizontal: false,\r\n              columnWidth: '55%',\r\n              endingShape: 'rounded'\r\n            },\r\n          },\r\n          dataLabels: {\r\n            enabled: false\r\n          },\r\n          stroke: {\r\n            show: true,\r\n            width: 2,\r\n            colors: ['transparent']\r\n          },\r\n          xaxis: {\r\n            title: {\r\n                text: 'Months'\r\n              },\r\n            categories: this.props.data.months,\r\n          },\r\n          yaxis: {\r\n            title: {\r\n              text: '$ (Millions)'\r\n            }\r\n          },\r\n          fill: {\r\n            opacity: 1\r\n          },\r\n          tooltip: {\r\n            y: {\r\n              formatter: function (val) {\r\n                return \"$ \" + val + \" Million\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n      \r\n      \r\n      };\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.setState({series:[{\r\n            name: nextProps.customer_data.data.name,\r\n            data: nextProps.customer_data.data.values\r\n          }]})\r\n    }\r\n  \r\n    componentDidMount = () => {\r\n        this.setState({series:[{\r\n            name: this.props.customer_data.data.name,\r\n            data: this.props.customer_data.data.values\r\n          }]})\r\n    }\r\n    render() {\r\n        \r\n      return (\r\n        \r\n\r\n  <div id=\"chart\">\r\n    <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\r\n    </div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n      customer_data: (state.list_reducer.customer_data ? state.list_reducer.customer_data.monthly_orders: {})\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    \r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomerBarChart);\r\n  ","import React from 'react'\r\nimport ReactApexChart from \"react-apexcharts\"\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CustomerRadarChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        series: [],\r\n        options: {\r\n            chart: {\r\n              height: 200,\r\n              type: 'radar',\r\n            },\r\n            dataLabels: {\r\n              enabled: true\r\n            },\r\n            plotOptions: {\r\n              radar: {\r\n                size: 140,\r\n                polygons: {\r\n                  strokeColors: '#e9e9e9',\r\n                  fill: {\r\n                    colors: ['aliceblue', '#fff']\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            title: {\r\n              text: 'Monthly Orders'\r\n            },\r\n            colors: ['#008ffb'],\r\n            markers: {\r\n              size: 4,\r\n              colors: ['#fff'],\r\n              strokeColor: '#FF4560',\r\n              strokeWidth: 2,\r\n            },\r\n            tooltip: {\r\n              y: {\r\n                formatter: function(val) {\r\n                  return val\r\n                }\r\n              }\r\n            },\r\n            xaxis: {\r\n              categories: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"]\r\n            },\r\n            yaxis: {\r\n              tickAmount: 1,\r\n              labels: {\r\n                formatter: function(val, i) {\r\n                  if (i % 2 === 0) {\r\n                    return val\r\n                  } else {\r\n                    return ''\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n      \r\n      \r\n      };\r\n    }\r\n\r\n  \r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.setState({series:[{\r\n            name: nextProps.customer_data.data.name,\r\n            data: nextProps.customer_data.data.orders\r\n          }]})\r\n    }\r\n  \r\n    componentDidMount = () => {\r\n        this.setState({series:[{\r\n            name: this.props.customer_data.data.name,\r\n            data: this.props.customer_data.data.orders\r\n          }]})\r\n    }\r\n    render() {\r\n      return (\r\n        \r\n\r\n  <div id=\"chart\">\r\n<ReactApexChart options={this.state.options} series={this.state.series} type=\"radar\" height={350} />\r\n</div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n      customer_data: (state.list_reducer.customer_data ? state.list_reducer.customer_data.monthly_orders: {})\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    \r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomerRadarChart);","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Table } from \"react-bootstrap\"\r\nclass CustomerTop extends React.Component {\r\n    state = {\r\n        info: []\r\n    }\r\n    numberWithCommas(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.setState({info: nextProps.customer_data})\r\n    }\r\n  \r\n    componentDidMount = () => {\r\n        this.setState({info: this.props.customer_data})\r\n    }\r\n    render(){\r\n       \r\n        return (\r\n            <div className=\"customer-content-header\">\r\n                <h5 className=\"customer-content-name\">{this.state.info.name}</h5>\r\n                <div className=\"customer-info\">\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            \r\n                            <th>Location</th>\r\n                            <th>Products</th>\r\n                            <th>Total Orders</th>\r\n                            <th>Total trucks</th>\r\n                            <th>Total Amount (Kshs)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{this.state.info.location}</td>\r\n                            <td>2</td>\r\n                            <td>{this.state.info.order_total}</td>\r\n                            <td>{this.state.info.truck_total}</td>\r\n                            <td>{this.state.info.total}</td>\r\n                        </tr>\r\n                        \r\n                    </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      customer_data: (state.list_reducer.customer_data ? state.list_reducer.customer_data: {})\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    \r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomerTop);\r\n  ","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Table, Pagination} from \"react-bootstrap\"\r\nclass CustomerOrderTable extends React.Component {\r\n    state = {\r\n        orders: [],\r\n        active: 1\r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.setState({orders: nextProps.customer_data})\r\n    }\r\n    numberWithCommas(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    componentDidMount = () => {\r\n        this.setState({orders: this.props.customer_data})\r\n    }\r\n    render(){\r\n        let items = [];\r\n        const NUM_ORDERS = 10\r\n        let active = this.state.active;\r\n        const start_index = (active - 1) * NUM_ORDERS\r\n        const end_index = (active * NUM_ORDERS)\r\n        \r\n        for (let number = 1; number <= Math.ceil(this.state.orders.length / NUM_ORDERS); number++) {\r\n            items.push(\r\n                <Pagination.Item key={number} active={number === active} onClick={() => this.setState({active:number})}>\r\n                {number}\r\n                </Pagination.Item>,\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"customer-orders\">\r\n            <div className=\"customer-orders-header\">\r\n                <h6>Orders</h6>\r\n                {/* <Form className=\"d-flex\" onSubmit={this.onSearch}>\r\n                    <FormControl\r\n                        type=\"search\"\r\n                        placeholder=\"Search\"\r\n                        className=\"me-2\"\r\n                        aria-label=\"Search\"\r\n                        size='sm'\r\n                        onChange={(e)=> this.onSearchChange(e.target.value)}\r\n                        />\r\n                        <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\">Search</Button>\r\n                </Form> */}\r\n            </div>\r\n\r\n            <div className=\"customer-orders-table\">\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        \r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Date</th>\r\n                            <th>Product</th>\r\n                            <th>Order No</th>\r\n                            <th>Entry No</th>\r\n                            <th>S.Price</th>\r\n                            <th>OBS Vol</th>\r\n                            <th>Vol@20</th>\r\n                            <th>Amount</th>\r\n                        \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        \r\n                    {this.state.orders.slice(start_index, end_index).map((order, idx) => \r\n                        <tr key={idx}>\r\n                            <td>{idx + 1}</td>\r\n                            <td>{order.date}</td>\r\n                            <td>{order.product.name}</td>\r\n                            <td>{order.order_no}</td>\r\n                            <td>{order.entry_no}</td>\r\n                            <td>{order.selling_price}</td>\r\n                            <td>{this.numberWithCommas(order.vol_obs)}</td>\r\n                            <td>{this.numberWithCommas(order.vol_20)}</td>\r\n                            <td>{this.numberWithCommas(order.vol_obs * order.selling_price)}</td>\r\n                           \r\n                        </tr>\r\n                    )}\r\n\r\n                        \r\n                        \r\n                    </tbody>\r\n                </Table>\r\n                <Pagination size=\"sm\">{items}</Pagination>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      customer_data: (state.list_reducer.customer_data ? state.list_reducer.customer_data.orders: {})\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    \r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomerOrderTable);\r\n  ","import React from \"react\"\r\n\r\nimport {Alert} from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Triangle } from 'react-loader-spinner';\r\n\r\nimport { CUSTOMER_BI_LIST_ACTION, CUSTOMER_DATA_ACTION} from '../../redux/actions/actions';\r\n\r\nimport {Row, Col, Button, Form, FormControl, Table} from \"react-bootstrap\"\r\nimport Layout from \"../layout\"\r\nimport \"../../themes/theme1/customers.css\"\r\nimport CustomerBarChart from \"./chart1\";\r\nimport CustomerRadarChart from \"./chart2\";\r\nimport CustomerTop from \"./top_tab\"\r\nimport CustomerOrderTable from \"./orders\"\r\n\r\nclass CustomerPage extends React.Component {\r\n    state = {\r\n        orders: [],\r\n        order_no: null,\r\n        redirect:false,\r\n        spinner: false,\r\n        didnt_load: false,\r\n        customer_id: 0,\r\n        customer_data: this.props.customer_bi_list[0],\r\n        customer: null,\r\n        customer_bi_list: this.props.customer_bi_list\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        \r\n        if (e === \"\" || e === undefined || e === null){\r\n            this.setState({customer_bi_list: this.props.customer_bi_list})\r\n        }else {\r\n            this.setState({customer: e})\r\n        }\r\n    }\r\n    \r\n    onSearch = (e) => {\r\n        e.preventDefault()\r\n        const {customer} = this.state\r\n        let customer_bi_list = this.props.customer_bi_list\r\n        customer_bi_list = customer_bi_list.filter(function (or) {\r\n            return or.name.toLowerCase().includes(customer.toLowerCase()) \r\n          });\r\n       \r\n        \r\n        this.setState({customer_bi_list:customer_bi_list})\r\n    }\r\n\r\n    onClick = async(name) => {\r\n        let index = this.props.customer_bi_list.findIndex( x => x.name === name );\r\n        await this.setState({customer_id:index})\r\n        await this.props.CUSTOMER_DATA_ACTION(this.props.customer_bi_list[index])\r\n        \r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if (this.props.customer_bi_list.length > 0){\r\n            this.setState({spinner:false, didnt_load:false})\r\n        }else{\r\n            this.setState({spinner:false, didnt_load:true})\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        \r\n    }\r\n\r\n    componentWillMount = async() => {\r\n        const token = this.props.token\r\n        if(token === undefined || token===\"\"){\r\n            this.setState({redirect:true})    \r\n        }else {\r\n            this.setState({spinner:true})\r\n            \r\n            await this.props.CUSTOMER_DATA_ACTION(this.props.customer_bi_list[0])\r\n            await this.props.CUSTOMER_BI_LIST_ACTION()\r\n            \r\n        }\r\n    }\r\n    render(){\r\n        \r\n        if(this.state.redirect){\r\n            return <Redirect to={\"/login\"} />\r\n        }\r\n\r\n        return (\r\n            <Layout headerTitle={\"Customers\"}>\r\n                {this.state.didnt_load ? \r\n                <div>\r\n                    <Alert variant={\"danger\"} size=\"sm\">\r\n                        Something went wrong. Please contact the Admin.\r\n                    </Alert>\r\n                </div>\r\n            :\r\n            <div>\r\n                {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: \r\n                    \r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"customer-side\">\r\n                            <h6>Pick a customer</h6>\r\n\r\n                            <Form className=\"d-flex\" onSubmit={this.onSearch}>\r\n                                <FormControl\r\n                                    type=\"search\"\r\n                                    placeholder=\"Search\"\r\n                                    className=\"me-2\"\r\n                                    aria-label=\"Search\"\r\n                                    size='sm'\r\n                                    onChange = {(e) => this.onSearchChange(e.target.value)}\r\n                                    />\r\n                                    <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\">Search</Button>\r\n                            </Form>\r\n\r\n                            <div>\r\n                                {this.state.customer_bi_list.map((customer, idx) => \r\n                                    <div key={idx} className={\"customer-scroll\"}>\r\n                                        {this.state.customer_id === idx ? \r\n                                            \r\n                                            <Button className='customer active' variant=\"transparent\" onClick={() => this.onClick(customer.name)}>\r\n                                        \r\n                                                <div className='customer-info'>\r\n                                                    <div className='customer-profile'>\r\n            \r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <h6 className='customer-name'>{customer.name}</h6>\r\n                                                        <p className='customer-location'>{customer.location}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Button>:\r\n                                            <Button className='customer' variant=\"transparent\" onClick={() => this.onClick(customer.name)}>\r\n                                   \r\n                                                <div className='customer-info'>\r\n                                                    <div className='customer-profile'>\r\n            \r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <h6 className='customer-name'>{customer.name}</h6>\r\n                                                        <p className='customer-location'>{customer.location}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Button>}\r\n                                    </div>\r\n                                )}\r\n                                \r\n\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </Col>\r\n                    <Col xs={9}>\r\n                        <div className=\"customer-content\">\r\n                            <CustomerTop />\r\n\r\n                            <div>\r\n                                <Row>\r\n                                    <Col xs={12}>\r\n                                        <div className=\"chart-area\">\r\n                                            <CustomerBarChart data={this.state.customer_data.monthly_orders} />\r\n                                        </div>\r\n                                        \r\n                                    </Col>\r\n                                    <Col>\r\n                                        <div className=\"chart-area\">\r\n                                            <CustomerRadarChart data={this.state.customer_data.monthly_orders} />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n\r\n                            {/* Records */}\r\n\r\n                            <CustomerOrderTable />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                }\r\n                \r\n                </div>}\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      token: state.auth_reducer.token,\r\n      customer_bi_list: (state.list_reducer.customer_bi_list ? state.list_reducer.customer_bi_list: []),\r\n      customer_data: (state.list_reducer.customer_data ? state.list_reducer.customer_data: {})\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    CUSTOMER_BI_LIST_ACTION,\r\n    CUSTOMER_DATA_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomerPage);\r\n  ","import React from \"react\";\r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\n\r\n\r\nimport LoginPage from \"../components/auth\";\r\nimport HomePage from \"../components/home\";\r\nimport OrderPage from \"../components/orders\";\r\nimport ProductPage from \"../components/products\";\r\nimport CustomerPage from \"../components/customers\";\r\nimport DownloadExcelReport from \"../components/orders/excel\"\r\n\r\n\r\nclass Routes extends React.Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/login\" exact component={LoginPage} />\r\n                    <Route path=\"/\" exact component={HomePage} />\r\n                    <Route path=\"/orders\" exact component={OrderPage} />\r\n                    <Route path=\"/products\" exact component={ProductPage} />\r\n                    <Route path=\"/customers\" exact component={CustomerPage} />\r\n                    <Route path=\"/download_excel\" exact component={DownloadExcelReport} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routes;","import { Provider } from 'react-redux'\n\nimport Routes from './routes';\nimport { store } from './redux/store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './themes/theme1.scss';\nimport './themes/main.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}