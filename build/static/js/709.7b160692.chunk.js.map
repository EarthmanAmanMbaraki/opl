{"version":3,"file":"static/js/709.7b160692.chunk.js","mappings":"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","sources":["components/utils/errors.js","components/auth/index.js","components/utils/_funcs.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nclass ErrorComponent extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n            Object.keys(this.props.errors).map((key, idx) =>\r\n                <Alert key={idx} variant=\"danger\">{key}: {this.props.errors[key][0]}</Alert>\r\n            )\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorComponent","import React from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { depot_list } from \"../../apis/depot_api\";\r\nimport { product_top_customer } from \"../../apis/product_api\";\r\n\r\nimport {\r\n    GET_TOKEN_ACTION, GET_TOKEN_ERROR_REMOVE_ACTION,\r\n\r\n    GET_TOP_CUSTOMER_ACTION, GET_CUSTOMER_LIST_ACTION,\r\n\r\n    GET_DEPOT_MONTH_ACTION, GET_DEPOT_LIST_ACTION,\r\n\r\n    GET_PRODUCT_SERIES_ACTION, GET_PRODUCT_MONTH_ACTION, GET_PRODUCT_TOP_CUSTOMER_ACTION, GET_PRODUCT_LIST_ACTION,\r\n\r\n    UPDATE_DASHBOARD_METRIC_ACTION, UPDATE_SELECTION_DATES_ACTION, UPDATE_CURRENCY_TYPE_ACTION, UPDATE_PRODUCT_MONTH_YEAR_ACTION,\r\n    UPDATE_DEPOT_MONTH_MONTH_ACTION, UPDATE_DEPOT_MONTH_YEAR_ACTION, UPDATE_DEPOT_PRODUCT_MONTH_MONTH_ACTION, UPDATE_DEPOT_PRODUCT_MONTH_YEAR_ACTION,\r\n    UPDATE_TOP_CUSTOMER_MONTH_ACTION, UPDATE_TOP_CUSTOMER_PRODUCT_ACTION, UPDATE_TOP_CUSTOMER_YEAR_ACTION,\r\n    UPDATE_DEPOT_CUSTOMER_MONTH_ACTION, UPDATE_DEPOT_CUSTOMER_YEAR_ACTION, UPDATE_DEPOT_ACTION,\r\n\r\n    UPDATE_SALES_DATE_ACTION,\r\n} from \"../../redux/actions/actions\";\r\n\r\nimport { URL } from \"../../utils/_consts\";\r\nimport ErrorComponent from \"../utils/errors\";\r\nimport SpinnerComponent from \"../utils/spinner\";\r\nimport { addMonths } from \"../utils/_funcs\";\r\n\r\nclass LoginPage extends React.Component {\r\n    state = {\r\n        spinner: false,\r\n        redirect: false,\r\n        redirect_depot: false,\r\n        email: \"\",\r\n        password: \"\",\r\n        show_error: false,\r\n        null_error: false,\r\n        loaded: false\r\n    }\r\n\r\n    static getDerivedStateFromProps = async (props, state) => {\r\n\r\n        const { login_error, token, product_list, depot_list, customer_list } = props\r\n        let today = new Date(\"30 Jan 2022\")\r\n        let today2 = new Date(\"30 Jan 2022\")\r\n        let todayw = new Date(\"30 Jan 2022\")\r\n        let todayw2 = new Date(\"30 Jan 2022\")\r\n        if (typeof (props.login_error) === \"object\" && login_error !== null) {\r\n            state.show_error = true\r\n            state.spinner = false\r\n        }\r\n\r\n        else if (product_list !== undefined && depot_list !== undefined && customer_list !== undefined) {\r\n            if (token.is_staff === false) {\r\n                state.redirect_depot = true\r\n            } else if (customer_list !== undefined) {\r\n                state.redirect = true\r\n\r\n            }\r\n            state.show_error = false\r\n            state.spinner = false\r\n        }\r\n        // else if (product_month !== undefined && product_series !== undefined && depot_month !== undefined && top_customer !== undefined && product_top_customer !== undefined) {\r\n        //     state.show_error = false\r\n        //     state.spinner = false\r\n        //     state.redirect = true\r\n        // }\r\n        else if (token !== undefined && token !== null && state.loaded === false) {\r\n            state.loaded = true\r\n            const selection_date_start = addMonths(today2, -1)\r\n            await props.UPDATE_DASHBOARD_METRIC_ACTION(true)\r\n            await props.UPDATE_CURRENCY_TYPE_ACTION(\"Million\")\r\n\r\n\r\n\r\n            await props.UPDATE_SELECTION_DATES_ACTION({ \"endDate\": today, \"startDate\": selection_date_start })\r\n            await props.UPDATE_DEPOT_MONTH_MONTH_ACTION(13)\r\n            await props.UPDATE_DEPOT_MONTH_YEAR_ACTION(today.getFullYear())\r\n            await props.UPDATE_DEPOT_PRODUCT_MONTH_MONTH_ACTION(13)\r\n            await props.UPDATE_DEPOT_PRODUCT_MONTH_YEAR_ACTION(today.getFullYear())\r\n            await props.UPDATE_DEPOT_CUSTOMER_YEAR_ACTION(today.getFullYear())\r\n            await props.UPDATE_DEPOT_CUSTOMER_MONTH_ACTION(13)\r\n\r\n            await props.UPDATE_DEPOT_ACTION(0)\r\n\r\n            if (token.is_staff) {\r\n                await props.UPDATE_SALES_DATE_ACTION({ \"end_date\": todayw, \"start_date\": addMonths(todayw2, -1) })\r\n                await props.UPDATE_PRODUCT_MONTH_YEAR_ACTION(today.getFullYear())\r\n                await props.UPDATE_TOP_CUSTOMER_MONTH_ACTION(13)\r\n                await props.UPDATE_TOP_CUSTOMER_YEAR_ACTION(today.getFullYear())\r\n                await props.UPDATE_TOP_CUSTOMER_PRODUCT_ACTION(\"All\")\r\n\r\n            }\r\n\r\n\r\n            await props.GET_DEPOT_LIST_ACTION()\r\n            await props.GET_PRODUCT_LIST_ACTION()\r\n            await props.GET_CUSTOMER_LIST_ACTION()\r\n\r\n\r\n            return state\r\n        }\r\n\r\n        return state\r\n    }\r\n    onSubmit = async (event) => {\r\n        event.preventDefault()\r\n        await this.props.GET_TOKEN_ERROR_REMOVE_ACTION()\r\n        const { email, password } = this.state\r\n        if (email === \"\" || password === \"\") {\r\n            this.setState({ null_error: true })\r\n        } else {\r\n            this.setState({ spinner: true, show_error: false })\r\n            await this.props.GET_TOKEN_ACTION(email, password)\r\n        }\r\n    }\r\n    render() {\r\n        const { show_error, null_error, spinner, email } = this.state\r\n        if (this.state.redirect) {\r\n            return <Navigate to={\"/\"} />\r\n        } else if (this.state.redirect_depot) {\r\n            return <Navigate to=\"/depots\" />\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n                <Row className='login-row'>\r\n                    {spinner ? <SpinnerComponent spinner={spinner} /> : null}\r\n                    <Col className='login-row__logo-col'>\r\n                        <img src={`${URL}/static/opl_logo.png`} alt='logo' />\r\n                    </Col>\r\n                    <Col xs={7} className=\"login-row__form-col\">\r\n\r\n                        <Form onSubmit={this.onSubmit} className=\"login-form\">\r\n                            <div className='login-form__title'>\r\n                                <h3>Sign in To The Dashboard</h3>\r\n                                <p>Enter your email and password to sign in.</p>\r\n                            </div>\r\n\r\n                            {show_error ? <ErrorComponent errors={this.props.login_error} /> : null}\r\n                            {null_error ? <ErrorComponent errors={{ \"\": [\"Fields cannot be empty\"] }} /> : null}\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter email\"\r\n                                    className='login-form__input'\r\n                                    onChange={(e) => this.setState({\r\n                                        email: e.target.value,\r\n                                        show_error: false,\r\n                                        null_error: false,\r\n                                    })} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    className='login-form__input'\r\n                                    onChange={(e) => this.setState({\r\n                                        password: e.target.value,\r\n                                        show_error: false,\r\n                                        null_error: false\r\n                                    })} />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\" className='login-form__submit'>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n        login_error: state.auth_reducer.login_error,\r\n\r\n        depot_list: state.list_reducer.depot_list,\r\n        product_list: state.list_reducer.product_list,\r\n        customer_list: state.list_reducer.customer_list,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    GET_TOKEN_ACTION, GET_TOKEN_ERROR_REMOVE_ACTION,\r\n\r\n    GET_TOP_CUSTOMER_ACTION, GET_CUSTOMER_LIST_ACTION,\r\n\r\n    GET_DEPOT_MONTH_ACTION, GET_DEPOT_LIST_ACTION,\r\n\r\n    GET_PRODUCT_SERIES_ACTION, GET_PRODUCT_MONTH_ACTION, GET_PRODUCT_TOP_CUSTOMER_ACTION, GET_PRODUCT_LIST_ACTION,\r\n\r\n    UPDATE_DASHBOARD_METRIC_ACTION, UPDATE_SELECTION_DATES_ACTION, UPDATE_CURRENCY_TYPE_ACTION,\r\n    UPDATE_PRODUCT_MONTH_YEAR_ACTION, UPDATE_DEPOT_MONTH_MONTH_ACTION, UPDATE_DEPOT_MONTH_YEAR_ACTION,\r\n    UPDATE_DEPOT_PRODUCT_MONTH_MONTH_ACTION, UPDATE_DEPOT_PRODUCT_MONTH_YEAR_ACTION,\r\n    UPDATE_TOP_CUSTOMER_MONTH_ACTION, UPDATE_TOP_CUSTOMER_PRODUCT_ACTION, UPDATE_TOP_CUSTOMER_YEAR_ACTION,\r\n    UPDATE_DEPOT_CUSTOMER_MONTH_ACTION, UPDATE_DEPOT_CUSTOMER_YEAR_ACTION,\r\n\r\n    UPDATE_SALES_DATE_ACTION, UPDATE_DEPOT_ACTION,\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(LoginPage);","export const addMonths = (date, months) => {\r\n    date.setMonth(date.getMonth() + months);\r\n    return date;\r\n}\r\n\r\nexport const currency_type_display = (currency_type) => {\r\n    if (currency_type === \"Million\") {\r\n        return \"m\"\r\n    }\r\n    else {\r\n        return \"k\"\r\n    }\r\n}\r\n\r\nexport const truncate = (num) => {\r\n    return parseFloat(num.toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0])\r\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["ErrorComponent","Object","keys","this","props","errors","map","key","idx","Alert","variant","React","LoginPage","state","spinner","redirect","redirect_depot","email","password","show_error","null_error","loaded","onSubmit","event","preventDefault","GET_TOKEN_ERROR_REMOVE_ACTION","setState","GET_TOKEN_ACTION","to","Container","Row","className","Col","src","URL","alt","xs","Form","login_error","controlId","type","placeholder","onChange","e","target","value","Button","getDerivedStateFromProps","token","product_list","depot_list","customer_list","today","Date","today2","todayw","todayw2","undefined","is_staff","selection_date_start","addMonths","UPDATE_DASHBOARD_METRIC_ACTION","UPDATE_CURRENCY_TYPE_ACTION","UPDATE_SELECTION_DATES_ACTION","UPDATE_DEPOT_MONTH_MONTH_ACTION","UPDATE_DEPOT_MONTH_YEAR_ACTION","getFullYear","UPDATE_DEPOT_PRODUCT_MONTH_MONTH_ACTION","UPDATE_DEPOT_PRODUCT_MONTH_YEAR_ACTION","UPDATE_DEPOT_CUSTOMER_YEAR_ACTION","UPDATE_DEPOT_CUSTOMER_MONTH_ACTION","UPDATE_DEPOT_ACTION","UPDATE_SALES_DATE_ACTION","UPDATE_PRODUCT_MONTH_YEAR_ACTION","UPDATE_TOP_CUSTOMER_MONTH_ACTION","UPDATE_TOP_CUSTOMER_YEAR_ACTION","UPDATE_TOP_CUSTOMER_PRODUCT_ACTION","GET_DEPOT_LIST_ACTION","GET_PRODUCT_LIST_ACTION","GET_CUSTOMER_LIST_ACTION","mapDispatchToProps","GET_TOP_CUSTOMER_ACTION","GET_DEPOT_MONTH_ACTION","GET_PRODUCT_SERIES_ACTION","GET_PRODUCT_MONTH_ACTION","GET_PRODUCT_TOP_CUSTOMER_ACTION","connect","auth_reducer","list_reducer","date","months","setMonth","getMonth","currency_type_display","currency_type","truncate","num","parseFloat","toString","match","ref","useRef","useEffect","current","useEventCallback","fn","useCommittedRef","useCallback","apply","arguments","isReactNative","global","navigator","product","document","useLayoutEffect","WeakMap","_excluded","Anchor","_ref","href","onKeyDown","source","excluded","i","sourceKeys","length","indexOf","_objectWithoutPropertiesLoose","useButtonProps","assign","tagName","buttonProps","handleKeyDown","trim","role","_jsx","displayName","bsPrefix","as","Component","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","classNames"],"sourceRoot":""}