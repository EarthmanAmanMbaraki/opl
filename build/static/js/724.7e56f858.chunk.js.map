{"version":3,"file":"static/js/724.7e56f858.chunk.js","mappings":"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","sources":["components/customer/top.js","components/customer/charts/customer_month.js","components/utils/select/customer_select.js","components/customer/index.js","components/utils/_funcs.js","components/utils/header.js","components/utils/layout.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Table } from \"react-bootstrap\"\r\n\r\nclass CustomerTop extends React.Component {\r\n    state = {\r\n        info: []\r\n    }\r\n    numberWithCommas(x) {\r\n        return (x).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    static getDerivedStateFromProps = (props, state) => {\r\n        let result = props.customer.filter(obj => {\r\n            return obj.year === parseInt(props.customer_year)\r\n        })\r\n        state.info = result[0]\r\n        return state\r\n    }\r\n\r\n    total = (months, count = false) => {\r\n        let sum = 0\r\n\r\n        if (count === true) {\r\n            sum = months.reduce((accumulator, object) => {\r\n                return accumulator + object.count;\r\n            }, 0);\r\n        }\r\n        else {\r\n            sum = months.reduce((accumulator, object) => {\r\n                return accumulator + object.sum;\r\n            }, 0);\r\n        }\r\n\r\n        return sum\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"customer-content__header\">\r\n                <h5 className=\"customer-content__header__name\">{this.props.name}</h5>\r\n                <div className=\"customer-info\">\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Total Sales</th>\r\n                                <th>Total Amount</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.info === undefined ?\r\n                                <tr>\r\n                                    <td>0</td>\r\n                                    <td>0</td>\r\n                                </tr> :\r\n                                <tr>\r\n                                    <td>{this.total(this.state.info.months, true)}</td>\r\n                                    <td>{this.numberWithCommas(this.total(this.state.info.months))}</td>\r\n                                </tr>}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CustomerTop);\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport ReactApexChart from \"react-apexcharts\"\r\nimport { truncate } from \"../../utils/_funcs\";\r\n\r\nconst mapData = (data, year, currency_type) => {\r\n    if (data === undefined || data === null || data === []) {\r\n        return null\r\n    }\r\n    let result = data.filter(obj => {\r\n        return obj.year === parseInt(year)\r\n    })\r\n\r\n    let months = new Array(12).fill(0)\r\n\r\n    data = result.length > 0 ? result[0].months : []\r\n\r\n    for (const month in data) {\r\n        let month_value = data[month]\r\n        months[month_value.date__month - 1] = currency_type === \"Million\" ? truncate(month_value.sum / 10000000) : truncate(month_value.sum / 1000)\r\n    }\r\n    return months\r\n}\r\n\r\nclass CustomerMonth extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            series: [],\r\n            options: {\r\n                chart: {\r\n                    type: 'bar',\r\n                    height: 350\r\n                },\r\n\r\n                title: {\r\n                    text: 'Monthly Sale Comparison'\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal: false,\r\n                        columnWidth: '55%',\r\n                        endingShape: 'rounded'\r\n                    },\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    show: true,\r\n                    width: 2,\r\n                    colors: ['transparent']\r\n                },\r\n                xaxis: {\r\n                    title: {\r\n                        text: 'Months'\r\n                    },\r\n                    categories: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\r\n                },\r\n                yaxis: {\r\n                    title: {\r\n                        text: this.props.dashboard_metric ? 'Kshs (Millions)' : \"Litres\"\r\n                    }\r\n                },\r\n                fill: {\r\n                    opacity: 1\r\n                },\r\n                tooltip: {\r\n                    y: {\r\n                        formatter: this.props.dashboard_metric ? function (val) {\r\n                            return \"Kshs \" + val + \" Million\"\r\n                        } : function (val) {\r\n                            return val + \" Litres\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n\r\n        };\r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n\r\n        let data = props.customer !== undefined ? mapData(props.customer, props.customer_year, props.currency_type) : null\r\n        let series = [{\r\n            name: props.dashboard_metric ? \"Revenue\" : \"Quantity\",\r\n            data: data === null ? [] : data\r\n        }]\r\n\r\n        state.series = series\r\n        state.options.yaxis.title.text = props.dashboard_metric ? \"Customer Revenue\" : \"Customer Quantity\"\r\n\r\n        return state\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n\r\n            <div id=\"chart\">\r\n                <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CustomerMonth);\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n    UPDATE_DASHBOARD_CUSTOMER_MONTH_ACTION,\r\n    UPDATE_DASHBOARD_CUSTOMER_YEAR_ACTION,\r\n    UPDATE_DASHBOARD_CUSTOMER_PRODUCT_ACTION,\r\n    UPDATE_CUSTOMER_YEAR_ACTION,\r\n} from \"../../../redux/actions/actions\"\r\n\r\n\r\nclass CustomerSelect extends React.Component {\r\n    state = {\r\n        year: this.props.customer_year,\r\n    }\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n        state.year = parseInt(props.customer_year)\r\n        return state\r\n    }\r\n\r\n    handleYearChange = async (year) => {\r\n        await this.props.UPDATE_CUSTOMER_YEAR_ACTION(year)\r\n    }\r\n\r\n\r\n    render() {\r\n        const years = [2022, 2021]\r\n\r\n        return (\r\n            <div className=\"pie-select\">\r\n\r\n                <Form.Group className=\"mb-4 pie-select__child\" controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Year</Form.Label>\r\n                    <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleYearChange(e.target.value)}>\r\n                        <option>{this.state.year}</option>\r\n                        {years.map((year, idx) =>\r\n                            parseInt(this.state.year) === year ? null : <option key={idx} value={year}>{year}</option>\r\n                        )}\r\n\r\n                    </Form.Select>\r\n                </Form.Group>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        customer_year: state.update_reducer.customer_year\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    UPDATE_CUSTOMER_YEAR_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CustomerSelect);\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Form, FormControl, Button } from 'react-bootstrap';\r\nimport { Navigate } from 'react-router-dom';\r\nimport Layout from '../utils/layout';\r\nimport {\r\n    GET_CUSTOMER_LIST_ACTION,\r\n    GET_CUSTOMER_DETAIL_ACTION,\r\n    UPDATE_CUSTOMER_YEAR_ACTION,\r\n} from \"../../redux/actions/actions\"\r\nimport CustomerTop from \"./top\"\r\n\r\nimport SpinnerComponent from '../utils/spinner';\r\nimport CustomerMonth from './charts/customer_month';\r\nimport CustomerSelect from '../utils/select/customer_select';\r\n\r\n\r\nclass CustomerPage extends React.Component {\r\n    state = {\r\n        redirect: false,\r\n        spinner: false,\r\n        customer_spinner: false,\r\n        didnt_load: false,\r\n        customer_list: this.props.customer_list ? this.props.customer_list : [],\r\n        customer: this.props.customer_list ? this.props.customer_list[0] : null,\r\n        customer_name: null,\r\n        customer_id: null,\r\n        dashboard_metric: this.props.dashboard_metric,\r\n        currency_type: this.props.currency_type,\r\n        customer_year: this.props.customer_year,\r\n    }\r\n\r\n    static getDerivedStateFromProps = async (props, state) => {\r\n        const { token, customer_list, customer_detail } = props\r\n        if (token === undefined || token === \"\") {\r\n            state.redirect = true\r\n            return state\r\n        }\r\n        else {\r\n\r\n            if (state.customer_id === null || customer_detail === undefined) {\r\n\r\n                state.customer_id = customer_list[0].id\r\n                state.spinner = false\r\n                state.customer_spinner = true\r\n                await props.GET_CUSTOMER_DETAIL_ACTION(customer_list[0].id)\r\n            }\r\n            else if (customer_detail !== undefined && state.customer_id == customer_detail.id) {\r\n\r\n                state.customer = customer_detail\r\n                state.customer_spinner = false\r\n                state.spinner = false\r\n            }\r\n            else if (customer_detail !== undefined && state.customer_id !== customer_detail.id) {\r\n                state.customer_spinner = true\r\n            }\r\n            else {\r\n                state.spinner = false\r\n                state.customer_spinner = false\r\n                state.customer_id = props.customer_detail.id\r\n            }\r\n        }\r\n\r\n        state.customer_list = customer_list\r\n        state.dashboard_metric = props.dashboard_metric\r\n        state.currency_type = props.currency_type\r\n        state.customer_year = props.customer_year\r\n\r\n        return state\r\n    }\r\n    onSearchChange = (e) => {\r\n\r\n        if (e === \"\" || e === undefined || e === null) {\r\n            this.setState({ customer_list: this.props.customer_list })\r\n        } else {\r\n            this.setState({ customer_name: e })\r\n        }\r\n    }\r\n\r\n    onSearch = (e) => {\r\n        e.preventDefault()\r\n        const { customer_name } = this.state\r\n        let customer_list = this.props.customer_list\r\n        customer_list = customer_list.filter(function (or) {\r\n            return or.name.toLowerCase().includes(customer_name.toLowerCase())\r\n        });\r\n\r\n\r\n        this.setState({ customer_list: customer_list })\r\n    }\r\n\r\n    onClick = async (index) => {\r\n        let customer_list = this.state.customer_list\r\n        customer_list = customer_list.filter(function (or) {\r\n            return or.id === parseInt(index)\r\n        });\r\n\r\n        if (customer_list.length > 0) {\r\n            await this.setState({ customer_id: customer_list[0].id, customer_spinner: true })\r\n            await this.props.GET_CUSTOMER_DETAIL_ACTION(customer_list[0].id)\r\n        }\r\n\r\n    }\r\n    componentDidMount = async () => {\r\n        this.setState({ spinner: true })\r\n        await this.props.UPDATE_CUSTOMER_YEAR_ACTION(new Date().getFullYear())\r\n    }\r\n\r\n    render() {\r\n        const { spinner, customer_year } = this.state\r\n        let customer_data = null\r\n\r\n        try {\r\n            customer_data = this.state.dashboard_metric ? this.state.customer.revenue : this.state.customer.quantity\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        if (this.state.redirect) {\r\n            return <Navigate to={\"/login\"} />\r\n        }\r\n\r\n        return (\r\n            <Layout header_title={\"CUSTOMERS\"}>\r\n                {(spinner || this.props.customer_list === undefined || this.props.customer_detail === undefined) ? <SpinnerComponent spinner={spinner} /> : null}\r\n                {this.props.customer_list !== undefined ?\r\n                    <div>\r\n                        <div>\r\n                            <CustomerSelect />\r\n                        </div>\r\n                        <Row>\r\n                            <Col xs={3}>\r\n                                <div className=\"customer-side chart-area\">\r\n                                    <h6>Pick a customer</h6>\r\n\r\n                                    <Form className=\"d-flex\" onSubmit={this.onSearch}>\r\n                                        <FormControl\r\n                                            type=\"search\"\r\n                                            placeholder=\"Search\"\r\n                                            className=\"me-2\"\r\n                                            aria-label=\"Search\"\r\n                                            size='sm'\r\n                                            onChange={(e) => this.onSearchChange(e.target.value)}\r\n                                        />\r\n                                        <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\">Search</Button>\r\n                                    </Form>\r\n\r\n                                    <div>\r\n                                        {this.state.customer_list.map((customer, idx) =>\r\n                                            <div key={idx} className={\"customer-side__scroll\"}>\r\n                                                {this.state.customer_id === customer.id ?\r\n\r\n                                                    <Button className='customer-side__customer customer-side__active' variant=\"transparent\" onClick={() => this.onClick(customer.id)}>\r\n\r\n                                                        <div className='customer-side__info'>\r\n                                                            <div className='customer-side__profile'>\r\n\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <h6 className='customer-side__name'>{customer.name}</h6>\r\n                                                                {/* <p className='customer-location'>{customer.location}</p> */}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Button> :\r\n                                                    <Button className='customer-side__customer' variant=\"transparent\" onClick={() => this.onClick(customer.id)}>\r\n\r\n                                                        <div className='customer-side__info'>\r\n                                                            <div className='customer-side__profile'>\r\n\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <h6 className='customer-side__name'>{customer.name}</h6>\r\n                                                                {/* <p className='customer-location'>{customer.location}</p> */}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Button>}\r\n                                            </div>\r\n                                        )}\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </Col>\r\n                            <Col xs={9} style={{ position: \"relative\" }}>\r\n                                {this.state.customer_spinner || customer_data === undefined ? <SpinnerComponent spinner={this.state.customer_spinner} /> :\r\n                                    <div>\r\n                                        <CustomerTop\r\n                                            customer={customer_data}\r\n                                            name={this.state.customer ? this.state.customer.name : null}\r\n                                            customer_year={customer_year}\r\n                                        />\r\n                                        <CustomerMonth\r\n                                            customer={customer_data}\r\n                                            customer_year={customer_year}\r\n                                            dashboard_metric={this.state.dashboard_metric}\r\n                                            currency_type={this.state.currency_type}\r\n                                        />\r\n                                    </div>}\r\n                            </Col>\r\n                        </Row>\r\n                    </div> : null\r\n                }\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n        customer_list: state.list_reducer.customer_list,\r\n        customer_detail: state.list_reducer.customer_detail,\r\n        dashboard_metric: state.update_reducer.dashboard_metric,\r\n        currency_type: state.update_reducer.currency_type,\r\n        customer_year: state.update_reducer.customer_year,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    GET_CUSTOMER_LIST_ACTION,\r\n    GET_CUSTOMER_DETAIL_ACTION,\r\n    UPDATE_CUSTOMER_YEAR_ACTION,\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CustomerPage);\r\n","export const addMonths = (date, months) => {\r\n    date.setMonth(date.getMonth() + months);\r\n    return date;\r\n}\r\n\r\nexport const currency_type_display = (currency_type) => {\r\n    if (currency_type === \"Million\") {\r\n        return \"m\"\r\n    }\r\n    else {\r\n        return \"k\"\r\n    }\r\n}\r\n\r\nexport const truncate = (num) => {\r\n    return parseFloat(num.toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0])\r\n}","import React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\"\r\nimport { UPDATE_CURRENCY_TYPE_ACTION } from \"../../redux/actions/actions\"\r\n\r\nclass HeaderComponent extends React.Component {\r\n    state = {\r\n        currency_type: this.props.currency_type\r\n    }\r\n\r\n    static getDerivedStateFromProps = async (props, state) => {\r\n        state.currency_type = props.currency_type\r\n        return state\r\n    }\r\n\r\n    handleCurrencyTypeChange = async (currency_type) => {\r\n\r\n        this.props.UPDATE_CURRENCY_TYPE_ACTION(currency_type)\r\n    }\r\n    render() {\r\n        const currency_types = [\"Million\", \"Thousand\"]\r\n\r\n        return (\r\n            <div className=\"header\">\r\n                <h5>{this.props.header_title}</h5>\r\n                <div className=\"header__left\">\r\n\r\n                    <Form.Group className=\"header__currency\" controlId=\"exampleForm.ControlInput1\">\r\n                        {/* <Form.Label>Product</Form.Label> */}\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleCurrencyTypeChange(e.target.value)}>\r\n                            <option>{this.state.currency_type}</option>\r\n                            {currency_types.map((currency_type, idx) =>\r\n                                this.state.currency_type === currency_type ? null : <option key={idx} value={currency_type}>{currency_type}</option>\r\n                            )}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"secondary\" size=\"sm\">{this.props.first_name[0]}{this.props.last_name[0]}</Button>\r\n                    <p className=\"header__header-name\">{this.props.first_name} {this.props.last_name}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currency_type: state.update_reducer.currency_type,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    UPDATE_CURRENCY_TYPE_ACTION\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(HeaderComponent);","import React from \"react\";\r\nimport { Container, Button } from 'react-bootstrap'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { MdLogout, MdDashboard, MdOutlineListAlt, MdPeople, MdAnchor } from \"react-icons/md\";\r\nimport { Link, Navigate, NavLink } from \"react-router-dom\";\r\nimport HeaderComponent from \"./header\";\r\nimport { URL } from \"../../utils/_consts\";\r\nimport { USER_LOGGED_OUT_ACTION } from \"../../redux/actions/actions\"\r\n\r\nclass Layout extends React.Component {\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    handleLogOut = () => {\r\n        this.props.USER_LOGGED_OUT_ACTION()\r\n        this.setState({ redirect: true })\r\n\r\n    }\r\n    render() {\r\n\r\n        if (this.state.redirect) {\r\n            return <Navigate to={\"/login\"} />\r\n        }\r\n        return (\r\n            <Container fluid className=\"layout_main\">\r\n\r\n                <div className=\"layout_main__side\">\r\n                    <Link to=\"/\" className=\"layout_main__logo\">\r\n                        <img src={`${URL}/static/opl_logo.png`} alt=\"logo\" className=\"layout_main__logo--img\" />\r\n                    </Link>\r\n\r\n                    <div className=\"layout_main__links\">\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdDashboard size={20} color=\"#D04D30\" /></span>Dashboard</h6>\r\n                            </NavLink> : null}\r\n\r\n                        <NavLink to=\"/depots\" className=\"layout_main__button\">\r\n                            <h6><span className=\"layout_main__links--span\"><MdAnchor /></span>Depots</h6>\r\n                        </NavLink>\r\n\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/sales\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdOutlineListAlt /></span>Sales</h6>\r\n                            </NavLink> : null}\r\n\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/customers\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdPeople /></span>Customers</h6>\r\n                            </NavLink> : null}\r\n                        <Button variant=\"transparent\" className=\"layout_main__button layout_main__logout\" onClick={this.handleLogOut}>\r\n                            <h6><span className=\"layout_main__links--span\"><MdLogout /></span>Log Out</h6>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"layout_main__component\">\r\n                    <HeaderComponent header_title={this.props.header_title} first_name={this.props.token.data.first_name} last_name={this.props.token.data.last_name} />\r\n                    {this.props.children}\r\n                </div>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    USER_LOGGED_OUT_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Layout);\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;"],"names":["CustomerTop","state","info","total","months","count","reduce","accumulator","object","sum","x","toString","replace","className","this","props","name","Table","striped","bordered","hover","size","undefined","numberWithCommas","React","getDerivedStateFromProps","result","customer","filter","obj","year","parseInt","customer_year","connect","CustomerMonth","series","options","chart","type","height","title","text","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","show","width","colors","xaxis","categories","yaxis","dashboard_metric","fill","opacity","tooltip","y","formatter","val","id","data","currency_type","Array","month","length","month_value","date__month","truncate","mapData","CustomerSelect","handleYearChange","UPDATE_CUSTOMER_YEAR_ACTION","Form","controlId","onChange","e","target","value","map","idx","mapDispatchToProps","update_reducer","CustomerPage","redirect","spinner","customer_spinner","didnt_load","customer_list","customer_name","customer_id","onSearchChange","setState","onSearch","preventDefault","or","toLowerCase","includes","onClick","index","GET_CUSTOMER_DETAIL_ACTION","componentDidMount","Date","getFullYear","customer_data","revenue","quantity","to","header_title","customer_detail","Row","Col","xs","onSubmit","FormControl","placeholder","Button","variant","style","position","token","GET_CUSTOMER_LIST_ACTION","auth_reducer","list_reducer","addMonths","date","setMonth","getMonth","currency_type_display","num","parseFloat","match","HeaderComponent","handleCurrencyTypeChange","UPDATE_CURRENCY_TYPE_ACTION","first_name","last_name","Layout","handleLogOut","USER_LOGGED_OUT_ACTION","Container","fluid","src","URL","alt","is_staff","color","children","ref","bsPrefix","borderless","responsive","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass"],"sourceRoot":""}