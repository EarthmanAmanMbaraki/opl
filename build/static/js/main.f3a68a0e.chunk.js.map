{"version":3,"sources":["apis/auth.js","redux/actions/actionTypes.js","redux/reducers/authReducer.js","redux/reducers/createReducers.js","redux/reducers/listReducer.js","redux/reducers/updateReducer.js","redux/reducers/reducer.js","redux/store.js","apis/list.js","apis/create.js","apis/update.js","redux/actions/actions.js","components/auth/index.js","components/header.js","components/layout.js","components/common/depot_main_select.js","components/depots/charts/top.js","components/common/depot_select.js","components/depots/charts/depot_main.js","components/depots/charts/depot_ products.js","components/depots/customer_table.js","components/common/depot_customers.js","components/depots/chart_section.js","components/depots/charts/pie.js","components/home/upload_form.js","components/home/customer-upload.js","components/home/upload_excel.js","components/home/download.js","components/home/input-section.js","components/depots/index.js","components/common/year_select.js","components/common/pie_select.js","components/home/chart1.js","components/home/chart2.js","components/home/charts/main_chart.js","components/home/charts_section.js","components/common/customer_select.js","components/home/customers.js","components/home/index.js","components/home/top-tabs.js","components/orders/excel.js","components/orders/top.js","components/orders/edit.js","components/orders/table.js","components/orders/index.js","components/products/graphs/bar_chart.js","components/products/graphs/first.js","components/products/graphs/radar_chart.js","components/products/graphs/index.js","components/products/table.js","components/products/top.js","components/products/index.js","components/customers/chart1.js","components/customers/chart2.js","components/customers/top_tab.js","components/customers/orders.js","components/common/customers_select.js","components/customers/index.js","routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["get_token","username","password","a","fetch","method","headers","body","JSON","stringify","raw_data","json","data","console","log","GET_DEPOT_LIST","GET_DEPOT_CUSTOMER_LIST","GET_DEPOT_EXPAND","GET_DEPOT_EXPAND_DAILY","GET_DEPOT_EXPAND_MONTHLY","GET_DEPOT_EXPAND_MAIN_DAILY","GET_DEPOT_EXPAND_CUSTOMERS","GET_PRODUCT_EXPAND_DAILY","GET_PRODUCT_EXPAND_MONTHLY","GET_PRODUCT_EXPAND","GET_CUSTOMER_EXPAND_ALL","GET_CUSTOMER_EXPAND_MONTH","GET_CUSTOMER_EXPAND","GET_DEPOT_TIME_SERIES","UPDATE_DASHBOARD_PRODUCT_MONTHLY","UPDATE_DASHBOARD_DEPOT_YEAR","UPDATE_DASHBOARD_DEPOT_MONTH","UPDATE_DASHBOARD_CUSTOMER_YEAR","UPDATE_DASHBOARD_CUSTOMER_MONTH","UPDATE_DASHBOARD_CUSTOMER_PRODUCT","UPDATE_DEPOT_TIME_SERIES_YEAR","UPDATE_DEPOT_TIME_SERIES_MONTH","UPDATE_DEPOT_INDEX","UPDATE_DEPOT_CUSTOMER_MONTH","UPDATE_DEPOT_CUSTOMER_YEAR","UPDATE_CUSTOMER_YEAR","GET_TOKEN","GET_TOKEN_ERROR","GET_TOKEN_ERROR_REMOVE","UPDATE_SELECTION_DATE","UPDATE_METRIC","CREATE_CUSTOMER","CREATE_CUSTOMER_ERROR","CUSTOMER_LIST","CUSTOMER_LIST_MONTHLY","CREATE_TRUCK","CREATE_TRUCK_ERROR","CREATE_ENTRY","CREATE_ENTRY_ERROR","UPDATE_ENTRY","UPDATE_ENTRY_ERROR","DELETE_ENTRY","DELETE_ENTRY_ERROR","ENTRY_LIST","PRODUCT_LIST","PRODUCT_INDEX","MAIN_BI_LIST","BI_LIST","PRODUCT_BI_LIST","CUSTOMER_BI_LIST","CUSTOMER_DATA","ORDER_DATES","USER_LOGGED_OUT","UPLOAD_EXCEL","UPLOAD_EXCEL_ERROR","merge","prev","next","Object","assign","AuthReducer","state","action","type","token","payload","login_error","CreateReducer","created_customer","create_customer_error","created_truck","create_truck_error","created_entry","create_entry_error","uploaded_excel","upload_excel_error","ListReducer","depot_list","depot_expand","depot_expand_daily","depot_customer_list","depot_expand_monthly","depot_expand_main_daily","depot_expand_customers","product_expand","product_expand_monthly","product_expand_daily","depot_time_series","customer_expand","customer_expand_all","customer_expand_month","selection_dates","dashboard_metric","customers","customers_monthly","products","product_index","entries","main_bi_list","bi_list","product_bi_list","customer_bi_list","customer_data","order_dates","UpdateReducer","updated_entry","update_entry_error","deleted_entry","delete_entry_error","update_dashboard_year_product_monthly","update_dashboard_depot_month","update_dashboard_depot_year","update_depot_index","update_dashboard_customer_month","update_dashboard_customer_year","update_dashboard_customer_product","update_depot_time_series_month","update_depot_time_series_year","update_depot_customer_month","update_depot_customer_year","update_customer_year","appReducer","combineReducers","auth_reducer","create_reducer","list_reducer","update_reducer","rootReducer","storage","removeItem","undefined","persistConfig","key","persistedReducer","persistReducer","reducer","store","createStore","applyMiddleware","thunk","persistStore","getState","is_staff","filter","obj","name","depot","depot_expand_main","depot_expand_customer","id","customer_list","location","customer_list_monthly","product_list","depot_id","entry_list","customer_create","parseInt","entry_create","product","truck","entry_no","order_no","date","vol_obs","vol_20","selling_price","upload_excel","file","formData","FormData","append","rData","entry_update","entry_delete","DEPOT_LIST_ACTION","dispatch","then","catch","error","DEPOT_EXPAND_ACTION","DEPOT_EXPAND_DAILY_ACTION","DEPOT_EXPAND_MONTHLY_ACTION","DEPOT_EXPAND_MAIN_DAILY_ACTION","DEPOT_EXPAND_CUSTOMERS_ACTION","PRODUCT_EXPAND_ACTION","PRODUCT_EXPAND_MONTHLY_ACTION","PRODUCT_EXPAND_DAILY_ACTION","CUSTOMER_EXPAND_ACTION","CUSTOMER_EXPAND_ALL_ACTION","CUSTOMER_EXPAND_MONTH_ACTION","DEPOT_TIME_SERIES_ACTION","UPDATE_DASHBOARD_PRODUCT_MONTHLY_ACTION","year","UPDATE_DASHBOARD_DEPOT_YEAR_ACTION","UPDATE_DASHBOARD_DEPOT_MONTH_ACTION","month","UPDATE_DASHBOARD_CUSTOMER_YEAR_ACTION","UPDATE_DASHBOARD_CUSTOMER_MONTH_ACTION","UPDATE_DASHBOARD_CUSTOMER_PRODUCT_ACTION","UPDATE_DEPOT_TIME_SERIES_YEAR_ACTION","UPDATE_DEPOT_TIME_SERIES_MONTH_ACTION","UPDATE_DEPOT_INDEX_ACTION","index","UPDATE_DEPOT_CUSTOMER_MONTH_ACTION","UPDATE_DEPOT_CUSTOMER_YEAR_ACTION","UPDATE_CUSTOMER_YEAR_ACTION","UPDATE_SELECTION_DATE_ACTION","dates","UPDATE_METRIC_ACTION","status","CREATE_CUSTOMER_ACTION","errors","non_field_errors","e","CUSTOMER_LIST_ACTION","ENTRY_LIST_ACTION","PRODUCT_LIST_ACTION","PRODUCT_INDEX_ACTION","MAIN_BI_LIST_ACTION","BI_LIST_ACTION","PRODUCT_BI_LIST_ACTION","CUSTOMER_BI_LIST_ACTION","LoginPage","spinner","redirect","redirect_depot","email","show_error","null_error","addMonths","months","setMonth","getMonth","componentWillReceiveProps","nextProps","setState","status_code","today","Date","today2","props","getFullYear","DEPOT_CUSTOMER_LIST_ACTION","CUSTOMER_LIST_MONTHLY_ACTION","onSubmit","event","preventDefault","GET_TOKEN_ACTION","componentWillMount","GET_TOKEN_ERROR_REMOVE_ACTION","this","to","Container","Row","className","ariaLabel","color","height","width","timeout","visible","Col","src","alt","xs","Alert","variant","keys","map","idx","Form","Group","controlId","Control","placeholder","onChange","target","value","Button","Component","mapDispatchToProps","connect","HeaderComponent","length","handleRefresh","headerTitle","size","first_name","last_name","React","Layout","dashboard","orders","handleClick","btn","filtered","arr","link","handleLogOut","USER_LOGGED_OUT_ACTION","fluid","exact","onClick","children","DepotMainSelect","handleYearChange","handleMonthChange","Label","Select","MainChart","mapYears","result","values","series","i","push","mapMonths","update","years_revenue","years_quantity","months_revenue","months_quantity","prevState","options","xaxis","categories","depots","tooltip","y","formatter","val","componentDidMount","chart","plotOptions","bar","horizontal","dataLabels","position","enabled","offsetX","style","fontSize","colors","stroke","show","title","text","yaxis","min","shared","intersect","DepotSelect","handleProductChange","handleDepotChange","DeportMainChart","mapMax","maxs","parseFloat","sum","Math","max","apply","prod","revenue_daily","quantity_daily","concat","mapData","startDate","getTime","endDate","ApexCharts","exec","timestamp","timeline","zoom","autoScaleYaxis","annotations","x","borderColor","yAxisIndex","markers","tickAmount","format","selection","six_months","DepotProductChart","isNaN","depot_revenue_daily","depot_quantity_daily","d","DepotCustomers","active","quantity","quantity_monthly","revenue","revenue_monthly","quantity_result","revenue_result","q","r","total","r_month","q_month","items","start_index","end_index","number","Pagination","Item","ceil","Table","striped","bordered","hover","slice","customer","DepotCustomerSelect","ChartSection","handleSelect","ranges","trigger","marginBottom","toDateString","showSelectionPreview","moveRangeOnFirstSelection","direction","preventSnapRefocus","calendarFocus","marginTop","UploadForm","trucks","success","customerSelect","CREATE_ENTRY_ACTION","show_errors","align","CustomerUpload","UploadExcel","UPLOAD_EXCEL_ACTION","message","accept","files","window","open","MyComponent","handleMetricChange","contentStyle","minHeight","DepotsPage","didnt_load","YearSelect","PieSelect","MonthlyBarChart","Array","fill","month_value","columnWidth","endingShape","opacity","ComparisonChart","labels","pie","startAngle","endAngle","responsive","breakpoint","reduce","partialSum","ChartsSection","my_ref","createRef","CustomerSelect","Customers","metric","numberWithCommas","toString","replace","data_type","customers_rank","data_month","no_data","result2","data2","customers_revenue","customers_quantity","marginLeft","amount","increase","HomePage","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","DownloadFile","element","label","TopComponent","start_date","end_date","cost","ORDER_DATES_ACTION","EditForm","order","product_id","truck_id","customer_changed","depot_item","other_products","customerChange","UPDATE_ENTRY_ACTION","OrderTable","delete_order","onSearchChange","onSearch","or","includes","handleDelete","DELETE_ENTRY_ACTION","FormControl","onOpen","OrderPage","BarChart","ProductMainChart","background","gradient","shadeIntensity","opacityFrom","opacityTo","stops","updateData","RadarChart","radar","polygons","strokeColors","strokeColor","strokeWidth","ChartComponent","main","ProductOrderTable","ProductTopComponent","handleSubmit","marginRight","ProductPage","CustomerBarChart","v","CustomerRadarChart","CustomerTop","monthly_orders","info","CustomerOrderTable","orders_all","CustomersSelect","CustomerPage","customer_id","toLowerCase","findIndex","CUSTOMER_DATA_ACTION","Routes","path","component","DownloadExcelReport","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3a68a0e.chunk.js","sourcesContent":["export async function get_token(username, password) {\r\n\t\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/accounts/get-token/`,{\r\n\t\t\tmethod: 'POST',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\r\n\t        },\r\n\t        body: JSON.stringify({\r\n\t            username: username,\r\n\t            password: password,\r\n\t        })\r\n \r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n","// DEPOT\r\nexport const GET_DEPOT_LIST = \"GET_DEPOT_LIST\"\r\nexport const GET_DEPOT_CUSTOMER_LIST = \"GET_DEPOT_CUSTOMER_LIST\"\r\nexport const GET_DEPOT_EXPAND = \"GET_DEPOT_EXPAND\"\r\nexport const GET_DEPOT_EXPAND_DAILY = \"GET_DEPOT_EXPAND_DAILY\"\r\nexport const GET_DEPOT_EXPAND_MONTHLY = \"GET_DEPOT_EXPAND_MONTHLY\"\r\nexport const GET_DEPOT_EXPAND_MAIN_DAILY = \"GET_DEPOT_EXPAND_MAIN_DAILY\"\r\nexport const GET_DEPOT_EXPAND_CUSTOMERS = \"GET_DEPOT_EXPAND_CUSTOMERS\"\r\nexport const GET_PRODUCT_EXPAND_DAILY = \"GET_PRODUCT_EXPAND_DAILY\"\r\nexport const GET_PRODUCT_EXPAND_MONTHLY = \"GET_PRODUCT_EXPAND_MONTHLY\"\r\n\r\nexport const GET_PRODUCT_EXPAND = \"GET_PRODUCT_EXPAND\"\r\nexport const GET_CUSTOMER_EXPAND_ALL = \"GET_CUSTOMER_EXPAND_ALL\"\r\nexport const GET_CUSTOMER_EXPAND_MONTH = \"GET_CUSTOMER_EXPAND_MONTH\"\r\nexport const GET_CUSTOMER_EXPAND = \"GET_CUSTOMER_EXPAND\"\r\nexport const GET_DEPOT_TIME_SERIES = \"GET_DEPOT_TIME_SERIES\"\r\n\r\nexport const UPDATE_DASHBOARD_PRODUCT_MONTHLY = \"UPDATE_DASHBOARD_PRODUCT_MONTHLY\"\r\nexport const UPDATE_DASHBOARD_DEPOT_YEAR = \"UPDATE_DASHBOARD_DEPOT_YEAR\"\r\nexport const UPDATE_DASHBOARD_DEPOT_MONTH = \"UPDATE_DASHBOARD_DEPOT_MONTH\"\r\nexport const UPDATE_DASHBOARD_CUSTOMER_YEAR = \"UPDATE_DASHBOARD_CUSTOMER_YEAR\"\r\nexport const UPDATE_DASHBOARD_CUSTOMER_MONTH = \"UPDATE_DASHBOARD_CUSTOMER_MONTH\"\r\nexport const UPDATE_DASHBOARD_CUSTOMER_PRODUCT = \"UPDATE_DASHBOARD_CUSTOMER_PRODUCT\"\r\nexport const UPDATE_DEPOT_TIME_SERIES_YEAR = \"UPDATE_DEPOT_TIME_SERIES_YEAR\"\r\nexport const UPDATE_DEPOT_TIME_SERIES_MONTH = \"UPDATE_DEPOT_TIME_SERIES_MONTH\"\r\nexport const UPDATE_DEPOT_INDEX = \"UPDATE_DEPOT_INDEX\"\r\nexport const UPDATE_DEPOT_CUSTOMER_MONTH = \"UPDATE_DEPOT_CUSTOMER_MONTH\"\r\nexport const UPDATE_DEPOT_CUSTOMER_YEAR = \"UPDATE_DEPOT_CUSTOMER_YEAR\"\r\nexport const UPDATE_CUSTOMER_YEAR = \"UPDATE_CUSTOMER_YEAR\"\r\n\r\n// AUTHENTICATION\r\nexport const GET_TOKEN = \"GET_TOKEN\";\r\nexport const GET_TOKEN_ERROR =  \"GET_TOKEN_ERROR\";\r\nexport const GET_TOKEN_ERROR_REMOVE = \"GET_TOKEN_ERROR_REMOVE\"\r\n\r\n//DASHBOARD\r\nexport const UPDATE_SELECTION_DATE = \"UPDATE_SELECTION_DATE\"\r\nexport const UPDATE_METRIC = \"UPDATE_METRIC\"\r\n\r\n// CUSTOMERS\r\nexport const CREATE_CUSTOMER = \"CREATE_CUSTOMER\"\r\nexport const CREATE_CUSTOMER_ERROR = \"CREATE_CUSTOMER_ERROR\"\r\n\r\nexport const CUSTOMER_LIST = \"CUSTOMER_LIST\"\r\nexport const CUSTOMER_LIST_MONTHLY = \"CUSTOMER_LIST_MONTHLY\"\r\n\r\n// TRUCKS\r\nexport const CREATE_TRUCK = \"CREATE_TRUCK\"\r\nexport const CREATE_TRUCK_ERROR = \"CREATE_TRUCK_ERROR\"\r\n\r\n// ENTRY\r\nexport const CREATE_ENTRY = \"CREATE_ENTRY\"\r\nexport const CREATE_ENTRY_ERROR = \"CREATE_ENTRY_ERROR\"\r\n\r\nexport const UPDATE_ENTRY = \"UPDATE_ENTRY\"\r\nexport const UPDATE_ENTRY_ERROR = \"UPDATE_ENTRY_ERROR\"\r\n\r\nexport const DELETE_ENTRY = \"DELETE_ENTRY\"\r\nexport const DELETE_ENTRY_ERROR = \"DELETE_ENTRY_ERROR\"\r\n\r\nexport const ENTRY_LIST = \"ENTRY_LIST\"\r\n\r\n\r\n// PRODUCTS\r\nexport const PRODUCT_LIST = \"PRODUCT_LIST\"\r\nexport const PRODUCT_INDEX = \"PRODUCT_INDEX\"\r\n\r\n// BUSINESS INTELLIGENCE\r\nexport const MAIN_BI_LIST = \"MAIN_BI_LIST\"\r\nexport const BI_LIST = \"BI_LIST\"\r\nexport const PRODUCT_BI_LIST = \"PRODUCT_BI_LIST\"\r\nexport const CUSTOMER_BI_LIST = \"CUSTOMER_BI_LIST\"\r\n\r\n// HELPERS\r\nexport const CUSTOMER_DATA = \"CUSTOMER_DATA\"\r\nexport const ORDER_DATES = \"ORDER_DATES\"\r\nexport const USER_LOGGED_OUT = \"USER_LOGGED_OUT\"\r\n\r\n// UPLOAD EXCEL\r\nexport const UPLOAD_EXCEL = \"UPLOAD_EXCEL\"\r\nexport const UPLOAD_EXCEL_ERROR = \"UPLOAD_EXCEL_ERROR\"\r\nexport const UPLOAD_EXCEL_ERROR_REMOVE = \"UPLOAD_EXCEL_ERROR_REMOVE\"","import {\r\n\tGET_TOKEN,\r\n    GET_TOKEN_ERROR,\r\n\tGET_TOKEN_ERROR_REMOVE\r\n\r\n} from \"../actions/actionTypes\"\r\n\r\nconst merge = (prev, next) => Object.assign({}, prev, next)\r\n\r\nconst AuthReducer = (state={}, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n        // Get token\r\n\t\tcase GET_TOKEN:\r\n\t\t\treturn merge(state, {token:action.payload, login_error:null})\r\n\t\t\tbreak;\r\n\r\n\t\tcase GET_TOKEN_ERROR:\r\n\t\t\t\r\n\t\t\treturn merge(state, {login_error:action.payload})\r\n\t\t\tbreak;\r\n\r\n\t\tcase GET_TOKEN_ERROR_REMOVE:\r\n\t\t\t\r\n\t\t\treturn merge(state, {login_error:action.payload})\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport default AuthReducer","import {\r\n\tCREATE_CUSTOMER, CREATE_CUSTOMER_ERROR,\r\n    CREATE_TRUCK, CREATE_TRUCK_ERROR,\r\n\tCREATE_ENTRY, CREATE_ENTRY_ERROR,\r\n\tUPLOAD_EXCEL, UPLOAD_EXCEL_ERROR,\r\n\r\n} from \"../actions/actionTypes\"\r\n\r\nconst merge = (prev, next) => Object.assign({}, prev, next)\r\n\r\nconst CreateReducer = (state={}, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n        // CUSTOMER\r\n\t\tcase CREATE_CUSTOMER:\r\n\t\t\treturn merge(state, {created_customer:action.payload, create_customer_error:null})\r\n\t\t\tbreak;\r\n\r\n\t\tcase CREATE_CUSTOMER_ERROR:\r\n\t\t\t\r\n\t\t\treturn merge(state, {create_customer_error:action.payload})\r\n\t\t\tbreak;\r\n        \r\n        // TRUCKS\r\n        case CREATE_TRUCK:\r\n\t\t\treturn merge(state, {created_truck:action.payload, create_truck_error:null})\r\n\t\t\tbreak;\r\n\r\n\t\tcase CREATE_TRUCK_ERROR:\r\n\t\t\t\r\n\t\t\treturn merge(state, {create_truck_error:action.payload})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\t// ENTRY\r\n        case CREATE_ENTRY:\r\n\t\t\treturn merge(state, {created_entry:action.payload, create_entry_error:null})\r\n\t\t\tbreak;\r\n\r\n\t\tcase CREATE_ENTRY_ERROR:\r\n\t\t\t\r\n\t\t\treturn merge(state, {create_entry_error:action.payload})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase UPLOAD_EXCEL:\r\n\t\t\t\r\n\t\t\treturn merge(state, {uploaded_excel:action.payload, upload_excel_error:null})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase UPLOAD_EXCEL_ERROR:\r\n\t\t\t\r\n\t\t\treturn merge(state, {upload_excel_error:action.payload})\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport default CreateReducer","import {\r\n\tGET_DEPOT_LIST, GET_DEPOT_EXPAND, GET_PRODUCT_EXPAND, GET_CUSTOMER_EXPAND, GET_DEPOT_TIME_SERIES,\r\n\tGET_DEPOT_EXPAND_CUSTOMERS, GET_DEPOT_EXPAND_DAILY, GET_DEPOT_EXPAND_MAIN_DAILY, GET_DEPOT_EXPAND_MONTHLY,\r\n\tGET_PRODUCT_EXPAND_DAILY, GET_PRODUCT_EXPAND_MONTHLY,\r\n\tGET_CUSTOMER_EXPAND_ALL, GET_CUSTOMER_EXPAND_MONTH, GET_DEPOT_CUSTOMER_LIST,\r\n\tUPDATE_SELECTION_DATE, UPDATE_METRIC,\r\n    CUSTOMER_LIST, CUSTOMER_LIST_MONTHLY,\r\n\tPRODUCT_LIST, PRODUCT_INDEX,\r\n\tENTRY_LIST,\r\n\tBI_LIST,\r\n\tMAIN_BI_LIST, PRODUCT_BI_LIST, CUSTOMER_BI_LIST,\r\n\tCUSTOMER_DATA, ORDER_DATES,\r\n} from \"../actions/actionTypes\"\r\n\r\nconst merge = (prev, next) => Object.assign({}, prev, next)\r\n\r\nconst ListReducer = (state={}, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n        // Get token\r\n\r\n\t\tcase GET_DEPOT_LIST:\r\n\t\t\treturn merge(state, {depot_list:action.payload})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase GET_DEPOT_EXPAND:\r\n\t\t\treturn merge(state, {depot_expand:action.payload})\r\n\t\t\tbreak;\r\n\r\n\t\tcase GET_DEPOT_EXPAND_DAILY:\r\n\t\t\treturn merge(state, {depot_expand_daily:action.payload})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase GET_DEPOT_CUSTOMER_LIST:\r\n\t\t\treturn merge(state, {depot_customer_list:action.payload})\r\n\t\t\tbreak;\r\n\r\n\t\tcase GET_DEPOT_EXPAND_MONTHLY:\r\n\t\t\treturn merge(state, {depot_expand_monthly:action.payload})\r\n\t\t\tbreak;\r\n\t\r\n\t\tcase GET_DEPOT_EXPAND_MAIN_DAILY:\r\n\t\t\treturn merge(state, {depot_expand_main_daily:action.payload})\r\n\t\t\tbreak;\r\n\t\tcase GET_DEPOT_EXPAND_CUSTOMERS:\r\n\t\t\treturn merge(state, {depot_expand_customers:action.payload})\r\n\t\t\tbreak;\r\n\t\tcase GET_PRODUCT_EXPAND:\r\n\t\t\treturn merge(state, {product_expand:action.payload})\r\n\t\t\tbreak\r\n\t\tcase GET_PRODUCT_EXPAND_MONTHLY:\r\n\t\t\treturn merge(state, {product_expand_monthly:action.payload})\r\n\t\t\tbreak\r\n\t\tcase GET_PRODUCT_EXPAND_DAILY:\r\n\t\t\treturn merge(state, {product_expand_daily:action.payload})\r\n\t\t\tbreak\r\n\t\tcase GET_DEPOT_TIME_SERIES:\r\n\t\t\treturn merge(state, {depot_time_series:action.payload})\r\n\t\t\tbreak;\r\n\t\tcase GET_CUSTOMER_EXPAND:\r\n\t\t\treturn merge(state, {customer_expand:action.payload})\r\n\t\t\tbreak;\r\n\t\tcase GET_CUSTOMER_EXPAND_ALL:\r\n\t\t\treturn merge(state, {customer_expand_all:action.payload})\r\n\t\t\tbreak;\r\n\t\tcase GET_CUSTOMER_EXPAND_MONTH:\r\n\t\t\treturn merge(state, {customer_expand_month:action.payload})\r\n\t\t\tbreak;\r\n\t\tcase UPDATE_SELECTION_DATE:\r\n\t\t\t\treturn merge(state, {selection_dates:action.payload})\r\n\t\t\t\tbreak;\r\n\t\tcase UPDATE_METRIC:\r\n\t\t\t\treturn merge(state, {dashboard_metric:action.payload})\r\n\t\t\t\tbreak;\r\n\t\tcase CUSTOMER_LIST:\r\n\t\t\treturn merge(state, {customers:action.payload})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase CUSTOMER_LIST_MONTHLY:\r\n\t\t\treturn merge(state, {customers_monthly:action.payload})\r\n\t\t\tbreak;\r\n\t\tcase PRODUCT_LIST:\r\n\t\t\treturn merge(state, {products:action.payload})\r\n\t\t\tbreak;\r\n\t\tcase PRODUCT_INDEX:\r\n\t\t\t\treturn merge(state, {product_index:action.payload})\r\n\t\t\t\tbreak;\r\n\t\t\r\n\t\tcase ENTRY_LIST:\r\n\t\t\treturn merge(state, {entries:action.payload})\r\n\t\t\tbreak;\r\n\r\n\t\tcase MAIN_BI_LIST:\r\n\t\t\treturn merge(state, {main_bi_list:action.payload})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase BI_LIST:\r\n\t\t\treturn merge(state, {bi_list:action.payload})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase PRODUCT_BI_LIST:\r\n\t\t\treturn merge(state, {product_bi_list:action.payload})\r\n\t\t\tbreak;\r\n\t\tcase CUSTOMER_BI_LIST:\r\n\t\t\treturn merge(state, {customer_bi_list:action.payload})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase CUSTOMER_DATA:\r\n\t\t\treturn merge(state, {customer_data:action.payload})\r\n\t\t\tbreak;\t\t\r\n\t\tcase ORDER_DATES:\r\n\t\t\treturn merge(state, {order_dates:action.payload})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport default ListReducer","import {\r\n\tUPDATE_ENTRY, UPDATE_ENTRY_ERROR, DELETE_ENTRY, DELETE_ENTRY_ERROR,\r\n\tUPDATE_DASHBOARD_PRODUCT_MONTHLY, UPDATE_DASHBOARD_DEPOT_MONTH, UPDATE_DASHBOARD_DEPOT_YEAR,\r\n\tUPDATE_DASHBOARD_CUSTOMER_MONTH, UPDATE_DASHBOARD_CUSTOMER_YEAR, UPDATE_DASHBOARD_CUSTOMER_PRODUCT,\r\n\tUPDATE_DEPOT_TIME_SERIES_MONTH, UPDATE_DEPOT_TIME_SERIES_YEAR,\r\n\tUPDATE_DEPOT_INDEX, UPDATE_DEPOT_CUSTOMER_MONTH, UPDATE_DEPOT_CUSTOMER_YEAR,\r\n\tUPDATE_CUSTOMER_YEAR,\r\n\r\n} from \"../actions/actionTypes\"\r\n\r\nconst merge = (prev, next) => Object.assign({}, prev, next)\r\n\r\nconst UpdateReducer = (state={}, action) => {\r\n\t\r\n\tswitch (action.type) {\r\n        // CUSTOMER\r\n\t\tcase UPDATE_ENTRY:\r\n\t\t\treturn merge(state, {updated_entry:action.payload, update_entry_error:null})\r\n\t\t\tbreak;\r\n\r\n\t\tcase UPDATE_ENTRY_ERROR:\r\n\t\t\t\r\n\t\t\treturn merge(state, {update_entry_error:action.payload})\r\n\t\t\tbreak;\r\n        \r\n\t\tcase DELETE_ENTRY:\r\n\t\t\treturn merge(state, {deleted_entry:action.payload, delete_entry_error:null})\r\n\t\t\tbreak;\r\n\r\n\t\tcase DELETE_ENTRY_ERROR:\r\n\t\t\t\r\n\t\t\treturn merge(state, {delete_entry_error:action.payload})\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase UPDATE_DASHBOARD_PRODUCT_MONTHLY:\r\n\t\t\treturn merge(state, {update_dashboard_year_product_monthly: action.payload})\r\n\t\t\tbreak\r\n\r\n\t\tcase UPDATE_DASHBOARD_DEPOT_MONTH:\r\n\t\t\t\treturn merge(state, {update_dashboard_depot_month: action.payload})\r\n\t\t\t\tbreak\r\n\r\n\t\tcase UPDATE_DASHBOARD_DEPOT_YEAR:\r\n\t\t\treturn merge(state, {update_dashboard_depot_year: action.payload})\r\n\t\t\tbreak\r\n\t\t\t\r\n\t\tcase UPDATE_DEPOT_INDEX:\r\n\t\t\treturn merge(state, {update_depot_index:action.payload})\r\n\r\n\t\tcase UPDATE_DASHBOARD_CUSTOMER_MONTH:\r\n\t\t\t\treturn merge(state, {update_dashboard_customer_month: action.payload})\r\n\t\t\t\tbreak\r\n\r\n\t\tcase UPDATE_DASHBOARD_CUSTOMER_YEAR:\r\n\t\t\treturn merge(state, {update_dashboard_customer_year: action.payload})\r\n\t\t\tbreak\r\n\r\n\t\tcase UPDATE_DASHBOARD_CUSTOMER_PRODUCT:\r\n\t\t\treturn merge(state, {update_dashboard_customer_product: action.payload})\r\n\t\t\tbreak\r\n\t\t\r\n\t\tcase UPDATE_DEPOT_TIME_SERIES_MONTH:\r\n\t\t\treturn merge(state, {update_depot_time_series_month: action.payload})\r\n\t\t\tbreak\r\n\t\t\r\n\t\tcase UPDATE_DEPOT_TIME_SERIES_YEAR:\r\n\t\t\treturn merge(state, {update_depot_time_series_year: action.payload})\r\n\t\t\tbreak\r\n\t\t\r\n\t\tcase UPDATE_DEPOT_CUSTOMER_MONTH:\r\n\t\t\treturn merge(state, {update_depot_customer_month: action.payload})\r\n\t\t\tbreak\r\n\r\n\t\tcase UPDATE_DEPOT_CUSTOMER_YEAR:\r\n\t\t\treturn merge(state, {update_depot_customer_year: action.payload})\r\n\t\t\tbreak\r\n\t\t\r\n\t\tcase UPDATE_CUSTOMER_YEAR:\r\n\t\t\treturn merge(state, {update_customer_year: action.payload})\r\n\t\t\tbreak\r\n\t\t\t\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport default UpdateReducer","import {combineReducers} from \"redux\";\r\nimport storage from 'redux-persist/lib/storage'\r\nimport AuthReducer from \"./authReducer\";\r\nimport CreateReducer from \"./createReducers\"\r\nimport ListReducer from \"./listReducer\";\r\nimport UpdateReducer from \"./updateReducer\";\r\nimport {USER_LOGGED_OUT} from \"../actions/actionTypes\"\r\n\r\n\r\nconst appReducer = combineReducers({\r\n\tauth_reducer:AuthReducer,\r\n\tcreate_reducer:CreateReducer,\r\n\tlist_reducer:ListReducer,\r\n\tupdate_reducer:UpdateReducer,\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n    if (action.type === USER_LOGGED_OUT) {\r\n        // for all keys defined in your persistConfig(s)\r\n        storage.removeItem('persist:root')\r\n        // storage.removeItem('persist:otherKey')\r\n\r\n        state = undefined;\r\n    }\r\n    return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer","import {createStore, applyMiddleware} from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\"\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./reducers/reducer\"\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n\tkey: \"root\",\r\n\tstorage:storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\nexport const store =  createStore(persistedReducer, applyMiddleware(thunk))\r\nexport const persistor =  persistStore(store)","import {store} from \"../redux/store\"\r\n\r\n// DEPOTS\r\nexport async function depot_list() {\r\n\tvar token = store.getState().auth_reducer.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token.token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\tif(token.is_staff === false){\r\n\t\t\tdata = data.filter(obj => {\r\n\t\t\t\treturn obj.name === token.depot\r\n\t\t\t  })\r\n\t\t}\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function depot_expand() {\r\n\tvar token = store.getState().auth_reducer.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/expand/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token.token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\tif(token.is_staff === false){\r\n\t\t\tdata = data.filter(obj => {\r\n\t\t\t\treturn obj.name === token.depot\r\n\t\t\t  })\r\n\t\t}\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function depot_expand_monthly() {\r\n\tvar token = store.getState().auth_reducer.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/expand/monthly/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token.token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\tif(token.is_staff === false){\r\n\t\t\tdata = data.filter(obj => {\r\n\t\t\t\treturn obj.name === token.depot\r\n\t\t\t  })\r\n\t\t}\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function depot_expand_daily() {\r\n\tvar token = store.getState().auth_reducer.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/expand/daily/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token.token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\tif(token.is_staff === false){\r\n\t\t\tdata = data.filter(obj => {\r\n\t\t\t\treturn obj.name === token.depot\r\n\t\t\t  })\r\n\t\t}\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function depot_expand_main() {\r\n\tvar token = store.getState().auth_reducer.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/expand/main/daily/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token.token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\tif(token.is_staff === false){\r\n\t\t\tdata = data.filter(obj => {\r\n\t\t\t\treturn obj.name === token.depot\r\n\t\t\t  })\r\n\t\t}\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function depot_expand_customer() {\r\n\tvar token = store.getState().auth_reducer.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/expand/customers/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token.token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\tif(token.is_staff === false){\r\n\t\t\tdata = data.filter(obj => {\r\n\t\t\t\treturn obj.name === token.depot\r\n\t\t\t  })\r\n\t\t}\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function product_expand() {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/products/expand/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function product_expand_monthly() {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/products/expand/monthly/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function product_expand_daily() {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/products/expand/daily/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\nexport async function depot_time_series() {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\tlet id= store.getState().auth_reducer.token.data.id\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/${id}/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n// CUSTOMER LIST\r\n\r\nexport async function customer_list(name, location) {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/customers/expand/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function customer_list_monthly() {\r\n\tvar token = store.getState().auth_reducer.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/customers/expand/monthly/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token.token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\tif(token.is_staff === false){\r\n\t\t\tdata = data.filter(obj => {\r\n\t\t\t\treturn obj.depot === token.depot\r\n\t\t\t  })\r\n\t\t}\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\nexport async function depot_customer_list(name, location) {\r\n\tvar token = store.getState().auth_reducer.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/customers/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token.token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\tif(token.is_staff === false){\r\n\t\t\tdata = data.filter(obj => {\r\n\t\t\t\treturn obj.name === token.depot\r\n\t\t\t  })\r\n\t\t}\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function customer_expand() {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/customers/expand/1/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function customer_expand_all() {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/customers/expand/1/all/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function customer_expand_month() {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/customers/expand/1/month/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n// PRODUCT LIST\r\n\r\nexport async function product_list() {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\tvar depot_id = store.getState().auth_reducer.token.depot_id\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/products/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n// ENTRIES\r\n\r\nexport async function entry_list() {\r\n\tconsole.log(\"in antry api\")\r\n\tvar token = store.getState().auth_reducer.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/orders/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token.token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\tif(token.is_staff === false){\r\n\t\t\tconsole.log(token.depot)\r\n\t\t\tdata = data.filter(obj => {\r\n\t\t\t\treturn obj.depot === token.depot\r\n\t\t\t  })\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(data)\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n// BUSINESS INTELLIGENCE\r\n\r\nexport async function main_bi_list() {\r\n\tvar token = store.getState().auth_reducer.token\r\n\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/main/bi/${token.data.id}/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token.token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\t\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function bi_list() {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\tvar depot_id = store.getState().auth_reducer.token.depot_id\r\n\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/bi/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\t\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function product_bi_list() {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\tconsole.log(store.getState().auth_reducer.token)\r\n\tvar depot_id = store.getState().auth_reducer.token.depot_id\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/depots/${depot_id}/product_bi/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\t\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport async function customer_bi_list() {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/orders/customer_bi/`,{\r\n\t\t\tmethod: 'GET',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\t\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n","import {store} from \"../redux/store\"\r\n\r\nexport async function customer_create(name, location, depot_id) {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\t// var depot_id = store.getState().auth_reducer.token.depot_id\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/customers/`,{\r\n\t\t\tmethod: 'POST',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n            body: JSON.stringify({\r\n\t\t\t\tdepot: parseInt(depot_id),\r\n\t            name: name,\r\n\t            location: location,\r\n\t        })\r\n \r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport async function truck_create(customer, plate_no, driver) {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/customers/trucks/`,{\r\n\t\t\tmethod: 'POST',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n            body: JSON.stringify({\r\n\t            customer: customer,\r\n\t            plate_no: plate_no,\r\n                driver: driver,\r\n\t        })\r\n \r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n// ENTRY\r\nexport async function entry_create(\r\n\tproduct, \r\n\ttruck,\r\n\tentry_no, \r\n\torder_no,\r\n\tdate,\r\n\tvol_obs,\r\n\tvol_20,\r\n\tselling_price\r\n\t) {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/orders/`,{\r\n\t\t\tmethod: 'POST',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n            body: JSON.stringify({\r\n\t            product: parseInt(product),\r\n\t            truck: truck,\r\n                entry_no: entry_no,\r\n\t\t\t\torder_no: order_no,\r\n\t\t\t\tdate: date,\r\n\t\t\t\tvol_obs:vol_obs,\r\n\t\t\t\tvol_20:vol_20,\r\n\t\t\t\tselling_price: selling_price,\r\n\t        })\r\n \r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\n// UPLOAD EXCEL\r\nexport async function upload_excel(file, depot_id) {\r\n\ttry{\r\n\t\t\r\n\t\tlet formData = new FormData()\r\n\t\tformData.append(\"file\", file)\r\n\t\t// formData.append(\"health_id\", health_id)\r\n\t\tlet rData = await fetch(`https://opl.azurewebsites.net/depots/${depot_id}/upload_excel/`,{\r\n\t\t\tmethod: 'POST',\r\n\t        headers: {\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t        },\r\n\t        body: formData\r\n \r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await rData.json();\r\n\t\t\r\n\t\trData = null;\r\n\t\t\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}","import {store} from \"../redux/store\"\r\n\r\n// ENTRY\r\nexport async function entry_update(\r\n    id,\r\n\tproduct, \r\n\ttruck,\r\n\tentry_no, \r\n\torder_no,\r\n\tdate,\r\n\tvol_obs,\r\n\tvol_20,\r\n\tselling_price\r\n\t) {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tlet raw_data = await fetch(`https://opl.azurewebsites.net/orders/update/${id}/`,{\r\n\t\t\tmethod: 'PUT',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n            body: JSON.stringify({\r\n\t            product: product,\r\n\t            truck: truck,\r\n                entry_no: entry_no,\r\n\t\t\t\torder_no: order_no,\r\n\t\t\t\tdate: date,\r\n\t\t\t\tvol_obs:vol_obs,\r\n\t\t\t\tvol_20:vol_20,\r\n\t\t\t\tselling_price: selling_price,\r\n\t        })\r\n \r\n\t\t});\r\n\r\n\t\t\r\n\t\tlet data = await raw_data.json();\r\n\t\traw_data = null;\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\nexport async function entry_delete(id, data) {\r\n\tvar token = store.getState().auth_reducer.token.token\r\n\ttry{\r\n\t\tawait fetch(`https://opl.azurewebsites.net/orders/update/${id}/`,{\r\n\t\t\tmethod: 'DELETE',\r\n\t        headers: {\r\n\t            'Accept': 'application/json',\r\n\t            'Content-Type': 'application/json',\r\n\t            \"Authorization\": `Token ${token}`\r\n\r\n\t        },\r\n \r\n\t\t});\r\n\r\n\t\t\r\n\t\t\r\n\t\treturn data\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error)\r\n\t\tthrow error;\r\n\t\t\r\n\t}\r\n}","import {\r\n\tget_token\r\n} from \"../../apis/auth\"\r\nimport {\r\n\tmain_bi_list,\r\n\tcustomer_list,\r\n\tproduct_list,\r\n\tentry_list,\r\n\tbi_list,\r\n\tproduct_bi_list,\r\n\tcustomer_bi_list,\r\n\tdepot_list, depot_expand, product_expand, customer_expand, depot_time_series, depot_expand_daily, depot_expand_monthly, depot_expand_main, depot_expand_customer,\r\n\tproduct_expand_daily, product_expand_monthly, customer_expand_all, customer_expand_month, depot_customer_list, customer_list_monthly,\r\n} from \"../../apis/list\"\r\nimport { \r\n\tcustomer_create, \r\n\ttruck_create,\r\n\tentry_create,\r\n\tupload_excel\r\n} from \"../../apis/create\"\r\n\r\nimport { entry_update, entry_delete} from \"../../apis/update\"\r\n\r\nimport {\r\n\tGET_DEPOT_LIST,GET_DEPOT_EXPAND, GET_PRODUCT_EXPAND, GET_CUSTOMER_EXPAND,GET_DEPOT_TIME_SERIES,\r\n\tGET_DEPOT_CUSTOMER_LIST,\r\n\tGET_DEPOT_EXPAND_CUSTOMERS, GET_DEPOT_EXPAND_DAILY, GET_DEPOT_EXPAND_MAIN_DAILY, GET_DEPOT_EXPAND_MONTHLY,\r\n\tGET_PRODUCT_EXPAND_DAILY, GET_PRODUCT_EXPAND_MONTHLY,\r\n\tGET_CUSTOMER_EXPAND_ALL, GET_CUSTOMER_EXPAND_MONTH,\r\n\tUPDATE_DASHBOARD_PRODUCT_MONTHLY, UPDATE_DASHBOARD_DEPOT_MONTH, UPDATE_DASHBOARD_DEPOT_YEAR,\r\n\tUPDATE_DASHBOARD_CUSTOMER_MONTH, UPDATE_DASHBOARD_CUSTOMER_YEAR, UPDATE_DASHBOARD_CUSTOMER_PRODUCT,\r\n\tUPDATE_DEPOT_TIME_SERIES_YEAR, UPDATE_DEPOT_TIME_SERIES_MONTH,\r\n\tUPDATE_DEPOT_INDEX, UPDATE_DEPOT_CUSTOMER_MONTH, UPDATE_DEPOT_CUSTOMER_YEAR,\r\n\tUPDATE_CUSTOMER_YEAR,\r\n\r\n\tGET_TOKEN, GET_TOKEN_ERROR, GET_TOKEN_ERROR_REMOVE,\r\n\tUPDATE_SELECTION_DATE, UPDATE_METRIC,\r\n\tCREATE_CUSTOMER, CREATE_CUSTOMER_ERROR, CUSTOMER_LIST, CUSTOMER_LIST_MONTHLY,\r\n\tCREATE_TRUCK, CREATE_TRUCK_ERROR,\r\n\tCREATE_ENTRY, CREATE_ENTRY_ERROR, ENTRY_LIST, UPDATE_ENTRY, UPDATE_ENTRY_ERROR, DELETE_ENTRY, DELETE_ENTRY_ERROR,\r\n\tPRODUCT_LIST, PRODUCT_INDEX,\r\n\tBI_LIST, PRODUCT_BI_LIST, CUSTOMER_BI_LIST, MAIN_BI_LIST,\r\n\tCUSTOMER_DATA, ORDER_DATES, USER_LOGGED_OUT,\r\n\tUPLOAD_EXCEL,\r\n\tUPLOAD_EXCEL_ERROR,\r\n} from \"./actionTypes\"\r\n\r\n// LOGIN ACTIONS\r\n\r\nexport const GET_TOKEN_ACTION = (username, password) =>async dispatch => {\r\n\t\r\n\tawait get_token(username, password).then(data => {\r\n\t\tconsole.log(data)\r\n\t\tif (data.token !== undefined){\r\n\t\t\tdispatch({type:GET_TOKEN, payload:data})\r\n\t\t}\r\n\t\telse{\r\n\t\t\ttry{\r\n\t\t\t\tlet errors = data.non_field_errors\r\n\t\t\t\tdispatch({type:GET_TOKEN_ERROR, payload:{\"\":errors}})\r\n\t\t\t}catch(e){\r\n\t\t\t\tdispatch({type:GET_TOKEN_ERROR, payload:data})\r\n\t\t\t}\r\n\t \t}\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const GET_TOKEN_ERROR_REMOVE_ACTION = () => dispatch => {\r\n\tdispatch({type:GET_TOKEN_ERROR_REMOVE, payload:null})\r\n}\r\n\r\n\r\n// DEPOT ACTIONS\r\nexport const DEPOT_LIST_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait depot_list().then(data => {\r\n\t\t\r\n\t\t\r\n\t\t\tdispatch({type:GET_DEPOT_LIST, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const DEPOT_EXPAND_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait depot_expand().then(data => {\r\n\t\t\r\n\t\t\r\n\t\t\tdispatch({type:GET_DEPOT_EXPAND, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\n\r\nexport const DEPOT_EXPAND_DAILY_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait depot_expand_daily().then(data => {\r\n\t\t\r\n\t\t\r\n\t\t\tdispatch({type:GET_DEPOT_EXPAND_DAILY, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const DEPOT_EXPAND_MONTHLY_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait depot_expand_monthly().then(data => {\r\n\t\t\r\n\t\t\r\n\t\t\tdispatch({type:GET_DEPOT_EXPAND_MONTHLY, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const DEPOT_CUSTOMER_LIST_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait depot_customer_list().then(data => {\r\n\t\t\r\n\t\t\r\n\t\t\tdispatch({type:GET_DEPOT_CUSTOMER_LIST, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const DEPOT_EXPAND_MAIN_DAILY_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait depot_expand_main().then(data => {\r\n\t\t\r\n\t\t\r\n\t\t\tdispatch({type:GET_DEPOT_EXPAND_MAIN_DAILY, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const DEPOT_EXPAND_CUSTOMERS_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait depot_expand_customer().then(data => {\r\n\t\t\r\n\t\t\r\n\t\t\tdispatch({type:GET_DEPOT_EXPAND_CUSTOMERS, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const PRODUCT_EXPAND_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait product_expand().then(data => {\r\n\r\n\t\t\tdispatch({type:GET_PRODUCT_EXPAND, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const PRODUCT_EXPAND_MONTHLY_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait product_expand_monthly().then(data => {\r\n\r\n\t\t\tdispatch({type:GET_PRODUCT_EXPAND_MONTHLY, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const PRODUCT_EXPAND_DAILY_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait product_expand_daily().then(data => {\r\n\r\n\t\t\tdispatch({type:GET_PRODUCT_EXPAND_DAILY, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const CUSTOMER_EXPAND_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait customer_expand().then(data => {\r\n\t\t\r\n\t\t\r\n\t\t\tdispatch({type:GET_CUSTOMER_EXPAND, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const CUSTOMER_EXPAND_ALL_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait customer_expand_all().then(data => {\r\n\t\t\r\n\t\t\r\n\t\t\tdispatch({type:GET_CUSTOMER_EXPAND_ALL, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const CUSTOMER_EXPAND_MONTH_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait customer_expand_month().then(data => {\r\n\t\t\r\n\t\t\r\n\t\t\tdispatch({type:GET_CUSTOMER_EXPAND_MONTH, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const DEPOT_TIME_SERIES_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait depot_time_series().then(data => {\r\n\t\t\tdispatch({type:GET_DEPOT_TIME_SERIES, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const UPDATE_DASHBOARD_PRODUCT_MONTHLY_ACTION = (year) => dispatch => {\r\n\tdispatch({type:UPDATE_DASHBOARD_PRODUCT_MONTHLY, payload:year})\r\n}\r\n\r\nexport const UPDATE_DASHBOARD_DEPOT_YEAR_ACTION = (year) => dispatch => {\r\n\tdispatch({type:UPDATE_DASHBOARD_DEPOT_YEAR, payload:year})\r\n}\r\n\r\nexport const UPDATE_DASHBOARD_DEPOT_MONTH_ACTION = (month) => dispatch => {\r\n\tdispatch({type:UPDATE_DASHBOARD_DEPOT_MONTH, payload:month})\r\n}\r\n\r\nexport const UPDATE_DASHBOARD_CUSTOMER_YEAR_ACTION = (year) => dispatch => {\r\n\tdispatch({type:UPDATE_DASHBOARD_CUSTOMER_YEAR, payload:year})\r\n}\r\n\r\nexport const UPDATE_DASHBOARD_CUSTOMER_MONTH_ACTION = (month) => dispatch => {\r\n\tdispatch({type:UPDATE_DASHBOARD_CUSTOMER_MONTH, payload:month})\r\n}\r\n\r\nexport const UPDATE_DASHBOARD_CUSTOMER_PRODUCT_ACTION = (product) => dispatch => {\r\n\tdispatch({type:UPDATE_DASHBOARD_CUSTOMER_PRODUCT, payload:product})\r\n}\r\n\r\nexport const UPDATE_DEPOT_TIME_SERIES_YEAR_ACTION = (year) => dispatch => {\r\n\tdispatch({type:UPDATE_DEPOT_TIME_SERIES_YEAR, payload:year})\r\n}\r\n\r\nexport const UPDATE_DEPOT_TIME_SERIES_MONTH_ACTION = (month) => dispatch => {\r\n\tdispatch({type:UPDATE_DEPOT_TIME_SERIES_MONTH, payload:month})\r\n}\r\n\r\n// DEPOT\r\nexport const UPDATE_DEPOT_INDEX_ACTION = (index) => dispatch => {\r\n\tdispatch({type:UPDATE_DEPOT_INDEX, payload:index})\r\n}\r\n\r\nexport const UPDATE_DEPOT_CUSTOMER_MONTH_ACTION = (month) => dispatch => {\r\n\tdispatch({type:UPDATE_DEPOT_CUSTOMER_MONTH, payload:month})\r\n}\r\n\r\nexport const UPDATE_DEPOT_CUSTOMER_YEAR_ACTION = (year) => dispatch => {\r\n\tdispatch({type:UPDATE_DEPOT_CUSTOMER_YEAR, payload:year})\r\n}\r\n\r\n// CUSTOMERS\r\nexport const UPDATE_CUSTOMER_YEAR_ACTION = (year) => dispatch => {\r\n\tdispatch({type:UPDATE_CUSTOMER_YEAR, payload:year})\r\n}\r\n\r\n// DASHBOARD\r\nexport const UPDATE_SELECTION_DATE_ACTION = (dates) => dispatch => {\r\n\tdispatch({type:UPDATE_SELECTION_DATE, payload:dates})\r\n}\r\n\r\nexport const UPDATE_METRIC_ACTION = (status) => dispatch => {\r\n\tdispatch({type:UPDATE_METRIC, payload:status})\r\n}\r\n\r\n// CUSTOMERS\r\n\r\nexport const CREATE_CUSTOMER_ACTION = (name, location, depot) =>async dispatch => {\r\n\t\r\n\tawait customer_create(name, location, depot).then(data => {\r\n\t\t\r\n\t\tif (data.name === name){\r\n\t\t\tdispatch({type:CREATE_CUSTOMER, payload:data})\r\n\t\t}\r\n\t\telse{\r\n\t\t\ttry{\r\n\t\t\t\tlet errors = data.non_field_errors\r\n\t\t\t\tdispatch({type:CREATE_CUSTOMER_ERROR, payload:{\"\":errors}})\r\n\t\t\t}catch(e){\r\n\t\t\t\tdispatch({type:CREATE_CUSTOMER_ERROR, payload:data})\r\n\t\t\t}\r\n\t \t}\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const CUSTOMER_LIST_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait customer_list().then(data => {\r\n\t\t\r\n\t\t\r\n\t\t\tdispatch({type:CUSTOMER_LIST, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const CUSTOMER_LIST_MONTHLY_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait customer_list_monthly().then(data => {\r\n\t\t\r\n\t\t\r\n\t\t\tdispatch({type:CUSTOMER_LIST_MONTHLY, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\n// TRUCK ACTIONS\r\nexport const CREATE_TRUCK_ACTION = (customer, plate_no, driver) =>async dispatch => {\r\n\t\r\n\tawait truck_create(customer, plate_no, driver).then(data => {\r\n\t\t\r\n\t\tif (data.plate_no === plate_no){\r\n\t\t\tdispatch({type:CREATE_TRUCK, payload:data})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tdispatch({type:CREATE_TRUCK_ERROR, payload:data})\r\n\t \t}\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\n\r\n// ENTRY ACTIONS\r\nexport const CREATE_ENTRY_ACTION = (product, truck, entry_no, order_no, date, vol_obs, vol_20, selling_price) =>async dispatch => {\r\n\t\r\n\tawait entry_create(product, truck, entry_no, order_no, date, vol_obs, vol_20, selling_price).then(data => {\r\n\t\t\r\n\t\tif (data.entry_no === entry_no){\r\n\t\t\tdispatch({type:CREATE_ENTRY, payload:data})\r\n\t\t}\r\n\t\telse{\r\n\t\t\ttry{\r\n\t\t\t\tlet errors = data.non_field_errors\r\n\t\t\t\tdispatch({type:CREATE_ENTRY_ERROR, payload:{\"\":errors}})\r\n\t\t\t}catch(e){\r\n\t\t\t\tdispatch({type:CREATE_ENTRY_ERROR, payload:data})\r\n\t\t\t}\r\n\t \t}\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const UPDATE_ENTRY_ACTION = (id, product, truck, entry_no, order_no, date, vol_obs, vol_20, selling_price) =>async dispatch => {\r\n\t\r\n\tawait entry_update(id, product, truck, entry_no, order_no, date, vol_obs, vol_20, selling_price).then(data => {\r\n\t\t\r\n\t\tif (data.entry_no === entry_no){\r\n\t\t\tdispatch({type:UPDATE_ENTRY, payload:data})\r\n\t\t}\r\n\t\telse{\r\n\t\t\ttry{\r\n\t\t\t\tlet errors = data.non_field_errors\r\n\t\t\t\tdispatch({type:UPDATE_ENTRY_ERROR, payload:{\"\":errors}})\r\n\t\t\t}catch(e){\r\n\t\t\t\tdispatch({type:UPDATE_ENTRY_ERROR, payload:data})\r\n\t\t\t}\r\n\t \t}\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const DELETE_ENTRY_ACTION = (id, order) =>async dispatch => {\r\n\t\r\n\tawait entry_delete(id, order).then(data => {\r\n\t\t\r\n\t\tdispatch({type:DELETE_ENTRY, payload:data})\r\n\t\t// if (data.entry_no === entry_no){\r\n\t\t// \tdispatch({type:UPDATE_ENTRY, payload:data})\r\n\t\t// }\r\n\t\t// else{\r\n\t\t// \tdispatch({type:UPDATE_ENTRY_ERROR, payload:data})\r\n\t \t// }\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\n\r\nexport const ENTRY_LIST_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait entry_list().then(data => {\r\n\t\t\r\n\t\t\tdispatch({type:ENTRY_LIST, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\n// PRODUCTS\r\nexport const PRODUCT_LIST_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait product_list().then(data => {\r\n\t\t\tdispatch({type:PRODUCT_LIST, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const PRODUCT_INDEX_ACTION = (data) => dispatch => {\r\n\tdispatch({type:PRODUCT_INDEX, payload:data})\r\n}\r\n\r\n// BUSINESS INTELLIGENCE\r\nexport const MAIN_BI_LIST_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait main_bi_list().then(data => {\r\n\t\t\tdispatch({type:MAIN_BI_LIST, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const BI_LIST_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait bi_list().then(data => {\r\n\t\t\tdispatch({type:BI_LIST, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const PRODUCT_BI_LIST_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait product_bi_list().then(data => {\r\n\t\t\tdispatch({type:PRODUCT_BI_LIST, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\nexport const CUSTOMER_BI_LIST_ACTION = () =>async dispatch => {\r\n\t\r\n\tawait customer_bi_list().then(data => {\r\n\t\t\tdispatch({type:CUSTOMER_BI_LIST, payload:data})\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n\r\n\r\n\r\n// HELPERS\r\n\r\nexport const CUSTOMER_DATA_ACTION = (data) => dispatch => {\r\n\tdispatch({type:CUSTOMER_DATA, payload:data})\r\n}\r\n\r\nexport const ORDER_DATES_ACTION = (data) => dispatch => {\r\n\tdispatch({type:ORDER_DATES, payload:data})\r\n}\r\n\r\nexport const USER_LOGGED_OUT_ACTION = () => dispatch => {\r\n\tdispatch({type:USER_LOGGED_OUT, payload:null})\r\n}\r\n\r\n// UPLOADS\r\nexport const UPLOAD_EXCEL_ACTION = (file, depot_id) =>async dispatch => {\r\n\t\r\n\tawait upload_excel(file, depot_id).then(data => {\r\n\t\t\tif(data.status === \"success\"){\r\n\t\t\t\tdispatch({type:UPLOAD_EXCEL, payload:data})\r\n\t\t\t}else{\r\n\t\t\t\tdispatch({type:UPLOAD_EXCEL_ERROR, payload:data})\r\n\t\t\t}\r\n\t\t\t\r\n\t  })\r\n\r\n\t .catch(error => {\r\n\t \tconsole.log(error);\r\n\t })\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Button, Form, Container, Row, Col, Alert} from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Triangle } from \"react-loader-spinner\";\r\n\r\nimport { \r\n\r\n    DEPOT_EXPAND_ACTION, UPDATE_DASHBOARD_PRODUCT_MONTHLY_ACTION, DEPOT_TIME_SERIES_ACTION,PRODUCT_EXPAND_ACTION,\r\n    CUSTOMER_EXPAND_ACTION, CUSTOMER_EXPAND_ALL_ACTION, CUSTOMER_EXPAND_MONTH_ACTION,\r\n    DEPOT_CUSTOMER_LIST_ACTION,\r\n    UPDATE_DASHBOARD_DEPOT_MONTH_ACTION, UPDATE_DASHBOARD_DEPOT_YEAR_ACTION,\r\n    UPDATE_DASHBOARD_CUSTOMER_MONTH_ACTION, UPDATE_DASHBOARD_CUSTOMER_YEAR_ACTION, \r\n    UPDATE_DASHBOARD_CUSTOMER_PRODUCT_ACTION, UPDATE_DEPOT_TIME_SERIES_MONTH_ACTION,\r\n    UPDATE_DEPOT_TIME_SERIES_YEAR_ACTION, \r\n    UPDATE_DEPOT_INDEX_ACTION, UPDATE_DEPOT_CUSTOMER_MONTH_ACTION, UPDATE_DEPOT_CUSTOMER_YEAR_ACTION,\r\n    UPDATE_CUSTOMER_YEAR_ACTION,\r\n    DEPOT_EXPAND_CUSTOMERS_ACTION, DEPOT_EXPAND_DAILY_ACTION, DEPOT_EXPAND_MAIN_DAILY_ACTION,\r\n    DEPOT_EXPAND_MONTHLY_ACTION, PRODUCT_EXPAND_DAILY_ACTION, PRODUCT_EXPAND_MONTHLY_ACTION,\r\n    DEPOT_LIST_ACTION,\r\n    GET_TOKEN_ACTION, \r\n    CUSTOMER_LIST_ACTION, CUSTOMER_LIST_MONTHLY_ACTION,\r\n    PRODUCT_LIST_ACTION,\r\n    BI_LIST_ACTION,\r\n    PRODUCT_BI_LIST_ACTION,\r\n    ENTRY_LIST_ACTION,\r\n    CUSTOMER_BI_LIST_ACTION,\r\n    MAIN_BI_LIST_ACTION,\r\n    PRODUCT_INDEX_ACTION,\r\n    GET_TOKEN_ERROR_REMOVE_ACTION,\r\n    UPDATE_METRIC_ACTION,\r\n    UPDATE_SELECTION_DATE_ACTION,\r\n} from '../../redux/actions/actions';\r\n\r\nimport \"../../themes/theme1/login.css\"\r\n\r\n\r\n\r\nclass LoginPage extends Component{\r\n    state = {\r\n        spinner: false,\r\n        redirect: false,\r\n        redirect_depot:false,\r\n        email: \"\",\r\n        password: \"\",\r\n        show_error: false,\r\n        null_error: false\r\n    }\r\n\r\n    addMonths = (date, months) => {\r\n        date.setMonth(date.getMonth() + months);\r\n        return date;\r\n    }\r\n\r\n    componentWillReceiveProps = async (nextProps) => {\r\n        this.setState({spinner:true})\r\n        if(nextProps.error){\r\n            this.setState({show_error: true, redirect:false, redirect_depot:false})\r\n        }\r\n        if(nextProps.token){\r\n            if(nextProps.token.status_code === 201){\r\n                let today = new Date(\"30 Apr 2022\")\r\n                let today2 = new Date(\"30 Apr 2022\")\r\n                await this.props.UPDATE_METRIC_ACTION(true)\r\n                await this.props.UPDATE_DASHBOARD_PRODUCT_MONTHLY_ACTION(today.getFullYear())\r\n                await this.props.UPDATE_DASHBOARD_DEPOT_MONTH_ACTION(13)\r\n                await this.props.UPDATE_DASHBOARD_DEPOT_YEAR_ACTION(today.getFullYear())\r\n                await this.props.UPDATE_DASHBOARD_CUSTOMER_MONTH_ACTION(13)\r\n                await this.props.UPDATE_DASHBOARD_CUSTOMER_YEAR_ACTION(today.getFullYear())\r\n                await this.props.UPDATE_DASHBOARD_CUSTOMER_PRODUCT_ACTION(\"All\")\r\n                await this.props.UPDATE_DEPOT_TIME_SERIES_YEAR_ACTION(today.getFullYear())\r\n                await this.props.UPDATE_DEPOT_TIME_SERIES_MONTH_ACTION(13)\r\n                await this.props.UPDATE_DEPOT_INDEX_ACTION(0)\r\n                await this.props.UPDATE_DEPOT_CUSTOMER_YEAR_ACTION(today.getFullYear())\r\n                await this.props.UPDATE_DEPOT_CUSTOMER_MONTH_ACTION(13)\r\n                await this.props.UPDATE_CUSTOMER_YEAR_ACTION(today.getFullYear())\r\n                await this.props.UPDATE_SELECTION_DATE_ACTION({\"endDate\":today, \"startDate\":this.addMonths(today2, -1)})\r\n                await this.props.PRODUCT_INDEX_ACTION(0)\r\n                console.log(\"Update end depot start\")\r\n                await this.props.DEPOT_LIST_ACTION()\r\n                await this.props.DEPOT_CUSTOMER_LIST_ACTION()\r\n                await this.props.DEPOT_EXPAND_DAILY_ACTION()\r\n                await this.props.DEPOT_EXPAND_MAIN_DAILY_ACTION()\r\n                await this.props.DEPOT_EXPAND_MONTHLY_ACTION()\r\n                await this.props.DEPOT_TIME_SERIES_ACTION()\r\n\r\n                console.log(\"depot end depot product\")\r\n                await this.props.PRODUCT_LIST_ACTION()\r\n\r\n                console.log(\"product end customer start\")\r\n                \r\n                await this.props.CUSTOMER_LIST_MONTHLY_ACTION()\r\n                await this.props.CUSTOMER_LIST_ACTION()\r\n                // await this.props.CUSTOMER_EXPAND_MONTH_ACTION()\r\n\r\n                \r\n                \r\n                if(this.props.token.is_staff === false){\r\n                    console.log(\"in staff\")\r\n                    await this.props.DEPOT_EXPAND_DAILY_ACTION()\r\n                    await this.props.DEPOT_EXPAND_CUSTOMERS_ACTION()\r\n                    await this.props.ENTRY_LIST_ACTION()\r\n                    this.setState({\r\n                        spinner: false, \r\n                        redirect_depot:true,\r\n                        email: \"\",\r\n                        password: \"\",\r\n                    })\r\n                }else{\r\n                    await this.props.PRODUCT_EXPAND_DAILY_ACTION()\r\n                    await this.props.PRODUCT_EXPAND_MONTHLY_ACTION()\r\n                    await this.props.CUSTOMER_EXPAND_ALL_ACTION()\r\n                    this.setState({\r\n                        spinner: false, \r\n                        redirect:true,\r\n                        email: \"\",\r\n                        password: \"\",\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            this.setState({spinner:false})\r\n        }\r\n    }\r\n    onSubmit = async(event) => {\r\n        event.preventDefault()\r\n        const {email, password} = this.state\r\n        if(email === \"\" || password === \"\"){\r\n            this.setState({null_error:true})\r\n        }else{\r\n            this.setState({spinner:true})\r\n            await this.props.GET_TOKEN_ACTION(email, password)\r\n        }\r\n        \r\n    }\r\n    \r\n    componentWillMount = async() => {\r\n        await this.props.GET_TOKEN_ERROR_REMOVE_ACTION()\r\n        this.setState({show_error: false, null_error:false})\r\n    }\r\n    render(){\r\n    \r\n        if(this.state.redirect){\r\n            return <Redirect to=\"/\" />\r\n        }else if(this.state.redirect_depot){\r\n            return <Redirect to=\"/depots\" />\r\n        }\r\n        return (\r\n            <Container>\r\n                \r\n                <Row className='login-row'>\r\n                    {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            ariaLabel=\"Please wait as we log you in ...\"\r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: null}\r\n                    <Col className='logo-col'>\r\n                        <img src='https://opl.azurewebsites.net/static/opl_logo.png' alt='logo' />\r\n                    </Col>\r\n                    <Col xs={7} className=\"form-col\">\r\n                        <div className='title-div'>\r\n                            <h3>Sign in To The Dashboard</h3>\r\n                            <p>Enter your email and password to sign in.</p>\r\n                        </div>\r\n                        {this.state.null_error ?  <Alert variant=\"danger\">The fields should not be empty</Alert>: null}\r\n                        {(this.props.error && this.state.show_error) ? \r\n                            Object.keys(this.props.error).map((key, idx) => \r\n                                <Alert key={idx} variant=\"danger\">{key}: {this.props.error[key][0]}</Alert>\r\n                            ): null}\r\n                        <Form onSubmit={this.onSubmit}>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Control \r\n                                    type=\"text\" \r\n                                    placeholder=\"Enter email\" \r\n                                    className='input' \r\n                                    onChange={(e) => this.setState({\r\n                                        email:e.target.value, \r\n                                        show_error:false,\r\n                                        null_error: false,\r\n                                    })}/>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                                \r\n                                <Form.Control \r\n                                    type=\"password\" \r\n                                    placeholder=\"Password\" \r\n                                    className='input' \r\n                                    onChange={(e) => this.setState({\r\n                                        password:e.target.value, \r\n                                        show_error:false,\r\n                                        null_error: false\r\n                                    })}/>\r\n                            </Form.Group>\r\n                            \r\n                            <Button variant=\"primary\" type=\"submit\" className='submit'>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n               \r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      token: state.auth_reducer.token,\r\n      error: (state.auth_reducer.login_error ? state.auth_reducer.login_error: null),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    MAIN_BI_LIST_ACTION,\r\n    GET_TOKEN_ACTION,\r\n    CUSTOMER_LIST_ACTION,\r\n    PRODUCT_LIST_ACTION,\r\n    PRODUCT_EXPAND_ACTION,\r\n    CUSTOMER_EXPAND_ACTION,\r\n    BI_LIST_ACTION,\r\n    PRODUCT_BI_LIST_ACTION,\r\n    ENTRY_LIST_ACTION,\r\n    CUSTOMER_BI_LIST_ACTION,\r\n    PRODUCT_INDEX_ACTION,\r\n    GET_TOKEN_ERROR_REMOVE_ACTION,\r\n    UPDATE_SELECTION_DATE_ACTION,\r\n    DEPOT_CUSTOMER_LIST_ACTION,\r\n    DEPOT_EXPAND_ACTION, UPDATE_DASHBOARD_PRODUCT_MONTHLY_ACTION, DEPOT_TIME_SERIES_ACTION,\r\n    UPDATE_DASHBOARD_DEPOT_MONTH_ACTION, UPDATE_DASHBOARD_DEPOT_YEAR_ACTION,\r\n    UPDATE_DASHBOARD_CUSTOMER_MONTH_ACTION, UPDATE_DASHBOARD_CUSTOMER_YEAR_ACTION,\r\n    UPDATE_DASHBOARD_CUSTOMER_PRODUCT_ACTION, UPDATE_DEPOT_TIME_SERIES_YEAR_ACTION, UPDATE_DEPOT_TIME_SERIES_MONTH_ACTION,\r\n    UPDATE_DEPOT_INDEX_ACTION, UPDATE_DEPOT_CUSTOMER_MONTH_ACTION, UPDATE_DEPOT_CUSTOMER_YEAR_ACTION,\r\n    UPDATE_CUSTOMER_YEAR_ACTION,\r\n    DEPOT_EXPAND_DAILY_ACTION, DEPOT_EXPAND_MAIN_DAILY_ACTION, DEPOT_EXPAND_CUSTOMERS_ACTION, DEPOT_EXPAND_MONTHLY_ACTION,\r\n    PRODUCT_EXPAND_DAILY_ACTION, PRODUCT_EXPAND_MONTHLY_ACTION,\r\n    CUSTOMER_EXPAND_ALL_ACTION, CUSTOMER_EXPAND_MONTH_ACTION,\r\n\r\n    UPDATE_METRIC_ACTION,\r\n    DEPOT_LIST_ACTION,\r\n    CUSTOMER_LIST_MONTHLY_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(LoginPage);\r\n  ","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\"\r\nimport {connect} from \"react-redux\"\r\nimport { Triangle } from 'react-loader-spinner';\r\nimport {\r\n    DEPOT_EXPAND_ACTION, DEPOT_EXPAND_CUSTOMERS_ACTION, DEPOT_EXPAND_DAILY_ACTION, DEPOT_EXPAND_MAIN_DAILY_ACTION,\r\n    DEPOT_EXPAND_MONTHLY_ACTION,\r\n    PRODUCT_EXPAND_ACTION,  PRODUCT_EXPAND_DAILY_ACTION, PRODUCT_EXPAND_MONTHLY_ACTION,\r\n    CUSTOMER_EXPAND_ALL_ACTION,CUSTOMER_EXPAND_MONTH_ACTION,\r\n    PRODUCT_LIST_ACTION, CUSTOMER_LIST_ACTION, DEPOT_LIST_ACTION,\r\n    DEPOT_TIME_SERIES_ACTION, ENTRY_LIST_ACTION,\r\n\r\n} from \"../redux/actions/actions\"\r\nimport '../themes/theme1/layout.css'\r\n\r\nclass HeaderComponent extends React.Component {\r\n    state = {\r\n        spinner: false,\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.entries.length > 0){\r\n            this.setState({\r\n                spinner:false\r\n            })\r\n        }\r\n    }\r\n    handleRefresh = async() => {\r\n        this.setState({\r\n            spinner: true\r\n        })\r\n        await this.props.DEPOT_EXPAND_MONTHLY_ACTION()\r\n        await this.props.DEPOT_EXPAND_DAILY_ACTION()\r\n        await this.props.DEPOT_EXPAND_MAIN_DAILY_ACTION()\r\n        await this.props.DEPOT_EXPAND_CUSTOMERS_ACTION()\r\n        await this.props.DEPOT_TIME_SERIES_ACTION()\r\n\r\n        await this.props.PRODUCT_EXPAND_MONTHLY_ACTION()\r\n        await this.props.PRODUCT_EXPAND_DAILY_ACTION()\r\n\r\n        await this.props.CUSTOMER_EXPAND_ALL_ACTION()\r\n        await this.props.CUSTOMER_EXPAND_MONTH_ACTION()\r\n\r\n        await this.props.PRODUCT_LIST_ACTION()\r\n        await this.props.CUSTOMER_LIST_ACTION()\r\n        await this.props.ENTRY_LIST_ACTION()\r\n       \r\n    }\r\n    componentWillMount = () => {\r\n        \r\n    }\r\n    render() {\r\n        console.log(this.state.spinner)\r\n        return (\r\n            <div className=\"header\">\r\n                <h5>{this.props.headerTitle}</h5>\r\n                <div className=\"left\">\r\n                    {/* <Button \r\n                        variant=\"info\" \r\n                        size=\"sm\" \r\n                        className=\"refresh-button\"\r\n                        onClick = {this.handleRefresh}\r\n                    >\r\n                        \r\n                        {this.state.spinner ?\r\n                        <div className=\"button-spinner\">\r\n                            <Triangle \r\n                                \r\n                                color=\"#00BFFF\"\r\n                                height={20}\r\n                                width={20}\r\n                                timeout={4000} //3 secs\r\n                                visible={this.state.spinner}\r\n                                \r\n                            />\r\n                        </div>:null}\r\n                        {this.state.spinner ? \"Loading\": \"Refresh\"}\r\n                        \r\n                    </Button> */}\r\n                    <Button variant=\"secondary\" size=\"sm\">{this.props.first_name[0]}{this.props.last_name[0]}</Button>\r\n                    <p className=\"header-name\">{this.props.first_name} {this.props.last_name}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      token: state.auth_reducer.token,\r\n      customer_expand_month: (state.list_reducer.customer_expand_month ? state.list_reducer.customer_expand_month: []),\r\n      entries: (state.list_reducer.entries ? state.list_reducer.entries: []),\r\n      customer_expand: (state.list_reducer.customer_expand ? state.list_reducer.customer_expand: {}),\r\n      product_expand: (state.list_reducer.product_expand ? state.list_reducer.product_expand: []),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    PRODUCT_EXPAND_MONTHLY_ACTION, PRODUCT_EXPAND_DAILY_ACTION,\r\n\r\n    CUSTOMER_LIST_ACTION, DEPOT_LIST_ACTION,\r\n    DEPOT_EXPAND_CUSTOMERS_ACTION, DEPOT_EXPAND_DAILY_ACTION, DEPOT_EXPAND_MAIN_DAILY_ACTION,\r\n    DEPOT_EXPAND_MONTHLY_ACTION,\r\n    CUSTOMER_EXPAND_ALL_ACTION, CUSTOMER_EXPAND_MONTH_ACTION, \r\n    PRODUCT_LIST_ACTION,\r\n    DEPOT_TIME_SERIES_ACTION,\r\n    ENTRY_LIST_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(HeaderComponent);\r\n  ","import React from \"react\";\r\nimport {Container, Button} from 'react-bootstrap'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {MdLogout, MdDashboard,MdOutlineListAlt, MdOpacity, MdPeople, MdAnchor} from \"react-icons/md\";\r\nimport { Link, NavLink, Redirect} from \"react-router-dom\";\r\nimport '../themes/theme1/layout.css'\r\nimport HeaderComponent from \"./header\";\r\nimport {USER_LOGGED_OUT_ACTION} from \"../redux/actions/actions\"\r\n\r\nclass Layout extends React.Component {\r\n    state = {\r\n        dashboard: \"success\",\r\n        products: \"transparent\",\r\n        orders: \"transparent\",\r\n        customers: \"transparent\",\r\n        redirect: false,\r\n    }\r\n\r\n    handleClick = (btn) => {\r\n        \r\n        let links = [\"dashboard\", \"products\", \"orders\", \"customers\"]\r\n\r\n        let filtered = links.filter(function(value, index, arr){ \r\n            return value !== btn;\r\n        });\r\n        this.setState({btn:\"success\"})\r\n        filtered.map((link) => {\r\n            this.setState({link:\"transparent\"})\r\n        })\r\n       \r\n    }\r\n\r\n    handleLogOut = () => {\r\n        this.props.USER_LOGGED_OUT_ACTION()\r\n        this.setState({redirect:true})\r\n        \r\n    }\r\n    render(){\r\n        const {dashboard, products, orders, customers} = this.state\r\n    \r\n        if(this.state.redirect){\r\n            return <Redirect to={\"/login\"} />\r\n        }\r\n        return (\r\n            <Container fluid className=\"main\">\r\n                \r\n                <div className=\"side\">\r\n                    <Link to=\"/\" className=\"logo\">\r\n                        <img src=\"https://opl.azurewebsites.net/static/opl_logo.png\" />\r\n                    </Link>\r\n                    \r\n                    <div className=\"links\">\r\n                        {this.props.token.is_staff === true ?\r\n                        <NavLink to=\"/\" exact={true} className=\"button\">\r\n                            <h6><span><MdDashboard size={20} color=\"#D04D30\"/></span>Dashboard</h6>\r\n                        </NavLink>: null}\r\n\r\n                        <NavLink to=\"/depots\" className=\"button\">\r\n                            <h6><span><MdAnchor /></span>Depots</h6>\r\n                        </NavLink>\r\n                        {/* <NavLink to=\"/products\" className=\"button\">\r\n                            <h6><span><MdOpacity /></span>Products</h6>\r\n                        </NavLink> */}\r\n                        <NavLink to=\"/orders\" className=\"button\">\r\n                            <h6><span><MdOutlineListAlt /></span>Sales</h6>\r\n                        </NavLink>\r\n                        <NavLink to=\"/customers\" className=\"button\">\r\n                            <h6><span><MdPeople /></span>Customers</h6>\r\n                        </NavLink>\r\n                        <Button variant=\"transparent\" className=\"button logout\" onClick={this.handleLogOut}>\r\n                            <h6><span><MdLogout /></span>Log Out</h6>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"component\">\r\n                    {this.props.token ? \r\n                        <HeaderComponent headerTitle={this.props.headerTitle} first_name={this.props.token.data.first_name} last_name={this.props.token.data.last_name}/>:\r\n                        <HeaderComponent headerTitle={this.props.headerTitle} first_name={\"Hashim\"} last_name={\"Athman\"}/>}\r\n                    {this.props.children}\r\n                </div>\r\n                \r\n            </Container>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n      token: state.auth_reducer.token,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    USER_LOGGED_OUT_ACTION\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Layout);\r\n  ","import React from \"react\";\r\nimport {Form} from \"react-bootstrap\"\r\nimport {connect} from \"react-redux\"\r\nimport {\r\n    UPDATE_DEPOT_TIME_SERIES_MONTH_ACTION, \r\n    UPDATE_DEPOT_TIME_SERIES_YEAR_ACTION, \r\n} from \"../../redux/actions/actions\"\r\n\r\n\r\nclass DepotMainSelect extends React.Component {\r\n    state = {\r\n        year: parseInt(this.props.update_depot_time_series_year),\r\n        month: parseInt(this.props.update_depot_time_series_month),\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        \r\n        this.setState({\r\n            year:parseInt(nextProps.update_depot_time_series_year), \r\n            month:parseInt(nextProps.update_depot_time_series_month),\r\n        })\r\n    }\r\n\r\n    handleYearChange = async(year) => {\r\n        await this.props.UPDATE_DEPOT_TIME_SERIES_YEAR_ACTION(year)\r\n    }\r\n\r\n    handleMonthChange = async(month) => {\r\n        await this.props.UPDATE_DEPOT_TIME_SERIES_MONTH_ACTION(month)\r\n    }\r\n\r\n    render (){\r\n        const years = [2022, 2021]\r\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n        \r\n        return (\r\n            <div className=\"pie-select-div\">\r\n                <Form.Group className=\"mb-4 pie-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Year</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleYearChange(e.target.value)}>\r\n                            <option>{this.state.year}</option>\r\n                            {years.map((year) => \r\n                                parseInt(this.state.year) === year ? null : <option value={year}>{year}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-4 pie-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Month</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleMonthChange(e.target.value)}>\r\n                            \r\n                            {this.state.month === 13 ? null: <option value={this.state.month}>{months[parseInt(this.state.month)]}</option>}\r\n                            <option value={13}>All</option>\r\n\r\n                            {months.map((month, idx) => \r\n                                parseInt(this.state.month) === idx ? null : <option value={idx}>{month}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                </Form.Group>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      update_depot_time_series_year: state.update_reducer.update_depot_time_series_year,\r\n      update_depot_time_series_month: state.update_reducer.update_depot_time_series_month,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    UPDATE_DEPOT_TIME_SERIES_MONTH_ACTION,\r\n    UPDATE_DEPOT_TIME_SERIES_YEAR_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(DepotMainSelect);\r\n  ","import React from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\n\r\nclass MainChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        series: [],\r\n        options: {\r\n          chart: {\r\n            type: 'bar',\r\n            height: 430\r\n          },\r\n          plotOptions: {\r\n            bar: {\r\n              horizontal: false,\r\n              dataLabels: {\r\n                position: 'top',\r\n              },\r\n            }\r\n          },\r\n          dataLabels: {\r\n            enabled: true,\r\n            offsetX: -6,\r\n            style: {\r\n              fontSize: '12px',\r\n              colors: ['#fff']\r\n            }\r\n          },\r\n          stroke: {\r\n            show: true,\r\n            width: 1,\r\n            colors: ['#fff']\r\n          },\r\n          title: {\r\n            text: this.props.dashboard_metric ? 'Depots Comparison by Revenue' : 'Depots Comparison by Quantity'\r\n          },\r\n          yaxis: {\r\n            title: {\r\n              text: this.props.dashboard_metric ? \"Kshs (Millions)\": \"Litres\"\r\n            },\r\n            min: 0\r\n          },\r\n\r\n          tooltip: {\r\n            shared: true,\r\n            intersect: false,\r\n            y: {\r\n              formatter: this.props.dashboard_metric ? function (val) {\r\n                return `Kshs ${val} Millions`\r\n              }: function (val) {\r\n                return `${val} Litres`\r\n              }\r\n            }\r\n          },\r\n          xaxis: {\r\n            categories: [],\r\n          },\r\n        },\r\n      \r\n      \r\n      };\r\n    }\r\n\r\n    mapYears = (data, year) => {\r\n      let result = data.filter(obj => {\r\n        return parseInt(obj.year) === parseInt(year)\r\n      })\r\n      console.log(year)\r\n      let values = result[0].values\r\n      let series = []\r\n      for(let i=0; i<values.length; i++){\r\n        series.push({\"name\":values[i].name, \"data\":values[i].values})\r\n      }\r\n      return series\r\n    }\r\n\r\n    mapMonths = (data, year, month) => {\r\n      let result = data.filter(obj => {\r\n        return parseInt(obj.year) === parseInt(year)\r\n      })\r\n      console.log(result)\r\n      let values = result[0].values.filter(obj => {\r\n        return parseInt(obj.month) === parseInt(month)+1\r\n      })\r\n      let series = []\r\n      for(let i=0; i<values.length; i++){\r\n        series.push({\"name\":values[i].name, \"data\":values[i].values})\r\n      }\r\n      return series\r\n    }\r\n\r\n    update = (props) => {\r\n      let data = null;\r\n      \r\n      if(parseInt(props.update_depot_time_series_month) === 13){\r\n        data = props.dashboard_metric ? props.depot_time_series.years_revenue: props.depot_time_series.years_quantity\r\n        this.setState({series:this.mapYears(data, props.update_depot_time_series_year)})\r\n      }else{\r\n        data = props.dashboard_metric ? props.depot_time_series.months_revenue : props.depot_time_series.months_quantity\r\n        this.setState({series:this.mapMonths(data, props.update_depot_time_series_year, props.update_depot_time_series_month)})\r\n      }\r\n      this.setState(prevState => ({\r\n        ...prevState.options,\r\n        options:{\r\n          ...prevState.options.xaxis,\r\n          xaxis: {\r\n            categories: props.depot_time_series.depots,\r\n          },\r\n          tooltip: {\r\n            ...prevState.options.tooltip,\r\n            y: {\r\n              ...prevState.options.tooltip.y,\r\n              formatter: props.dashboard_metric ? function (val) {\r\n                return `Kshs ${val} Millions`\r\n              }: function (val) {\r\n                return `${val} Litres`\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }))\r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n     this.update(nextProps)\r\n    }\r\n\r\n    componentDidMount = () => {\r\n     this.update(this.props)\r\n    }\r\n    render() {\r\n      return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={380} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\nexport default MainChart","import React from \"react\";\r\nimport {Form} from \"react-bootstrap\"\r\nimport {connect} from \"react-redux\"\r\nimport {\r\n    UPDATE_DASHBOARD_CUSTOMER_MONTH_ACTION, \r\n    UPDATE_DASHBOARD_CUSTOMER_YEAR_ACTION,\r\n    UPDATE_DASHBOARD_CUSTOMER_PRODUCT_ACTION,\r\n    UPDATE_DEPOT_INDEX_ACTION,\r\n} from \"../../redux/actions/actions\"\r\n\r\n\r\nclass DepotSelect extends React.Component {\r\n    state = {\r\n        year:this.props.update_dashboard_customer_year,\r\n        month: parseInt(this.props.update_dashboard_customer_month),\r\n        products: this.props.products,\r\n        product: this.props.update_dashboard_customer_product,\r\n        depot: parseInt(this.props.update_depot_index),\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        \r\n        this.setState({\r\n            year:nextProps.update_dashboard_customer_year, \r\n            month:parseInt(nextProps.update_dashboard_customer_month),\r\n            product: nextProps.update_dashboard_customer_product,\r\n            depot: parseInt(nextProps.update_depot_index),\r\n        })\r\n    }\r\n\r\n    handleYearChange = async(year) => {\r\n        await this.props.UPDATE_DASHBOARD_CUSTOMER_YEAR_ACTION(year)\r\n    }\r\n\r\n    handleMonthChange = async(month) => {\r\n        await this.props.UPDATE_DASHBOARD_CUSTOMER_MONTH_ACTION(month)\r\n    }\r\n\r\n    handleProductChange = async(product) => {\r\n       \r\n        await this.props.UPDATE_DASHBOARD_CUSTOMER_PRODUCT_ACTION(product)\r\n    }\r\n\r\n    handleDepotChange = async(index) => {\r\n        await this.props.UPDATE_DEPOT_INDEX_ACTION(index)\r\n    }\r\n\r\n    render (){\r\n        const years = [2022, 2021]\r\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n        const products = this.state.products\r\n        const depots = this.props.depots\r\n        return (\r\n            <div className=\"pie-select-div\">\r\n                <Form.Group className=\"mb-4 pie-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Depot</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleDepotChange(e.target.value)}>\r\n                            <option value={this.state.depot}>{depots[this.state.depot].name}</option>\r\n                            {depots.map((depot, idx) => \r\n                                this.state.depot === idx ? null : <option value={idx}>{depot.name}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                </Form.Group>\r\n\r\n{/* \r\n                <Form.Group className=\"mb-4 pie-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Year</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleYearChange(e.target.value)}>\r\n                            <option>{this.state.year}</option>\r\n                            {years.map((year) => \r\n                                parseInt(this.state.year) === year ? null : <option value={year}>{year}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-4 pie-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Month</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleMonthChange(e.target.value)}>\r\n                            \r\n                            {this.state.month === 13 ? null: <option value={this.state.month}>{months[parseInt(this.state.month)]}</option>}\r\n                            <option value={13}>All</option>\r\n\r\n                            {months.map((month, idx) => \r\n                                parseInt(this.state.month) === idx ? null : <option value={idx}>{month}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-4 pie-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Product</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleProductChange(e.target.value)}>\r\n                            <option>{this.state.product === \"All\" ? \"All\":this.state.product}</option>\r\n                            {this.state.product === \"All\" ? null: <option value={\"All\"}>All</option>}\r\n                            {products.map((product) => \r\n                                this.state.product === product.name ? null : <option value={product.name}>{product.name}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                </Form.Group> */}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      update_dashboard_customer_month: state.update_reducer.update_dashboard_customer_month,\r\n      update_dashboard_customer_year: state.update_reducer.update_dashboard_customer_year,\r\n      update_dashboard_customer_product: state.update_reducer.update_dashboard_customer_product,\r\n      update_depot_index: state.update_reducer.update_depot_index,\r\n      products: state.list_reducer.products,\r\n      depots: state.list_reducer.depot_list,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    UPDATE_DASHBOARD_CUSTOMER_MONTH_ACTION,\r\n    UPDATE_DASHBOARD_CUSTOMER_YEAR_ACTION,\r\n    UPDATE_DASHBOARD_CUSTOMER_PRODUCT_ACTION,\r\n    UPDATE_DEPOT_INDEX_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(DepotSelect);\r\n  ","import React from 'react'\r\n\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport ApexCharts from 'apexcharts';\r\nvar today = new Date(\"28 Feb 2022\")\r\nvar months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\nclass DeportMainChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {\r\n      \r\n        series: [],\r\n        options: {\r\n          chart: {\r\n            id: 'area-datetime',\r\n            type: 'area',\r\n            height: 400,\r\n            zoom: {\r\n              autoScaleYaxis: true\r\n            }\r\n          },\r\n          title: {\r\n            text: this.props.dashboard_metric ? \"Revenue\":\"Quantities\"\r\n          },\r\n          annotations: {\r\n            \r\n            xaxis: [{\r\n              x: this.props.selection_dates.startDate.getTime(),\r\n              borderColor: '#999',\r\n              yAxisIndex: 0,\r\n             \r\n            }]\r\n          },\r\n          dataLabels: {\r\n            enabled: true\r\n          },\r\n          markers: {\r\n            size: 0,\r\n            style: 'hollow',\r\n          },\r\n          xaxis: {\r\n            type: 'datetime',\r\n            min: this.props.selection_dates.startDate.getTime(),\r\n            max: this.props.selection_dates.endDate.getTime(),\r\n            tickAmount: 5,\r\n          },\r\n          yaxis: {\r\n            title: {\r\n              text: 'Kshs (Millions)'\r\n            },\r\n            min: 0,\r\n          },\r\n          tooltip: {\r\n            x: {\r\n              format: 'dd MMM yyyy'\r\n            },\r\n            y: {\r\n              formatter: this.props.dashboard_metric ? function (val) {\r\n                return `Kshs ${val} Millions`\r\n              }: function (val) {\r\n                return `${val} Litres`\r\n              }\r\n            }\r\n          },\r\n          // fill: {\r\n          //   type: 'gradient',\r\n          //   gradient: {\r\n          //     shadeIntensity: 1,\r\n          //     opacityFrom: 0.7,\r\n          //     opacityTo: 0.9,\r\n          //     stops: [0, 100]\r\n          //   }\r\n          // },\r\n        },\r\n      \r\n      \r\n        selection: 'one_month',\r\n      \r\n      };\r\n    }\r\n\r\n\r\n    addMonths = (date, months) => {\r\n      date.setMonth(date.getMonth() + months);\r\n      return date;\r\n    }\r\n\r\n    updateData(timeline) {\r\n      this.setState({\r\n        selection: timeline\r\n      })\r\n      const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\n      const month = new Date(`1 ${months[today.getMonth()]} ${today.getFullYear()}`)\r\n\r\n      let six_months = new Date(\"28 Feb 2022\")\r\n      six_months = this.addMonths(six_months, -6)\r\n\r\n      let year = new Date(\"28 Feb 2022\")\r\n      year = this.addMonths(year, -12)\r\n\r\n    }\r\n    \r\n    mapMax = (data) => {\r\n      let maxs = []\r\n      for(let i=0; i<data.length; i++){    \r\n        maxs.push(parseFloat(data[i].sum))\r\n      }\r\n      return Math.max.apply(null, maxs)\r\n    }\r\n\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n      let data = nextProps.depot_expand_daily[parseInt(nextProps.update_depot_index)]\r\n      let series = []\r\n      let prod = nextProps.dashboard_metric ? data.revenue_daily: data.quantity_daily\r\n\r\n      series = series.concat({\r\n        name:data.name,\r\n        data: this.mapData(prod)\r\n      })\r\n\r\n      this.setState(prevState => ({\r\n        series:series,\r\n        options: {\r\n          ...prevState.options,\r\n          title: {\r\n            ...prevState.options.title,\r\n            text: nextProps.dashboard_metric ? \"Revenue\": \"Quantities\"\r\n          },\r\n          xaxis:{\r\n            ...prevState.options.xaxis,\r\n            min: nextProps.selection_dates.startDate.getTime(),\r\n            max: nextProps.selection_dates.endDate.getTime(),\r\n          },\r\n          yaxis: {\r\n            ...prevState.options.yaxis,\r\n            title: {\r\n              ...prevState.options.yaxis.title,\r\n              text: nextProps.dashboard_metric ? \"Kshs (Millions)\": \"Litres\"\r\n            }\r\n          },\r\n          tooltip: {\r\n            ...prevState.options.tooltip,\r\n            y: {\r\n              ...prevState.options.tooltip.y,\r\n              formatter: nextProps.dashboard_metric ? function (val) {\r\n                return `Kshs ${val} Millions`\r\n              }: function (val) {\r\n                return `${val} Litres`\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }))\r\n      \r\n      ApexCharts.exec(\r\n        'area-datetime',\r\n        'zoomX',\r\n        nextProps.selection_dates.startDate.getTime(),\r\n        nextProps.selection_dates.endDate.getTime(),\r\n        \r\n      )\r\n    }\r\n\r\n    mapData = (data) => {\r\n      let values = []\r\n      for(let i=0; i<data.length; i++){\r\n        values.push([data[i].timestamp, data[i].sum])\r\n      }\r\n\r\n      return values\r\n    }\r\n    componentDidMount = () => {\r\n      let data = this.props.depot_expand_daily[parseInt(this.props.update_depot_index)]\r\n      \r\n      let series = []\r\n      let prod = this.props.dashboard_metric ? data.revenue_daily: data.quantity_daily\r\n    \r\n        series = series.concat({\r\n          name:data.name,\r\n          data: this.mapData(prod)\r\n        })\r\n      \r\n      this.setState({series:series, timeline:\"one_month\"})\r\n    }\r\n    render() {\r\n      \r\n      return (\r\n        <div id=\"chart\" >\r\n            <div id=\"chart-timeline\">\r\n              <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" height={400} />\r\n            </div>\r\n        </div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\nexport default DeportMainChart","import React from 'react'\r\n\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport ApexCharts from 'apexcharts';\r\nvar today = new Date(\"28 Feb 2022\")\r\nvar months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\nclass DepotProductChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {\r\n      \r\n        series: [],\r\n        options: {\r\n          chart: {\r\n            id: 'area-datetime',\r\n            type: 'area',\r\n            height: 400,\r\n            zoom: {\r\n              autoScaleYaxis: true\r\n            }\r\n          },\r\n          title: {\r\n            text: this.props.dashboard_metric ? \"Revenue\":\"Quantities\"\r\n          },\r\n          annotations: {\r\n            \r\n            xaxis: [{\r\n              x: this.props.selection_dates.startDate.getTime(),\r\n              borderColor: '#999',\r\n              yAxisIndex: 0,\r\n             \r\n            }]\r\n          },\r\n          dataLabels: {\r\n            enabled: true\r\n          },\r\n          markers: {\r\n            size: 0,\r\n            style: 'hollow',\r\n          },\r\n          xaxis: {\r\n            type: 'datetime',\r\n            min: this.props.selection_dates.startDate.getTime(),\r\n            max:this.props.selection_dates.endDate.getTime(),\r\n            tickAmount: 5,\r\n          },\r\n          yaxis: {\r\n            title: {\r\n              text: 'Kshs (Millions)'\r\n            },\r\n            min: 0\r\n          },\r\n          tooltip: {\r\n            x: {\r\n              format: 'dd MMM yyyy'\r\n            },\r\n            y: {\r\n              formatter: this.props.dashboard_metric ? function (val) {\r\n                return `Kshs ${val} Millions`\r\n              }: function (val) {\r\n                return `${val} Litres`\r\n              }\r\n            }\r\n          },\r\n          // fill: {\r\n          //   type: 'gradient',\r\n          //   gradient: {\r\n          //     shadeIntensity: 1,\r\n          //     opacityFrom: 0.7,\r\n          //     opacityTo: 0.9,\r\n          //     stops: [0, 100]\r\n          //   }\r\n          // },\r\n        },\r\n      \r\n      \r\n        selection: 'one_month',\r\n      \r\n      };\r\n    }\r\n\r\n\r\n    addMonths = (date, months) => {\r\n      date.setMonth(date.getMonth() + months);\r\n      return date;\r\n    }\r\n\r\n    updateData(timeline) {\r\n      this.setState({\r\n        selection: timeline\r\n      })\r\n      const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\n      const month = new Date(`1 ${months[today.getMonth()]} ${today.getFullYear()}`)\r\n\r\n      let six_months = new Date(\"28 Feb 2022\")\r\n      six_months = this.addMonths(six_months, -6)\r\n\r\n      let year = new Date(\"28 Feb 2022\")\r\n      year = this.addMonths(year, -12)\r\n\r\n    }\r\n    \r\n    mapData = (data, startDate=null, endDate=null) => {\r\n      \r\n      let values = []\r\n      let maxs = []\r\n      this.mapMax(data, startDate, endDate)\r\n      for(let i=0; i<data.length; i++){\r\n        if(isNaN(data[i].sum) === false && data){\r\n          let result = data.filter(obj => {\r\n            return obj.timestamp >= startDate && obj.timestamp <= endDate \r\n          })\r\n          maxs.push(this.mapMax(result))\r\n        }\r\n        \r\n        values.push([data[i].timestamp, data[i].sum])\r\n      }\r\n      \r\n      return [values, Math.max.apply(null, maxs)]\r\n    }\r\n\r\n    mapMax = (data) => {\r\n      let maxs = []\r\n      for(let i=0; i<data.length; i++){    \r\n        maxs.push(parseFloat(data[i].sum))\r\n      }\r\n      return Math.max.apply(null, maxs)\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n      \r\n      let data = nextProps.depot_expand_main_daily[parseInt(nextProps.update_depot_index)]\r\n      data = nextProps.dashboard_metric ? data.depot_revenue_daily: data.depot_quantity_daily\r\n      let series = []\r\n      let maxs = []\r\n      for(let i=0; i<data.length; i++){\r\n        let prod = data[i].values\r\n        let d = this.mapData(prod, nextProps.selection_dates.startDate.getTime(), nextProps.selection_dates.endDate.getTime())\r\n        maxs.push(d[1])\r\n        series = series.concat({\r\n          name:data[i].name,\r\n          data: d[0]\r\n        })\r\n      }\r\n      this.setState(prevState => ({\r\n        series:series,\r\n        options: {\r\n          ...prevState.options,\r\n          title: {\r\n            ...prevState.options.title,\r\n            text: nextProps.dashboard_metric ? \"Revenue\": \"Quantities\"\r\n          },\r\n          xaxis: {\r\n            ...prevState.options.xaxis,\r\n            min: nextProps.selection_dates.startDate.getTime(),\r\n            max: nextProps.selection_dates.endDate.getTime(),\r\n          },\r\n          yaxis: {\r\n            ...prevState.options.yaxis,\r\n            title: {\r\n              ...prevState.options.yaxis.title,\r\n              text: nextProps.dashboard_metric ? \"Kshs (Millions)\": \"Litres\"\r\n            },\r\n            max: Math.max.apply(null, maxs) + 1\r\n          },\r\n          tooltip: {\r\n            ...prevState.options.tooltip,\r\n            y: {\r\n              ...prevState.options.tooltip.y,\r\n              formatter: nextProps.dashboard_metric ? function (val) {\r\n                return `Kshs ${val} Millions`\r\n              }: function (val) {\r\n                return `${val} Litres`\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }))\r\n      \r\n      ApexCharts.exec(\r\n        'area-datetime',\r\n        'zoomX',\r\n        nextProps.selection_dates.startDate.getTime(),\r\n        nextProps.selection_dates.endDate.getTime(),\r\n        \r\n      )\r\n    }\r\n\r\n    \r\n    componentDidMount = () => {\r\n      try{\r\n        let data = this.props.depot_expand_main_daily[parseInt(this.props.update_depot_index)]\r\n        data = this.props.dashboard_metric ? data.depot_revenue_daily: data.depot_quantity_daily\r\n        let series = []\r\n        for(let i=0; i<data.length; i++){\r\n          let prod = data[i].values\r\n          series = series.concat({\r\n            name:data[i].name,\r\n            data: this.mapData(prod)[0]\r\n          })\r\n        }\r\n        \r\n        this.setState({series:series, timeline:\"one_month\"})\r\n      }catch(e){\r\n\r\n      }\r\n     \r\n    }\r\n    render() {\r\n      \r\n      return (\r\n        <div id=\"chart\" >\r\n            \r\n\r\n            <div id=\"chart-timeline\">\r\n              <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" height={400} />\r\n            </div>\r\n        </div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\nexport default DepotProductChart","import React from \"react\";\r\nimport { Table, Pagination} from \"react-bootstrap\";\r\n\r\nclass DepotCustomers extends React.Component {\r\n\r\n    state = {\r\n        customers: [],\r\n        active: 1,\r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.update(nextProps)\r\n    }\r\n    update = (props) => {\r\n        try{\r\n            let customers = props.depot_expand_customers[props.update_depot_index].customers\r\n        let data = []\r\n        \r\n        \r\n            for(let i=0; i<customers.length; i++){\r\n            \r\n                let quantity = customers[i].quantity_monthly\r\n                let revenue = customers[i].revenue_monthly\r\n                 \r\n                let quantity_result = quantity.filter(obj => {\r\n                    return parseInt(obj.year) === parseInt(props.update_depot_customer_year)\r\n                })\r\n                quantity_result = quantity_result[0]\r\n    \r\n                let revenue_result = revenue.filter(obj => {\r\n                    return parseInt(obj.year) === parseInt(props.update_depot_customer_year)\r\n                })\r\n                revenue_result = revenue_result[0]\r\n                \r\n                let orders = 0\r\n                let q = 0\r\n                let r = 0\r\n                \r\n                if(parseInt(props.update_depot_customer_month) === 13){\r\n                    orders = revenue_result.orders\r\n                    q = quantity_result.total\r\n                    r = revenue_result.total \r\n                }else{\r\n                    \r\n                    let r_month = revenue_result.data.filter(obj => {\r\n                        return parseInt(obj.month) === parseInt(props.update_depot_customer_month)\r\n                    })\r\n                    \r\n                    let q_month = quantity_result.data.filter(obj => {\r\n                        return parseInt(obj.month) === parseInt(props.update_depot_customer_month)\r\n                    })\r\n                    \r\n                    if(r_month.length > 0 && q_month.length > 0){\r\n                        orders = q_month[0].orders\r\n                        q = q_month[0].total\r\n                        r = r_month[0].total\r\n                    }\r\n                    \r\n                }\r\n                \r\n                data.push({\r\n                    \"name\":revenue_result.name,\r\n                    \"orders\":orders,\r\n                    \"revenue\": r,\r\n                    \"quantity\":q,\r\n                })\r\n            }\r\n            this.setState({customers:data})\r\n        }catch(e){\r\n\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        this.update(this.props)\r\n    }\r\n    render(){\r\n        const customers = this.state.customers\r\n        let items = [];\r\n        const NUM_ORDERS = 8\r\n        let active = this.state.active;\r\n        const start_index = (active - 1) * NUM_ORDERS\r\n        const end_index = (active * NUM_ORDERS)\r\n        for (let number = 1; number <= Math.ceil(customers.length / NUM_ORDERS); number++) {\r\n            items.push(\r\n                <Pagination.Item key={number} active={number === active} onClick={() => this.setState({active:number})}>\r\n                {number}\r\n                </Pagination.Item>,\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div  className=\"order-table\">\r\n                <h6>Depot Customers</h6>\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th></th>\r\n                        <th>Name</th>\r\n                        <th>No Orders</th>\r\n                        <th>Revenue (Millions)</th>\r\n                        <th>Quantity</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {customers.slice(start_index, end_index).map((customer, idx) =>\r\n                            <tr key={idx}>\r\n                                <td>{start_index + idx + 1}</td>\r\n                                <td>{customer.name}</td>\r\n                                <td>{customer.orders}</td>\r\n                                <td>{customer.revenue}</td>\r\n                                <td>{customer.quantity}</td>\r\n                            </tr>\r\n                        )}\r\n                        \r\n                       \r\n                    </tbody>\r\n                    </Table>\r\n                    <Pagination size=\"sm\">{items}</Pagination>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DepotCustomers","import React from \"react\";\r\nimport {Form} from \"react-bootstrap\"\r\nimport {connect} from \"react-redux\"\r\nimport {\r\n    UPDATE_DEPOT_CUSTOMER_MONTH_ACTION, \r\n    UPDATE_DEPOT_CUSTOMER_YEAR_ACTION,\r\n} from \"../../redux/actions/actions\"\r\n\r\n\r\nclass DepotCustomerSelect extends React.Component {\r\n    state = {\r\n        year:this.props.update_depot_customer_year,\r\n        month: this.props.update_depot_customer_month,\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        \r\n        this.setState({\r\n            year:nextProps.update_depot_customer_year, \r\n            month:nextProps.update_depot_customer_month,\r\n        })\r\n    }\r\n\r\n    handleYearChange = async(year) => {\r\n        await this.props.UPDATE_DEPOT_CUSTOMER_YEAR_ACTION(year)\r\n    }\r\n\r\n    handleMonthChange = async(month) => {\r\n       \r\n        await this.props.UPDATE_DEPOT_CUSTOMER_MONTH_ACTION(month)\r\n    }\r\n\r\n    render (){\r\n        const years = [2022, 2021]\r\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n        return (\r\n            <div className=\"pie-select-div\">\r\n                <Form.Group className=\"mb-4 pie-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Year</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleYearChange(e.target.value)}>\r\n                            <option>{this.state.year}</option>\r\n                            {years.map((year) => \r\n                                parseInt(this.state.year) === year ? null : <option value={year}>{year}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-4 pie-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Month</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleMonthChange(e.target.value)}>\r\n                            {parseInt(this.state.month) === 13 ? null: <option value={this.state.month}>{months[parseInt(this.state.month)]}</option>}\r\n                            <option value={13}>All</option>\r\n                            {months.map((month, idx) => \r\n                                parseInt(this.state.month) === idx? null : <option value={idx}>{month}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                </Form.Group>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      update_depot_customer_month: parseInt(state.update_reducer.update_depot_customer_month),\r\n      update_depot_customer_year: parseInt(state.update_reducer.update_depot_customer_year),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    UPDATE_DEPOT_CUSTOMER_MONTH_ACTION,\r\n    UPDATE_DEPOT_CUSTOMER_YEAR_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(DepotCustomerSelect);\r\n  ","import React from 'react';\r\nimport {Row, Col} from \"react-bootstrap\"\r\nimport { connect } from 'react-redux';\r\nimport Popup from 'reactjs-popup';\r\nimport {Button} from 'react-bootstrap'\r\nimport { MdKeyboardArrowDown, MdCalendarToday} from \"react-icons/md\";\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport Depot_main_select from '../common/depot_main_select';\r\nimport MainChart from './charts/top';\r\nimport Depot_select from '../common/depot_select';\r\nimport DeportMainChart from './charts/depot_main';\r\nimport DepotProductChart from './charts/depot_ products';\r\nimport DepotCustomers from './customer_table';\r\nimport Depot_customers from '../common/depot_customers';\r\nimport DepotPieChart from './charts/pie';\r\n\r\nimport { UPDATE_SELECTION_DATE_ACTION, UPDATE_METRIC_ACTION} from '../../redux/actions/actions';\r\n\r\nclass ChartSection extends React.Component {\r\n    state = {\r\n        startDate: this.props.selection_dates.startDate,\r\n        endDate: this.props.selection_dates.endDate,\r\n        key: 'selection', \r\n      }\r\n\r\n    handleSelect = async (ranges) => {\r\n    \r\n        this.setState({\r\n            startDate:ranges.selection.startDate,\r\n            endDate: ranges.selection.endDate\r\n        })\r\n        \r\n        await this.props.UPDATE_SELECTION_DATE_ACTION({\r\n            startDate:ranges.selection.startDate,\r\n            endDate: ranges.selection.endDate\r\n        })\r\n      }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.setState({\r\n            startDate:nextProps.selection_dates.startDate, \r\n            endDate:nextProps.selection_dates.endDate,\r\n          })\r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <div className='charts-section'>\r\n                {this.props.token.is_staff === true ?\r\n                <Row>\r\n                    <Col>\r\n                        <div className='chart-area'>\r\n                        \r\n                            <Depot_main_select />\r\n                            <MainChart \r\n                                depot_time_series={this.props.depot_time_series}\r\n                                update_depot_time_series_year = {this.props.update_depot_time_series_year}\r\n                                update_depot_time_series_month = {this.props.update_depot_time_series_month}\r\n                                dashboard_metric={this.props.dashboard_metric}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    {/* <Col>\r\n                        <DailyVolChart data={daily_products_comp}/>\r\n                    </Col> */}\r\n                </Row>: null}\r\n                \r\n                <Row>\r\n                    <Col>\r\n                        <Depot_select />\r\n                    </Col>\r\n                   \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <div className='chart-area'>\r\n                            {this.props.token.is_staff ? \r\n                        <Popup trigger={\r\n                            <Button className='input-dates' size='sm' style={{width:300, marginBottom:20}}>\r\n                                <div className='input-display'>\r\n                                    <span><MdCalendarToday color='#D04D30' size={18}/></span>\r\n                                    {this.state.startDate.toDateString()} - {this.state.endDate.toDateString()}\r\n                                    <span>\r\n                                        <MdKeyboardArrowDown size={18}/>\r\n                                    </span>\r\n                                </div>\r\n                                \r\n                            </Button>\r\n                        } \r\n                            position=\"bottom\"\r\n                        >\r\n                        <DateRangePicker\r\n                            onChange={this.handleSelect}\r\n                            showSelectionPreview={true}\r\n                            moveRangeOnFirstSelection={false}\r\n                            months={2}\r\n                            ranges={[this.state]}\r\n                            direction=\"horizontal\"\r\n                            preventSnapRefocus={true}\r\n                            calendarFocus=\"backwards\"\r\n                            className='date-range'\r\n                        />\r\n                        </Popup>: null}\r\n                        \r\n                            <DeportMainChart \r\n                                depot_expand_daily={this.props.depot_expand_daily}\r\n                                selection_dates={this.props.selection_dates}\r\n                                dashboard_metric={this.props.dashboard_metric}\r\n                                update_depot_index={this.props.update_depot_index}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{marginTop:20}}>\r\n                    <Col xs={7}>\r\n                        <div className=\"chart-area\">\r\n                            {/* <DepotPieChart \r\n                                depot_expand={this.props.depot_expand}\r\n                                update_dashboard_depot_year={this.props.update_depot_customer_year}\r\n                                update_dashboard_depot_month={this.props.update_depot_customer_month}\r\n                                dashboard_metric={this.props.dashboard_metric}\r\n                                update_depot_index={this.props.update_depot_index}\r\n                            /> */}\r\n\r\n                                \r\n\r\n                             <DepotProductChart\r\n                                depot_expand_main_daily={this.props.depot_expand_main_daily}\r\n                                selection_dates={this.props.selection_dates}\r\n                                dashboard_metric={this.props.dashboard_metric}\r\n                                update_depot_index={this.props.update_depot_index}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs={5}>\r\n                        <div className='chart-area'>\r\n                            <Depot_customers />\r\n                            <DepotCustomers\r\n                                depot_expand_customers={this.props.depot_expand_customers}\r\n                                update_depot_index={this.props.update_depot_index}\r\n                                update_depot_customer_month={this.props.update_depot_customer_month}\r\n                                update_depot_customer_year = {this.props.update_depot_customer_year}\r\n                                dashboard_metric={this.props.dashboard_metric}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                       \r\n                    </Col>\r\n                </Row>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    //   selection_dates: state.list_reducer.selection_dates,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    UPDATE_SELECTION_DATE_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ChartSection);","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\"\r\n\r\nclass DepotPieChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        series: this.props.data.values,\r\n        options: {\r\n          chart: {\r\n            width: 180,\r\n            type: 'donut',\r\n          },\r\n          labels: this.props.data.labels,\r\n          plotOptions: {\r\n            pie: {\r\n              startAngle: -90,\r\n              endAngle: 270\r\n            }\r\n          },\r\n          dataLabels: {\r\n            enabled: true\r\n          },\r\n          fill: {\r\n            type: 'gradient',\r\n          },\r\n          \r\n          title: {\r\n            text: this.props.dashboard_metric ? 'Depots Comparison by Revenue' : 'Depots Comparison by Quantity'\r\n          },\r\n          responsive: [{\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 200,\r\n              },\r\n             \r\n            }\r\n          }]\r\n        },\r\n      \r\n      \r\n      };\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        let depot_expand = nextProps.depot_expand\r\n        let labels = []\r\n        let values = []\r\n        let year = parseInt(nextProps.update_dashboard_depot_year)\r\n        let month = parseInt(nextProps.update_dashboard_depot_month)\r\n   \r\n        for(let i=0; i<depot_expand.length; i++){\r\n          let depot = depot_expand[i]\r\n          labels.push(depot.name)\r\n\r\n          depot = nextProps.dashboard_metric ? depot.revenue_monthly: depot.quantity_monthly\r\n          \r\n          values.push(this.mapData(depot, year, month))\r\n        }\r\n\r\n        this.setState(prevState => ({\r\n          series:values,\r\n          options: {\r\n            ...prevState.options,\r\n            labels:labels,\r\n            title: {\r\n              ...prevState.options.title,\r\n              text: nextProps.dashboard_metric ? 'Depots Comparison by Revenue' : 'Depots Comparison by Quantity'\r\n            }\r\n          }\r\n        }))\r\n        \r\n      }\r\n\r\n    mapData = (data, year, month=13) => {\r\n\r\n      \r\n      let result = data.filter(obj => {\r\n        return obj.year === year\r\n      })\r\n\r\n      data = result[0].data\r\n\r\n      let months = [0,0,0,0,0,0,0,0,0,0,0,0]\r\n      let total = 0\r\n\r\n      for(let i=0; i<data.length; i++){\r\n        \r\n        let month_value = data[i]\r\n        \r\n        \r\n        months[month_value.month-1] = month_value.total\r\n        total = total + month_value.total\r\n        \r\n      }\r\n\r\n      if(month === 13){\r\n        return total\r\n      }else{\r\n        \r\n        return months[month]\r\n      }\r\n    }\r\n\r\n    componentDidMount = async() => {\r\n      let depot_expand = this.props.depot_expand\r\n      let labels = []\r\n      let values = []\r\n      let year = parseInt(this.props.update_dashboard_depot_year)\r\n      let month = parseInt(this.props.update_dashboard_depot_month)\r\n      let depot = depot_expand[parseInt(this.props.update_depot_index)]\r\n      if(month === 13){\r\n          let data =  this.props.dashboard_metric ? depot.revenue_monthly : depot.quantity_monthly\r\n          values.push(this.mapData(depot, year, month))\r\n      }\r\n      for(let i=0; i<depot_expand.length; i++){\r\n        let depot = depot_expand[i]\r\n        labels.push(depot.name)\r\n\r\n        depot = this.props.dashboard_metric ? depot.revenue_monthly: depot.quantity_monthly\r\n        values.push(this.mapData(depot, year, month))\r\n      }\r\n\r\n      this.setState(prevState => ({\r\n        series:values,\r\n        options: {\r\n          ...prevState.options,\r\n          labels:labels\r\n        }\r\n      }))\r\n    }\r\n    render() {\r\n      const sum = this.state.series.reduce((partialSum, a) => partialSum + a, 0);\r\n      return (\r\n        \r\n        <div id=\"chart\">\r\n            {sum === 0 ? <p className=\"no-data\">No data for this year this month. Select another month or switch years</p>:<ReactApexChart options={this.state.options} series={this.state.series} type=\"donut\" width={400} />}\r\n        </div>\r\n    \r\n\r\n\r\n      );\r\n    }\r\n  }\r\n  export default DepotPieChart;","import React from 'react';\r\nimport {Form, Row, Col, Button, Alert} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport {Triangle} from \"react-loader-spinner\"\r\n\r\nimport { CREATE_ENTRY_ACTION, ENTRY_LIST_ACTION } from '../../redux/actions/actions';\r\nimport '../../themes/theme1/home.css'\r\n\r\nclass UploadForm extends React.Component {\r\n    state = {\r\n        product: null,\r\n        truck: null,\r\n        entry_no: \"\",\r\n        order_no: \"\",\r\n        date: new Date(),\r\n        vol_obs: null,\r\n        vol_20: null,\r\n        selling_price: null,\r\n        trucks: [],\r\n        products: [],\r\n\r\n        spinner:false,\r\n        success: false,\r\n        null_error: false,\r\n    }\r\n\r\n    customerSelect = (idx) => {\r\n        let customer = this.props.depots[idx]\r\n        this.setState({trucks: customer.customers, products:customer.products})\r\n    }\r\n\r\n    componentWillReceiveProps = async(nextProps) => {\r\n        \r\n        if (nextProps.created_entry.entry_no === this.state.entry_no) {\r\n            await this.props.ENTRY_LIST_ACTION()\r\n            this.setState({spinner:false, success:true})\r\n        }else{\r\n            this.setState({spinner: false})\r\n        }\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const {product, truck, entry_no, order_no, date, vol_obs, vol_20, selling_price} = this.state\r\n        \r\n        let items = [product, truck, entry_no, order_no, date, vol_obs, vol_20, selling_price]\r\n        let null_error = false\r\n        for(let i=0; i<items.length; i++){\r\n            if(items[i] === null || items[i] === \"\" || items[i] === undefined){\r\n                null_error = true\r\n            }\r\n        }\r\n\r\n        if(null_error){\r\n            this.setState({null_error:true})\r\n        }else{\r\n            this.setState({spinner:true})\r\n            await this.props.CREATE_ENTRY_ACTION(product, truck, entry_no, order_no, date, vol_obs, vol_20, selling_price)\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        const {date, trucks, products} = this.state\r\n        const {depots} = this.props\r\n\r\n        return (\r\n            <div className='upload-form'>\r\n\r\n                {/* SPINNER */}\r\n                {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: null}\r\n\r\n                    {/* FORM */}\r\n                <h4 className='upload-title'>Fill the information</h4>\r\n\r\n                 {/* If successful */}\r\n                 {this.state.success ?\r\n                <Alert variant={\"success\"} size=\"sm\">\r\n                    Entry Created successful\r\n                </Alert>: null}\r\n\r\n                {/* Null error */}\r\n                {this.state.null_error ?\r\n                <Alert variant={\"danger\"} size=\"sm\">\r\n                    All the fields must be field\r\n                </Alert>: null}\r\n                \r\n                {/* IF errors */}\r\n                {this.state.show_errors ?\r\n                    Object.keys(this.props.error).map((key, idx) => \r\n                        <Alert key={idx} variant=\"danger\">{key}: {this.props.create_customer_error[key][0]}</Alert>\r\n                    )\r\n                : null}\r\n\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Date</Form.Label>\r\n                        <Form.Control type=\"date\" placeholder=\"Date\" size='sm' value={date} onChange={(e)=>this.setState({date:e.target.value})}/>\r\n                    </Form.Group>\r\n                    \r\n                    <Row style={{marginTop:0, height:'auto'}}>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Depot</Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.customerSelect(e.target.value)}>\r\n                                    <option>Select</option>\r\n                                    {depots.map((depot, idx) => \r\n                                        <option value={idx}>{depot.name}</option>\r\n                                    )}\r\n                                    \r\n                                    \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Customer</Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.setState({truck:e.target.value})}>\r\n                                    <option>Select</option>\r\n                                    {trucks.map((truck) => \r\n                                        <option value={truck.id}>{truck.name}</option>\r\n                                    )}\r\n                                    \r\n                                    \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Product</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.setState({product:e.target.value})}>\r\n                            <option>Select</option>\r\n                            {products.map((product) => \r\n                                <option value={product.id}>{product.name}</option>\r\n                            )}\r\n                            \r\n                            \r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <h6 className='upload-form-details'>Details</h6>\r\n\r\n                    \r\n\r\n                    <Row style={{marginTop:0, height:'auto'}}>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Order No</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' onChange={(e)=>this.setState({order_no:e.target.value})}/>\r\n                            </Form.Group>\r\n                            \r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Entry no</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' onChange={(e)=>this.setState({entry_no:e.target.value})}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row style={{marginTop:0, height:'auto'}}>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Vol OBS</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' onChange={(e)=>this.setState({vol_obs:e.target.value})}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Vol@20</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' onChange={(e)=>this.setState({vol_20:e.target.value})}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Selling Price</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' onChange={(e)=>this.setState({selling_price:e.target.value})}/>\r\n                    </Form.Group>\r\n                    <div align='center'>\r\n                    <Button variant='primary' type='submit'>Upload</Button>\r\n                    </div>\r\n                    \r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      created_entry: state.create_reducer.created_entry,\r\n      error: (state.create_reducer.create_entry_error ? state.create_reducer.create_entry_error: null),\r\n      depots: (state.list_reducer.depot_customer_list ? state.list_reducer.depot_customer_list: []),\r\n      products: (state.list_reducer.products ? state.list_reducer.products: []),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    CREATE_ENTRY_ACTION,\r\n    ENTRY_LIST_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(UploadForm);\r\n  ","import React from 'react';\r\nimport {Form, Button, Alert} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport {Triangle} from \"react-loader-spinner\"\r\nimport { CREATE_CUSTOMER_ACTION, CUSTOMER_LIST_ACTION } from '../../redux/actions/actions';\r\nimport '../../themes/theme1/home.css'\r\n\r\nclass CustomerUpload extends React.Component {\r\n    state = {\r\n        name:\"\",\r\n        location:\"\",\r\n        depot: null,\r\n        spinner: false,\r\n        success: false,\r\n        null_error: false,\r\n        show_errors: false,\r\n    }\r\n\r\n    componentWillReceiveProps = async(nextProps) => {\r\n        if(nextProps.create_customer_error){\r\n            this.setState({show_errors:true, spinner:false})\r\n        }\r\n        else if (nextProps.created_customer.name === this.state.name) {\r\n            await this.props.CUSTOMER_LIST_ACTION()\r\n            this.setState({spinner:false, success:true, name:\"\", location:\"\"})\r\n        }else{\r\n            this.setState({spinner: false})\r\n        }\r\n    }\r\n    onSubmit =async (event)=>{\r\n        event.preventDefault()\r\n        \r\n        const {name, location, depot} = this.state\r\n        \r\n        if(name === \"\" || location === \"\" || depot === null){\r\n            this.setState({null_error: true})\r\n        }else{\r\n            this.setState({spinner:true})\r\n            await this.props.CREATE_CUSTOMER_ACTION(name, location, depot)\r\n        }\r\n      \r\n    }\r\n\r\n    \r\n    render(){\r\n        return (\r\n            <div className='upload-form'>\r\n                 {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: null}\r\n                <h4>Customer information</h4>\r\n\r\n                {/* If successful */}\r\n                {this.state.success ?\r\n                <Alert variant={\"success\"} size=\"sm\">\r\n                    Customer created successful\r\n                </Alert>: null}\r\n                \r\n                {/* IF null error */}\r\n                {this.state.null_error ?\r\n                <Alert variant={\"danger\"} size=\"sm\">\r\n                    The fields cannot be empty\r\n                </Alert>: null}\r\n\r\n                {/* IF errors */}\r\n                {this.state.show_errors ?\r\n                    Object.keys(this.props.error).map((key, idx) => \r\n                        <Alert key={idx} variant=\"danger\">{key}: {this.props.create_customer_error[key][0]}</Alert>\r\n                    )\r\n                : null}\r\n\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Depot</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.setState({depot:e.target.value})}>\r\n                            <option>Select</option>\r\n                            {this.props.depot_list.map((depot) => \r\n                                <option value={depot.id}>{depot.name}</option>\r\n                            )}\r\n                            \r\n                            \r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Customer name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Name\" size='sm' value={this.state.name} \r\n                            onChange={(e)=>this.setState({name:e.target.value, success:false, null_error:false, show_errors:false})}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Location</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Name\" size='sm' value={this.state.location} \r\n                        onChange={(e) => this.setState({location: e.target.value, success:false, null_error:false, show_errors:false})}/>\r\n\r\n                    </Form.Group>\r\n\r\n                    <div>\r\n                    <Button variant='primary' type='submit' size='sm'>Add</Button>\r\n                    </div>\r\n                    \r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      created_customer: state.create_reducer.created_customer,\r\n      depot_list: state.list_reducer.depot_list,\r\n      error: (state.create_reducer.create_customer_error ? state.create_reducer.create_customer_error: null),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    CREATE_CUSTOMER_ACTION,\r\n    CUSTOMER_LIST_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomerUpload);\r\n  ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Form, Alert, Button} from 'react-bootstrap'\r\nimport {Triangle} from \"react-loader-spinner\"\r\n\r\nimport {UPLOAD_EXCEL_ACTION, BI_LIST_ACTION} from \"../../redux/actions/actions\"\r\n\r\nclass UploadExcel extends React.Component {\r\n\r\n    state = {\r\n        file: null,\r\n        spinner: false,\r\n        success: false,\r\n        show_error: false,\r\n        null_error: false,\r\n        depot: null,\r\n    }\r\n\r\n    componentWillReceiveProps = async(nextProps) => {\r\n        if(nextProps.upload_excel_error){\r\n            this.setState({show_error:true, spinner:false})\r\n        }else{\r\n            await this.props.BI_LIST_ACTION()\r\n            this.setState({spinner:false, success:true})\r\n        }\r\n        \r\n    }\r\n\r\n    onSubmit =async (event)=>{\r\n        event.preventDefault()\r\n        const {file, depot} = this.state\r\n        if(file === null || depot === null){\r\n            this.setState({null_error:true})\r\n        }else{\r\n            this.setState({spinner:true})\r\n            await this.props.UPLOAD_EXCEL_ACTION(file, depot)\r\n        }\r\n       \r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className='upload-form'>\r\n                 {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: null}\r\n                <h5>Upload File</h5>\r\n\r\n                {/* If successful */}\r\n                {this.state.success ?\r\n                <Alert variant={\"success\"} size=\"sm\">\r\n                    File Uploaded successful\r\n                </Alert>: null}\r\n\r\n                {/* If error */}\r\n                {this.state.show_error ?\r\n                <Alert variant={\"danger\"} size=\"sm\">\r\n                    {this.props.upload_excel_error.message}\r\n                </Alert>: null}\r\n                \r\n                {/* If null */}\r\n                {this.state.null_error ?\r\n                <Alert variant={\"danger\"} size=\"sm\">\r\n                    All the field must be filled\r\n                </Alert>: null}\r\n\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Depot</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.setState({depot:e.target.value})}>\r\n                            <option>Select</option>\r\n                            {this.props.depot_list.map((depot) => \r\n                                <option value={depot.id}>{depot.name}</option>\r\n                            )}\r\n                            \r\n                            \r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>File</Form.Label>\r\n                        <Form.Control \r\n                            type=\"file\" \r\n                            accept=\".xlsx, .xls, .csv\" \r\n                            placeholder=\"File\" \r\n                            size='sm' \r\n                            onChange={(e) => this.setState({file:e.target.files[0]})}\r\n                        />\r\n                    </Form.Group>\r\n                    \r\n                    <div>\r\n                        <Button \r\n                            variant='primary' \r\n                            type='submit' \r\n                            \r\n                            value={this.state.file} \r\n                            size='sm' \r\n                            >\r\n                                Upload\r\n                            </Button>\r\n                    </div>\r\n                        \r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      uploaded_excel: state.create_reducer.uploaded_excel,\r\n      upload_excel_error: state.create_reducer.upload_excel_error,\r\n      depot_list: state.list_reducer.depot_list,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    UPLOAD_EXCEL_ACTION,\r\n    BI_LIST_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(UploadExcel);\r\n  ","import React from 'react';\r\nimport {Form, Button, Alert} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport {Triangle} from \"react-loader-spinner\"\r\nimport { CREATE_CUSTOMER_ACTION, CUSTOMER_LIST_ACTION } from '../../redux/actions/actions';\r\nimport '../../themes/theme1/home.css'\r\n\r\nclass CustomerUpload extends React.Component {\r\n    state = {\r\n        name:\"\",\r\n        location:\"\",\r\n        depot: null,\r\n        spinner: false,\r\n        success: false,\r\n        null_error: false,\r\n        show_errors: false,\r\n    }\r\n\r\n    componentWillReceiveProps = async(nextProps) => {\r\n        if(nextProps.create_customer_error){\r\n            this.setState({show_errors:true, spinner:false})\r\n        }\r\n        else if (nextProps.created_customer.name === this.state.name) {\r\n            await this.props.CUSTOMER_LIST_ACTION()\r\n            this.setState({spinner:false, success:true, name:\"\", location:\"\"})\r\n        }else{\r\n            this.setState({spinner: false})\r\n        }\r\n    }\r\n    onSubmit =async (event)=>{\r\n        event.preventDefault()\r\n        \r\n        const {depot} = this.state\r\n        \r\n        window.open(`https://opl.azurewebsites.net/depots/download/${parseInt(depot)}`, \"_blank\")\r\n      \r\n    }\r\n\r\n    \r\n    render(){\r\n        return (\r\n            <div className='upload-form'>\r\n                 {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: null}\r\n                <h4>Customer information</h4>\r\n\r\n                {/* If successful */}\r\n                {this.state.success ?\r\n                <Alert variant={\"success\"} size=\"sm\">\r\n                    Customer created successful\r\n                </Alert>: null}\r\n                \r\n                {/* IF null error */}\r\n                {this.state.null_error ?\r\n                <Alert variant={\"danger\"} size=\"sm\">\r\n                    The fields cannot be empty\r\n                </Alert>: null}\r\n\r\n                {/* IF errors */}\r\n                {this.state.show_errors ?\r\n                    Object.keys(this.props.error).map((key, idx) => \r\n                        <Alert key={idx} variant=\"danger\">{key}: {this.props.create_customer_error[key][0]}</Alert>\r\n                    )\r\n                : null}\r\n\r\n                    \r\n\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Depot</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.setState({depot:e.target.value})}>\r\n                            <option>Select</option>\r\n                            {this.props.depot_list.map((depot) => \r\n                                <option value={depot.id}>{depot.name}</option>\r\n                            )}\r\n                            \r\n                            \r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    \r\n\r\n                    <div>\r\n                    <Button variant='primary' type='submit' size='sm'>Download</Button>\r\n                    </div>\r\n                    \r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      created_customer: state.create_reducer.created_customer,\r\n      depot_list: state.list_reducer.depot_list,\r\n      error: (state.create_reducer.create_customer_error ? state.create_reducer.create_customer_error: null),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    CREATE_CUSTOMER_ACTION,\r\n    CUSTOMER_LIST_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomerUpload);\r\n  ","import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport { connect } from 'react-redux';\r\nimport { MdOutlineAddCircle, MdCalendarToday, MdKeyboardArrowDown, MdCloudDownload, MdOpacity} from \"react-icons/md\";\r\nimport { SiMicrosoftexcel} from \"react-icons/si\";\r\nimport { GiMoneyStack} from \"react-icons/gi\";\r\n\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport {Button, Form} from 'react-bootstrap'\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport '../../themes/theme1/home.css'\r\nimport 'reactjs-popup/dist/index.css';\r\nimport { UPDATE_SELECTION_DATE_ACTION, UPDATE_METRIC_ACTION} from '../../redux/actions/actions';\r\nimport UploadForm from './upload_form';\r\nimport CustomerUpload from './customer-upload';\r\n\r\nimport UploadExcel from './upload_excel';\r\nimport Download from './download';\r\n\r\nclass MyComponent extends React.Component {\r\n    state = {\r\n        startDate: this.props.selection_dates.startDate,\r\n        endDate: this.props.selection_dates.endDate,\r\n        key: 'selection', \r\n        dashboard_metric: this.props.dashboard_metric,\r\n      }\r\n\r\n    handleMetricChange = async (value) => {\r\n        if(value === \"revenue\"){\r\n            await this.props.UPDATE_METRIC_ACTION(true)\r\n        }else{\r\n            await this.props.UPDATE_METRIC_ACTION(false)\r\n        }\r\n\r\n    }\r\n  handleSelect = async (ranges) => {\r\n    \r\n    this.setState({\r\n        startDate:ranges.selection.startDate,\r\n        endDate: ranges.selection.endDate\r\n    })\r\n    \r\n    await this.props.UPDATE_SELECTION_DATE_ACTION({\r\n        startDate:ranges.selection.startDate,\r\n        endDate: ranges.selection.endDate\r\n    })\r\n  }\r\n\r\n  componentWillReceiveProps = (nextProps) => {\r\n      this.setState({\r\n          startDate:nextProps.selection_dates.startDate, \r\n          endDate:nextProps.selection_dates.endDate,\r\n          dashboard_metric: nextProps.dashboard_metric\r\n        })\r\n  }\r\n  render(){\r\n    \r\n    return (\r\n        <div className='inputs'>\r\n            <div className='buttons'>\r\n                <Popup trigger={\r\n                    <Button className='input-dates' size='sm'>\r\n                        <div className='input-display'>\r\n                            <span><MdCalendarToday color='#D04D30' size={18}/></span>\r\n                            {this.state.startDate.toDateString()} - {this.state.endDate.toDateString()}\r\n                            <span>\r\n                                <MdKeyboardArrowDown size={18}/>\r\n                            </span>\r\n                        </div>\r\n                        \r\n                    </Button>\r\n                } \r\n                    position=\"bottom\"\r\n                >\r\n                <DateRangePicker\r\n                    onChange={this.handleSelect}\r\n                    showSelectionPreview={true}\r\n                    moveRangeOnFirstSelection={false}\r\n                    months={2}\r\n                    ranges={[this.state]}\r\n                    direction=\"horizontal\"\r\n                    preventSnapRefocus={true}\r\n                    calendarFocus=\"backwards\"\r\n                    className='date-range'\r\n                />\r\n                </Popup>\r\n                <div className='metrics'>\r\n                    <Button \r\n                        variant={this.state.dashboard_metric ? \"info\": \"secondary\"}  \r\n                        size='sm' \r\n                        className='add-button-metric' \r\n                        style={{color:\"black\"}}\r\n                        onClick={()=> this.handleMetricChange(\"revenue\")}\r\n                    >\r\n                        <GiMoneyStack color=\"green\" size={20}/> \r\n                        Revenue \r\n                    </Button>\r\n                    <Button \r\n                        variant={this.state.dashboard_metric === false ? \"info\": \"secondary\"} \r\n                        size='sm' \r\n                        className='add-button-metric' \r\n                        style={{color:\"black\"}}\r\n                        onClick={()=> this.handleMetricChange(\"quantities\")}\r\n                    >\r\n                        <MdOpacity color=\"orange\" size={20}/> \r\n                        Quantities \r\n                    </Button>\r\n                </div>\r\n                <div className='form'>\r\n                <Popup \r\n                contentStyle={{width:300}}\r\n                trigger={\r\n                    <Button \r\n                        variant=\"secondary\" \r\n                        size='sm' \r\n                        className='add-button' \r\n                        style={{color:\"black\"}}\r\n                    >\r\n                        <MdCloudDownload color=\"green\" size={20}/> \r\n                        Template \r\n                    </Button>\r\n                } \r\n                    position=\"bottom\"\r\n                >\r\n                    <Download />\r\n                </Popup>\r\n                    \r\n                    <Popup \r\n                        contentStyle={{width:300}}\r\n                        trigger={\r\n                        <Button variant=\"secondary\" size='sm' className='add-button' style={{color:\"black\"}}>\r\n                            <SiMicrosoftexcel color=\"green\" size={20}/> \r\n                              Upload \r\n                        </Button>\r\n                        } \r\n                        position=\"bottom center\"\r\n                        \r\n                    >\r\n                        <UploadExcel />\r\n                        \r\n                    </Popup>\r\n\r\n                    <Popup \r\n                        contentStyle={{width:300}}\r\n                        trigger={\r\n                        <Button variant=\"info\" size='sm' className='add-button'>\r\n                            <MdOutlineAddCircle color=\"#e9e7ec\" size={20}/> \r\n                            Customer\r\n                        </Button>\r\n                        } \r\n                        position=\"bottom center\"\r\n                        \r\n                    >\r\n                        <CustomerUpload />\r\n                        \r\n                    </Popup>\r\n                    {/* <Popup \r\n                        contentStyle={{width:300}}\r\n                        trigger={\r\n                        <Button variant=\"warning\" size='sm' className='add-button'>\r\n                            <MdOutlineAddCircle color=\"#e9e7ec\" size={20}/> \r\n                            Truck\r\n                        </Button>\r\n                        } \r\n                        position=\"bottom center\"\r\n                        \r\n                    >\r\n                        <TruckUpload />\r\n                        \r\n                    </Popup> */}\r\n                    <Popup \r\n                        contentStyle={{width:500, minHeight:400}}\r\n                        trigger={\r\n                        <Button variant=\"primary\" size='sm' className='add-button'>\r\n                            <MdOutlineAddCircle color=\"#e9e7ec\" size={20}/> \r\n                            Add Order\r\n                        </Button>\r\n                        } \r\n                        position=\"left top\"\r\n                        \r\n                    >\r\n                        <UploadForm />\r\n                        \r\n                    </Popup>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n        \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n      selection_dates: state.list_reducer.selection_dates,\r\n      dashboard_metric: state.list_reducer.dashboard_metric,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    UPDATE_SELECTION_DATE_ACTION,\r\n    UPDATE_METRIC_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(MyComponent);","import React from 'react';\r\n\r\nimport {Alert} from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Triangle } from 'react-loader-spinner';\r\n\r\nimport { \r\n    DEPOT_EXPAND_ACTION, \r\n    DEPOT_TIME_SERIES_ACTION,\r\n    DEPOT_LIST_ACTION,\r\n} from '../../redux/actions/actions';\r\nimport Layout from '../layout';\r\nimport ChartSection from './chart_section';\r\nimport InputSection from '../home/input-section'\r\n\r\n\r\n\r\nclass DepotsPage extends React.Component {\r\n    state = {\r\n        redirect:false,\r\n        spinner: false,\r\n        didnt_load: false,\r\n        \r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        \r\n        if (nextProps.depot_expand_daily){\r\n            \r\n            this.setState({spinner:false, didnt_load:false})\r\n        }else{\r\n            this.setState({spinner:false, didnt_load:true})\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    componentWillMount = async() => {\r\n        const token = this.props.token\r\n        if(token === undefined || token===\"\"){\r\n            this.setState({redirect:true})  \r\n        }  \r\n        // }else {\r\n        //     this.setState({spinner:true})\r\n        //     await this.props.DEPOT_TIME_SERIES_ACTION()\r\n        // }\r\n\r\n        await this.props.DEPOT_LIST_ACTION()\r\n    }\r\n    render(){\r\n        if(this.state.redirect){\r\n            return <Redirect to={\"/login\"} />\r\n        }\r\n        console.log(this.props.depot_expand_daily)\r\n        return (\r\n            <Layout headerTitle={\"DEPOTS\"}>\r\n            {this.props.token.is_staff === false ? <InputSection depot_id={1} /> : null}\r\n            {this.state.didnt_load ? \r\n                <div>\r\n                    <Alert variant={\"info\"} size=\"sm\">\r\n                        Nothing to show now. Until data is uploaded\r\n                    </Alert>\r\n                </div>\r\n            :\r\n            <div>\r\n                {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: \r\n                    <div>\r\n                        <ChartSection\r\n                            token = {this.props.token}\r\n                            depot_expand_daily={this.props.depot_expand_daily}\r\n                            depot_expand_customers={this.props.depot_expand_customers}\r\n                            depot_expand_main_daily={this.props.depot_expand_main_daily}\r\n                            depot_time_series={this.props.depot_time_series}\r\n                            update_depot_time_series_month={this.props.update_depot_time_series_month}\r\n                            update_depot_time_series_year={this.props.update_depot_time_series_year}\r\n                            dashboard_metric={this.props.dashboard_metric}\r\n                            selection_dates={this.props.selection_dates}\r\n                            update_depot_index={this.props.update_depot_index}\r\n                            update_depot_customer_month={this.props.update_depot_customer_month}\r\n                            update_depot_customer_year = {this.props.update_depot_customer_year}\r\n                        />\r\n                        \r\n                    </div>\r\n                }\r\n \r\n            </div>}\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      token: state.auth_reducer.token,\r\n      depot_expand_daily: (state.list_reducer.depot_expand_daily ? state.list_reducer.depot_expand_daily: []),\r\n      depot_expand_customers: (state.list_reducer.depot_expand_customers ? state.list_reducer.depot_expand_customers: []),\r\n      depot_expand_main_daily: (state.list_reducer.depot_expand_main_daily ? state.list_reducer.depot_expand_main_daily: []),\r\n      depot_time_series: (state.list_reducer.depot_time_series ? state.list_reducer.depot_time_series: {}),\r\n      update_depot_time_series_year: state.update_reducer.update_depot_time_series_year,\r\n      update_depot_time_series_month: state.update_reducer.update_depot_time_series_month,\r\n      update_depot_index: parseInt(state.update_reducer.update_depot_index),\r\n      update_depot_customer_year: state.update_reducer.update_depot_customer_year,\r\n      update_depot_customer_month: state.update_reducer.update_depot_customer_month,\r\n\r\n      depot_list: state.list_reducer.depot_list,\r\n      dashboard_metric: state.list_reducer.dashboard_metric,\r\n      selection_dates: state.list_reducer.selection_dates,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    DEPOT_EXPAND_ACTION,\r\n    DEPOT_TIME_SERIES_ACTION,\r\n    DEPOT_LIST_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(DepotsPage);\r\n  ","import React from \"react\";\r\nimport {Form} from \"react-bootstrap\"\r\nimport {connect} from \"react-redux\"\r\nimport {UPDATE_DASHBOARD_PRODUCT_MONTHLY_ACTION} from \"../../redux/actions/actions\"\r\n\r\nclass YearSelect extends React.Component {\r\n    state = {\r\n        year:this.props.update_dashboard_year_product_monthly\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.setState({year:nextProps.update_dashboard_year_product_monthly})\r\n    }\r\n\r\n    handleYearChange = async(year) => {\r\n        await this.props.UPDATE_DASHBOARD_PRODUCT_MONTHLY_ACTION(year)\r\n    }\r\n    render (){\r\n        const years = [2022, 2021]\r\n        \r\n        return (\r\n            <div>\r\n                <Form.Group className=\"mb-4 year-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Year</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleYearChange(e.target.value)}>\r\n                            <option>{this.state.year}</option>\r\n                            {years.map((year) => \r\n                                this.state.year === year ? null : <option value={year}>{year}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      update_dashboard_year_product_monthly: state.update_reducer.update_dashboard_year_product_monthly,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    UPDATE_DASHBOARD_PRODUCT_MONTHLY_ACTION\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(YearSelect);\r\n  ","import React from \"react\";\r\nimport {Form} from \"react-bootstrap\"\r\nimport {connect} from \"react-redux\"\r\nimport {UPDATE_DASHBOARD_DEPOT_MONTH_ACTION, UPDATE_DASHBOARD_DEPOT_YEAR_ACTION} from \"../../redux/actions/actions\"\r\n\r\n\r\nclass PieSelect extends React.Component {\r\n    state = {\r\n        year:this.props.update_dashboard_depot_year,\r\n        month: this.props.update_dashboard_depot_month,\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        \r\n        this.setState({year:nextProps.update_dashboard_depot_year, month:nextProps.update_dashboard_depot_month})\r\n    }\r\n\r\n    handleYearChange = async(year) => {\r\n        await this.props.UPDATE_DASHBOARD_DEPOT_YEAR_ACTION(year)\r\n    }\r\n\r\n    handleMonthChange = async(month) => {\r\n       \r\n        await this.props.UPDATE_DASHBOARD_DEPOT_MONTH_ACTION(month)\r\n    }\r\n\r\n    render (){\r\n        const years = [2022, 2021]\r\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n        return (\r\n            <div className=\"pie-select-div\">\r\n                <Form.Group className=\"mb-4 pie-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Year</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleYearChange(e.target.value)}>\r\n                            <option>{this.state.year}</option>\r\n                            {years.map((year) => \r\n                                parseInt(this.state.year) === year ? null : <option value={year}>{year}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-4 pie-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Month</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleMonthChange(e.target.value)}>\r\n                            {parseInt(this.state.month) === 13 ? null: <option value={this.state.month}>{months[parseInt(this.state.month)]}</option>}\r\n                            <option value={13}>All</option>\r\n                            {months.map((month, idx) => \r\n                                parseInt(this.state.month) === idx? null : <option value={idx}>{month}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                </Form.Group>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      update_dashboard_depot_month: state.update_reducer.update_dashboard_depot_month,\r\n      update_dashboard_depot_year: state.update_reducer.update_dashboard_depot_year,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    UPDATE_DASHBOARD_DEPOT_MONTH_ACTION,\r\n    UPDATE_DASHBOARD_DEPOT_YEAR_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(PieSelect);\r\n  ","import React from \"react\"\r\nimport ReactApexChart from 'react-apexcharts'\r\n\r\nclass MonthlyBarChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const year = new Date().getFullYear();\r\n    this.state = {\r\n    \r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          type: 'bar',\r\n          height: 350\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: false,\r\n            columnWidth: '55%',\r\n            endingShape: 'rounded'\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        title: {\r\n          text: this.props.dashboard_metric ? `${year} Products Trends by Month's Revenue`: `${year} Products Trends by Month's Quantity`,\r\n          align: 'left'\r\n        },\r\n        stroke: {\r\n          show: true,\r\n          width: 2,\r\n          colors: ['transparent']\r\n        },\r\n        xaxis: {\r\n          categories: this.props.product_expand[0].quantity_monthly[0].months,\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: this.props.dashboard_metric ? \"Kshs (Millions)\": \"Litres\"\r\n          }\r\n        },\r\n        fill: {\r\n          opacity: 1\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: this.props.dashboard_metric ? function (val) {\r\n              return `Kshs ${val} Millions`\r\n            }: function (val) {\r\n              return `${val} Litres`\r\n            }\r\n          }\r\n        }\r\n      },\r\n    \r\n    \r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps = (nextProps) => {\r\n    const products = nextProps.product_expand\r\n    const year = nextProps.update_dashboard_year_product_monthly\r\n\r\n    let series = []\r\n   \r\n    for(let i=0; i < products.length; i++){\r\n      let product = products[i]\r\n      series = series.concat(\r\n          {\r\n            name: product.name,\r\n            data: nextProps.dashboard_metric ? this.mapData(product.revenue_monthly, year): this.mapData(product.quantity_monthly, year)\r\n          }\r\n      )\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      series:series,\r\n      options: {\r\n        ...prevState.options,\r\n        title: {\r\n          ...prevState.options.title,\r\n          text: nextProps.dashboard_metric ? `${year} Products Trends by Month's Revenue`: `${year} Products Trends by Month's Quantity`\r\n        },\r\n        yaxis: {\r\n          ...prevState.options.yaxis,\r\n          title: {\r\n            ...prevState.options.yaxis.title,\r\n            text: nextProps.dashboard_metric ? \"Kshs (Millions)\": \"Litres\"\r\n          }\r\n        },\r\n        tooltip:{\r\n          ...prevState.options.tooltip,\r\n          y: {\r\n            ...prevState.options.tooltip.y,\r\n            formatter: nextProps.dashboard_metric ? function (val) {\r\n              return `Kshs ${val} Millions`\r\n            }: function (val) {\r\n              return `${val} Litres`\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }))\r\n      \r\n    }\r\n\r\n\r\n  mapData = (data, year) => {\r\n    \r\n    let result = data.filter(obj => {\r\n      return obj.year === parseInt(year)\r\n    })\r\n    \r\n    let months = new Array(12).fill(0)\r\n    data =  result[0].data\r\n    for(const month in data){\r\n      let month_value = data[month]\r\n      months[month_value.month-1] = month_value.total\r\n    }\r\n    return months\r\n  }\r\n  componentDidMount = () => {\r\n    const products = this.props.product_expand\r\n    const year = this.props.update_dashboard_year_product_monthly\r\n\r\n    let series = []\r\n    \r\n    for(let i=0; i < products.length; i++){\r\n      let product = products[i]\r\n      \r\n      series = series.concat(\r\n          {\r\n            name: product.name,\r\n            data: this.props.dashboard_metric ? this.mapData(product.revenue_monthly, year): this.mapData(product.quantity_monthly, year)\r\n          }\r\n      )\r\n    }\r\n    console.log(series)\r\n    this.setState({series:series})\r\n    \r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n\r\n        <div id=\"chart\" style={{marginTop:20}}>\r\n          <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\r\n        </div>\r\n  \r\n\r\n      );\r\n    }\r\n  }\r\nexport default MonthlyBarChart;","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\"\r\n\r\nclass ComparisonChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        series: [],\r\n        options: {\r\n          chart: {\r\n            width: 180,\r\n            type: 'donut',\r\n          },\r\n          labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\r\n          plotOptions: {\r\n            pie: {\r\n              startAngle: -90,\r\n              endAngle: 270\r\n            }\r\n          },\r\n          dataLabels: {\r\n            enabled: true\r\n          },\r\n          fill: {\r\n            type: 'gradient',\r\n          },\r\n          tooltip: {\r\n            y: {\r\n              formatter: this.props.dashboard_metric ? function (val) {\r\n                return `Kshs ${val} Millions`\r\n              }: function (val) {\r\n                return `${val} Litres`\r\n              }\r\n            }\r\n          },\r\n          title: {\r\n            text: this.props.dashboard_metric ? 'Depots Comparison by Revenue' : 'Depots Comparison by Quantity'\r\n          },\r\n          responsive: [{\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 200,\r\n              },\r\n             \r\n            }\r\n          }]\r\n        },\r\n      \r\n      \r\n      };\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        let depot_expand = nextProps.depot_expand\r\n        let labels = []\r\n        let values = []\r\n        let year = parseInt(nextProps.update_dashboard_depot_year)\r\n        let month = parseInt(nextProps.update_dashboard_depot_month)\r\n   \r\n        for(let i=0; i<depot_expand.length; i++){\r\n          let depot = depot_expand[i]\r\n          labels.push(depot.name)\r\n\r\n          depot = nextProps.dashboard_metric ? depot.revenue_monthly: depot.quantity_monthly\r\n          \r\n          values.push(this.mapData(depot, year, month))\r\n        }\r\n\r\n        \r\n        this.setState(prevState => ({\r\n          series:values,\r\n          options: {\r\n            ...prevState.options,\r\n            labels:labels,\r\n            title: {\r\n              ...prevState.options.title,\r\n              text: nextProps.dashboard_metric ? 'Depots Comparison by Revenue' : 'Depots Comparison by Quantity'\r\n            },\r\n            tooltip: {\r\n              ...prevState.options.tooltip,\r\n              y: {\r\n                ...prevState.options.tooltip.y,\r\n                formatter: nextProps.dashboard_metric ? function (val) {\r\n                  return `Kshs ${val} Millions`\r\n                }: function (val) {\r\n                  return `${val} Litres`\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }))\r\n        \r\n      }\r\n\r\n    mapData = (data, year, month=13) => {\r\n\r\n      \r\n      let result = data.filter(obj => {\r\n        return obj.year === year\r\n      })\r\n\r\n      data = result[0].data\r\n\r\n      let months = [0,0,0,0,0,0,0,0,0,0,0,0]\r\n      let total = 0\r\n      console.log(result[0].total)\r\n      for(let i=0; i<data.length; i++){\r\n        \r\n        let month_value = data[i]\r\n        \r\n        \r\n        months[month_value.month-1] = month_value.total\r\n        total = total + month_value.total\r\n        \r\n      }\r\n\r\n      if(month === 13){\r\n        return result[0].total\r\n      }else{\r\n        \r\n        return months[month]\r\n      }\r\n    }\r\n\r\n    componentDidMount = async() => {\r\n      let depot_expand = this.props.depot_expand\r\n      let labels = []\r\n      let values = []\r\n      let year = parseInt(this.props.update_dashboard_depot_year)\r\n      let month = parseInt(this.props.update_dashboard_depot_month)\r\n\r\n      for(let i=0; i<depot_expand.length; i++){\r\n        let depot = depot_expand[i]\r\n        labels.push(depot.name)\r\n\r\n        depot = this.props.dashboard_metric ? depot.revenue_monthly: depot.quantity_monthly\r\n        values.push(this.mapData(depot, year, month))\r\n      }\r\n\r\n      this.setState(prevState => ({\r\n        series:values,\r\n        options: {\r\n          ...prevState.options,\r\n          labels:labels\r\n        }\r\n      }))\r\n    }\r\n    render() {\r\n      const sum = this.state.series.reduce((partialSum, a) => partialSum + a, 0);\r\n      return (\r\n        \r\n        <div id=\"chart\">\r\n            {sum === 0 ? <p className=\"no-data\">No data for this year this month. Select another month or switch years</p>:<ReactApexChart options={this.state.options} series={this.state.series} type=\"donut\" width={400} />}\r\n        </div>\r\n    \r\n\r\n\r\n      );\r\n    }\r\n  }\r\n  export default ComparisonChart;","import React from 'react'\r\n\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport ApexCharts from 'apexcharts';\r\nvar today = new Date(\"28 Feb 2022\")\r\nvar months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\nclass MainChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {\r\n      \r\n        series: [],\r\n        options: {\r\n          chart: {\r\n            id: 'area-datetime',\r\n            type: 'area',\r\n            height: 400,\r\n            zoom: {\r\n              autoScaleYaxis: true\r\n            }\r\n          },\r\n          title: {\r\n            text: this.props.dashboard_metric ? \"Revenue\":\"Quantities\"\r\n          },\r\n          annotations: {\r\n            \r\n            xaxis: [{\r\n              x: this.props.selection_dates.startDate.getTime(),\r\n              borderColor: '#999',\r\n              yAxisIndex: 0,\r\n             \r\n            }]\r\n          },\r\n          dataLabels: {\r\n            enabled: true\r\n          },\r\n          markers: {\r\n            size: 0,\r\n            style: 'hollow',\r\n          },\r\n          xaxis: {\r\n            type: 'datetime',\r\n            min: this.props.selection_dates.startDate.getTime(),\r\n            max: this.props.selection_dates.endDate.getTime(),\r\n            tickAmount: 5,\r\n          },\r\n          yaxis: {\r\n            title: {\r\n              text: 'Kshs (Millions)'\r\n            },\r\n            min: 0,\r\n          },\r\n          tooltip: {\r\n            y: {\r\n              formatter: this.props.dashboard_metric ? function (val) {\r\n                return `Kshs ${val} Millions`\r\n              }: function (val) {\r\n                return `${val} Litres`\r\n              }\r\n            }\r\n          },\r\n          // fill: {\r\n          //   type: 'gradient',\r\n          //   gradient: {\r\n          //     shadeIntensity: 1,\r\n          //     opacityFrom: 0.7,\r\n          //     opacityTo: 0.9,\r\n          //     stops: [0, 100]\r\n          //   }\r\n          // },\r\n        },\r\n      \r\n      \r\n        selection: 'one_month',\r\n      \r\n      };\r\n    }\r\n\r\n\r\n    addMonths = (date, months) => {\r\n      date.setMonth(date.getMonth() + months);\r\n      return date;\r\n    }\r\n\r\n    updateData(timeline) {\r\n      this.setState({\r\n        selection: timeline\r\n      })\r\n      const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\n      const month = new Date(`1 ${months[today.getMonth()]} ${today.getFullYear()}`)\r\n\r\n      let six_months = new Date(\"28 Feb 2022\")\r\n      six_months = this.addMonths(six_months, -6)\r\n\r\n      let year = new Date(\"28 Feb 2022\")\r\n      year = this.addMonths(year, -12)\r\n\r\n    }\r\n    \r\n    \r\n    mapData = (data, startDate=null, endDate=null) => {\r\n      \r\n      let values = []\r\n      let maxs = []\r\n      this.mapMax(data, startDate, endDate)\r\n      for(let i=0; i<data.length; i++){\r\n        if(isNaN(data[i].sum) === false && data){\r\n          let result = data.filter(obj => {\r\n            return obj.timestamp >= startDate && obj.timestamp <= endDate \r\n          })\r\n          maxs.push(this.mapMax(result))\r\n        }\r\n        \r\n        values.push([data[i].timestamp, data[i].sum])\r\n      }\r\n      \r\n      return [values, Math.max.apply(null, maxs)]\r\n    }\r\n\r\n    mapMax = (data) => {\r\n      let maxs = []\r\n      for(let i=0; i<data.length; i++){    \r\n        maxs.push(parseFloat(data[i].sum))\r\n      }\r\n      return Math.max.apply(null, maxs)\r\n    }\r\n\r\n    update = (props) => {\r\n      let data = props.product_expand\r\n      let series = []\r\n      let maxs = []\r\n      for(let i=0; i<data.length; i++){\r\n        let prod = props.dashboard_metric ? data[i].revenue_daily: data[i].quantity_daily\r\n        let d = this.mapData(prod, props.selection_dates.startDate.getTime(), props.selection_dates.endDate.getTime())\r\n        \r\n        maxs.push(d[1])\r\n        series = series.concat({\r\n          name:data[i].name,\r\n          data: d[0]\r\n        })\r\n      }\r\n\r\n      return [series, Math.max.apply(null, maxs)]\r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n      let data = this.update(nextProps)\r\n     \r\n      this.setState(prevState => ({\r\n        series:data[0],\r\n        options: {\r\n          ...prevState.options,\r\n          title: {\r\n            ...prevState.options.title,\r\n            text: nextProps.dashboard_metric ? \"Revenue\": \"Quantities\"\r\n          },\r\n          xaxis:{\r\n            ...prevState.options.xaxis,\r\n            min: nextProps.selection_dates.startDate.getTime(),\r\n            max: nextProps.selection_dates.endDate.getTime(),\r\n          },\r\n          yaxis: {\r\n            ...prevState.options.yaxis,\r\n            title: {\r\n              ...prevState.options.yaxis.title,\r\n              text: nextProps.dashboard_metric ? \"Kshs (Millions)\": \"Litres\"\r\n            },\r\n            max: data[1] + 1\r\n          },\r\n          tooltip: {\r\n            ...prevState.options.tooltip,\r\n            y: {\r\n              ...prevState.options.tooltip.y,\r\n              formatter: nextProps.dashboard_metric ? function (val) {\r\n                return `Kshs ${val} Millions`\r\n              }: function (val) {\r\n                return `${val} Litres`\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }))\r\n      \r\n      ApexCharts.exec(\r\n        'area-datetime',\r\n        'zoomX',\r\n        nextProps.selection_dates.startDate.getTime(),\r\n        nextProps.selection_dates.endDate.getTime(),\r\n        \r\n      )\r\n    }\r\n   \r\n    componentDidMount = () => {\r\n      let data = this.props.product_expand\r\n      \r\n      let series = []\r\n      let maxs = []\r\n      for(let i=0; i<data.length; i++){\r\n        let prod = this.props.dashboard_metric ? data[i].revenue_daily: data[i].quantity_daily\r\n        let d = this.mapData(prod)\r\n        maxs.push(d[1])\r\n        series = series.concat({\r\n          name:data[i].name,\r\n          data: d[0]\r\n        })\r\n      }\r\n      \r\n      this.setState({series:series, timeline:\"one_month\"})\r\n    }\r\n    render() {\r\n      \r\n      return (\r\n        <div id=\"chart\" className='chart-area'>\r\n           \r\n\r\n            <div id=\"chart-timeline\">\r\n              <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" height={400} />\r\n            </div>\r\n        </div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\nexport default MainChart","import React from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport YearSelect from '../common/year_select';\r\nimport PieSelect from '../common/pie_select';\r\nimport MonthlyBarChart from './chart1';\r\nimport ComparisonChart from './chart2';\r\nimport MainChart from './charts/main_chart';\r\n\r\nclass ChartsSection extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.my_ref = React.createRef()\r\n        this.state = {\r\n            data: {}\r\n        }\r\n    }\r\n    \r\n    \r\n    componentDidMount = async()=>{\r\n       \r\n    }\r\n    render(){\r\n        const product_expand_monthly = this.props.product_expand_monthly\r\n        const product_expand_daily = this.props.product_expand_daily\r\n        const depot_expand_monthly = this.props.depot_expand_monthly\r\n        return (\r\n            <div className='charts-section'>\r\n                <Row>\r\n                    <Col>\r\n                        <MainChart \r\n                            product_expand={product_expand_daily} \r\n                            dashboard_metric={this.props.dashboard_metric} \r\n                            selection_dates={this.props.selection_dates}\r\n                        />\r\n                    </Col>\r\n                    \r\n                </Row>\r\n                 <Row>\r\n                    <Col xs={7}>                 \r\n                        <div className='chart-area' style={{marginTop:20}}>\r\n                            <YearSelect />\r\n                            <MonthlyBarChart \r\n                                product_expand={product_expand_monthly} \r\n                                dashboard_metric={this.props.dashboard_metric}\r\n                                update_dashboard_year_product_monthly={this.props.update_dashboard_year_product_monthly}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs={5}>\r\n                        <div className='chart-area' style={{marginTop:20}}>\r\n                            <PieSelect />\r\n                            <ComparisonChart \r\n                                \r\n                                depot_expand={depot_expand_monthly} \r\n                                dashboard_metric={this.props.dashboard_metric}\r\n                                update_dashboard_depot_month = {this.props.update_dashboard_depot_month}\r\n                                update_dashboard_depot_year = {this.props.update_dashboard_depot_year}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default ChartsSection","import React from \"react\";\r\nimport {Form} from \"react-bootstrap\"\r\nimport {connect} from \"react-redux\"\r\nimport {\r\n    UPDATE_DASHBOARD_CUSTOMER_MONTH_ACTION, \r\n    UPDATE_DASHBOARD_CUSTOMER_YEAR_ACTION,\r\n    UPDATE_DASHBOARD_CUSTOMER_PRODUCT_ACTION,\r\n} from \"../../redux/actions/actions\"\r\n\r\n\r\nclass CustomerSelect extends React.Component {\r\n    state = {\r\n        year:this.props.update_dashboard_customer_year,\r\n        month: parseInt(this.props.update_dashboard_customer_month),\r\n        products: this.props.products,\r\n        product: this.props.update_dashboard_customer_product,\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        \r\n        this.setState({\r\n            year:nextProps.update_dashboard_customer_year, \r\n            month:parseInt(nextProps.update_dashboard_customer_month),\r\n            product: nextProps.update_dashboard_customer_product,\r\n            products: nextProps.products,\r\n        })\r\n    }\r\n\r\n    handleYearChange = async(year) => {\r\n        await this.props.UPDATE_DASHBOARD_CUSTOMER_YEAR_ACTION(year)\r\n    }\r\n\r\n    handleMonthChange = async(month) => {\r\n        await this.props.UPDATE_DASHBOARD_CUSTOMER_MONTH_ACTION(month)\r\n    }\r\n\r\n    handleProductChange = async(product) => {\r\n       \r\n        await this.props.UPDATE_DASHBOARD_CUSTOMER_PRODUCT_ACTION(product)\r\n    }\r\n\r\n    render (){\r\n        const years = [2022, 2021]\r\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n        const products = this.state.products\r\n        \r\n        return (\r\n            <div className=\"pie-select-div\">\r\n                <Form.Group className=\"mb-4 pie-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Year</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleYearChange(e.target.value)}>\r\n                            <option>{this.state.year}</option>\r\n                            {years.map((year) => \r\n                                parseInt(this.state.year) === year ? null : <option value={year}>{year}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-4 pie-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Month</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleMonthChange(e.target.value)}>\r\n                            \r\n                            {this.state.month === 13 ? null: <option value={this.state.month}>{months[parseInt(this.state.month)]}</option>}\r\n                            <option value={13}>All</option>\r\n\r\n                            {months.map((month, idx) => \r\n                                parseInt(this.state.month) === idx ? null : <option value={idx}>{month}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-4 pie-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Product</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleProductChange(e.target.value)}>\r\n                            <option>{this.state.product === \"All\" ? \"All\":this.state.product}</option>\r\n                            {this.state.product === \"All\" ? null: <option value={\"All\"}>All</option>}\r\n                            {products.map((product) => \r\n                                this.state.product === product.name ? null : <option value={product.name}>{product.name}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                </Form.Group>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      update_dashboard_customer_month: state.update_reducer.update_dashboard_customer_month,\r\n      update_dashboard_customer_year: state.update_reducer.update_dashboard_customer_year,\r\n      update_dashboard_customer_product: state.update_reducer.update_dashboard_customer_product,\r\n      products: state.list_reducer.products\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    UPDATE_DASHBOARD_CUSTOMER_MONTH_ACTION,\r\n    UPDATE_DASHBOARD_CUSTOMER_YEAR_ACTION,\r\n    UPDATE_DASHBOARD_CUSTOMER_PRODUCT_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomerSelect);\r\n  ","import React from 'react'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {MdTrendingDown, MdTrendingUp} from \"react-icons/md\"\r\nimport '../../themes/theme1/home.css'\r\nimport Customer_select from '../common/customer_select'\r\n\r\nclass Customers extends React.Component {\r\n    state = {\r\n        customers: [],\r\n        metric: this.props.metric,\r\n    }\r\n    numberWithCommas = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    update = (props) => {\r\n        let data_type = props.customer_expand_all.customers_rank\r\n        let data_month = null\r\n        let customers = [];\r\n        try{\r\n            data_month = props.customer_expand_month.customers_rank\r\n        }catch(e){\r\n            this.setState({no_data:true})\r\n        }\r\n\r\n        if(data_month === null){\r\n            \r\n        }else{\r\n            let result = data_type.filter(obj => {\r\n                return obj.year === parseInt(props.update_dashboard_customer_year)\r\n            })\r\n            let result2 = data_month.filter(obj => {\r\n                return obj.year === parseInt(props.update_dashboard_customer_year)\r\n            })\r\n            let data = result[0]\r\n            let data2 = result2[0]\r\n            if(parseInt(props.update_dashboard_customer_month) === 13){\r\n                \r\n                if(props.update_dashboard_customer_product === \"All\"){\r\n                    customers = props.dashboard_metric ? data.customers_revenue: data.customers_quantity\r\n                }else{\r\n                    result = data2.products.filter(obj => {\r\n                        return obj.name ===props.update_dashboard_customer_product\r\n                    })\r\n                    try{\r\n                        customers = props.dashboard_metric ? result[0].customers_revenue: result[0].customers_quantity\r\n                    }catch(e){\r\n                        customers = []\r\n                    }\r\n                }\r\n            }else{\r\n                customers = data2.months[parseInt(props.update_dashboard_customer_month)]\r\n                console.log(data2.months[0])\r\n                if(props.update_dashboard_customer_product === \"All\"){\r\n                    customers = props.dashboard_metric ? customers.customers_revenue :  customers.customers_quantity\r\n                }else{\r\n                    result = customers.products.filter(obj => {\r\n                        return obj.name ===props.update_dashboard_customer_product\r\n                    })\r\n                    try{\r\n                        customers = props.dashboard_metric ? result[0].customers_revenue: result[0].customers_quantity\r\n                    }catch(e){\r\n                        customers = []\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({customers:customers, metric:props.dashboard_metric})\r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.update(nextProps)\r\n    }\r\n    componentDidMount = () => {\r\n        this.update(this.props)\r\n    }\r\n    render(){\r\n        return (\r\n            <div className='chart-area'>\r\n                <Customer_select />\r\n                <div className='customer-top'>\r\n                    <h6 style={{marginLeft:20}}>Top Customers</h6>\r\n                    <div className='legends'>\r\n                        <div className='legend-item'>\r\n                            \r\n                        </div>\r\n\r\n                        <div className='legend-item'>\r\n                           \r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                \r\n                <Row className='customer-row'>\r\n                    {this.state.customers.slice(0, 8).map((customer, idx) => \r\n                    <Col key={idx} xs={3}>\r\n                        \r\n                            <div className='customer' >\r\n                                <div className='customer-total'>\r\n                                    <h5 className='customer-amount'>{this.state.metric ? \"Kshs.\": \"Litres.\"} {this.numberWithCommas(customer.amount)}</h5>\r\n                                    \r\n                                </div>\r\n                                <div className='customer-info'>\r\n                                    <div className='customer-profile'>\r\n                                        {customer.increase ? <MdTrendingUp size={30} color='green'/> : <MdTrendingDown size={30} color='red' />}\r\n                                    </div>\r\n                                    <div>\r\n                                        <h6 className='customer-name'>{customer.name}</h6>\r\n                                        <p className='customer-location'>{customer.location}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                        \r\n                    </Col>\r\n                    )}\r\n                    {this.state.customers.length === 0 ? <p className=\"no-data\">No data for this year this month. Select another month or switch years</p>: null}\r\n                </Row>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Customers","import React from 'react';\r\n\r\nimport {Alert} from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Triangle } from 'react-loader-spinner';\r\n\r\nimport { \r\n    BI_LIST_ACTION, \r\n    MAIN_BI_LIST_ACTION, \r\n    DEPOT_LIST_ACTION,\r\n    DEPOT_EXPAND_ACTION,\r\n    DEPOT_EXPAND_CUSTOMERS_ACTION,\r\n    PRODUCT_EXPAND_ACTION,\r\n    CUSTOMER_EXPAND_ACTION,\r\n    CUSTOMER_EXPAND_MONTH_ACTION,\r\n    ENTRY_LIST_ACTION, UPDATE_DEPOT_INDEX_ACTION,\r\n} from '../../redux/actions/actions';\r\nimport Layout from '../layout';\r\nimport ChartsSection from './charts_section';\r\nimport Customers from './customers';\r\nimport InputComponent from './input-section'\r\nimport TopTabs from './top-tabs'\r\n\r\n\r\nclass HomePage extends React.Component {\r\n    state = {\r\n        redirect:false,\r\n        spinner: false,\r\n        didnt_load: false,\r\n        \r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        console.log(\"index receive\")\r\n        if (nextProps.depot_expand_monthly.length > 0){\r\n            \r\n            this.setState({spinner:false, didnt_load:false})\r\n        }else{\r\n            this.setState({spinner:false, didnt_load:true})\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n   \r\n    componentWillMount = async() => {\r\n        const token = this.props.token\r\n        console.log(token)\r\n        if(token === undefined || token===\"\"){\r\n            this.setState({redirect:true})  \r\n        }\r\n        else {\r\n            \r\n            await this.props.CUSTOMER_EXPAND_MONTH_ACTION()\r\n            await this.props.DEPOT_EXPAND_CUSTOMERS_ACTION()\r\n            await this.props.ENTRY_LIST_ACTION()\r\n        }\r\n        // else {\r\n        //     this.setState({spinner:true})\r\n        //     // await this.props.BI_LIST_ACTION()\r\n        //     await this.props.DEPOT_EXPAND_ACTION()\r\n        //     await this.props.PRODUCT_EXPAND_ACTION()\r\n        //     await this.props.CUSTOMER_EXPAND_ACTION()\r\n        //     await this.props.MAIN_BI_LIST_ACTION()\r\n        //     await this.props.DEPOT_LIST_ACTION()\r\n        // }\r\n    }\r\n    render(){\r\n        if(this.state.redirect){\r\n            return <Redirect to={\"/login\"} />\r\n        }else{\r\n            \r\n        }\r\n        \r\n        return (\r\n            <Layout headerTitle={\"Dashboard\"}>\r\n                 <InputComponent depot_id={1}/>\r\n            {this.state.didnt_load ? \r\n                <div>\r\n                   \r\n                    <Alert variant={\"info\"} size=\"sm\">\r\n                        Nothing to show now. Until data is uploaded\r\n                    </Alert>\r\n                </div>\r\n            :\r\n            <div>\r\n                {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: \r\n                    <div>\r\n                        \r\n                        {/* <TopTabs \r\n                            total_earns={this.props.bi_list.daily_products_comp.total_earns} \r\n                            total_orders={this.props.bi_list.daily_products_comp.total_orders}\r\n                            total_customers = {this.props.bi_list.daily_products_comp.total_customers}\r\n                        /> */}\r\n                        <ChartsSection \r\n                            selection_dates={this.props.selection_dates}\r\n                            dashboard_metric={this.props.dashboard_metric}\r\n                            product_expand_monthly={this.props.product_expand_monthly}\r\n                            product_expand_daily={this.props.product_expand_daily}\r\n                            depot_expand_daily={this.props.depot_expand_daily}\r\n                            depot_expand_monthly={this.props.depot_expand_monthly}\r\n\r\n                            update_dashboard_year_product_monthly= {this.props.update_dashboard_year_product_monthly}\r\n                            update_dashboard_depot_year= {this.props.update_dashboard_depot_year}\r\n                            update_dashboard_depot_month= {this.props.update_dashboard_depot_month}\r\n                        />\r\n                        <Customers \r\n                            dashboard_metric={this.props.dashboard_metric}\r\n                            customer_expand_all={this.props.customer_expand_all}\r\n                            customer_expand_month={this.props.customer_expand_month}\r\n                            update_dashboard_customer_year= {this.props.update_dashboard_customer_year}\r\n                            update_dashboard_customer_month= {this.props.update_dashboard_customer_month}\r\n                            update_dashboard_customer_product={this.props.update_dashboard_customer_product}\r\n                        />\r\n                    </div>\r\n                }\r\n \r\n            </div>}\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      token: state.auth_reducer.token,\r\n      dashboard_metric: state.list_reducer.dashboard_metric,\r\n      selection_dates: state.list_reducer.selection_dates,\r\n      depot_expand_monthly: (state.list_reducer.depot_expand_monthly ? state.list_reducer.depot_expand_monthly: []),\r\n\r\n      customer_expand_all: (state.list_reducer.customer_expand_all ? state.list_reducer.customer_expand_all: null),\r\n      customer_expand_month: (state.list_reducer.customer_expand_month ? state.list_reducer.customer_expand_month: null),\r\n      product_expand_monthly: (state.list_reducer.product_expand_monthly ? state.list_reducer.product_expand_monthly: []),\r\n      product_expand_daily: (state.list_reducer.product_expand_daily ? state.list_reducer.product_expand_daily: []),\r\n      update_dashboard_year_product_monthly: state.update_reducer.update_dashboard_year_product_monthly,\r\n      update_dashboard_depot_year: state.update_reducer.update_dashboard_depot_year,\r\n      update_dashboard_depot_month: state.update_reducer.update_dashboard_depot_month,\r\n      update_dashboard_customer_year: state.update_reducer.update_dashboard_customer_year,\r\n      update_dashboard_customer_month: state.update_reducer.update_dashboard_customer_month,\r\n      update_dashboard_customer_product: state.update_reducer.update_dashboard_customer_product,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    BI_LIST_ACTION,\r\n    MAIN_BI_LIST_ACTION,\r\n    DEPOT_LIST_ACTION,\r\n    DEPOT_EXPAND_ACTION,\r\n    PRODUCT_EXPAND_ACTION,\r\n    CUSTOMER_EXPAND_ACTION,\r\n    CUSTOMER_EXPAND_MONTH_ACTION,\r\n    DEPOT_EXPAND_CUSTOMERS_ACTION,\r\n    ENTRY_LIST_ACTION,\r\n    UPDATE_DEPOT_INDEX_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(HomePage);\r\n  ","import React from 'react';\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport { MdSupervisorAccount, MdOutlineAttachMoney, MdOutlineListAlt} from \"react-icons/md\";\r\nimport { GiMoneyStack} from \"react-icons/gi\";\r\n\r\nimport '../../themes/theme1/home.css'\r\n\r\nclass TopTabs extends React.Component {\r\n    numberWithCommas = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    render(){\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    <div className='tab'>\r\n                        <div className='icon'>\r\n                            <GiMoneyStack size={30} color=\"#866365\"/>\r\n                        </div>\r\n                        <div className='tab-text'>\r\n                            <p className='tab-title'>Total Revenue</p>\r\n                            <h5 className='tab-amount'>Kshs. {this.numberWithCommas(this.props.total_earns)}</h5>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div className='tab'>\r\n                        <div className='icon'>\r\n                            <MdOutlineListAlt size={30} color=\"green\"/>\r\n                        </div>\r\n                        <div className='tab-text'>\r\n                            <p className='tab-title'>Total Orders</p>\r\n                            <h5 className='tab-amount'>{this.props.total_orders}</h5>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                    <div className='tab'>\r\n                        <div className='icon'>\r\n                            <MdSupervisorAccount size={30} color=\"#304577\"/>\r\n                        </div>\r\n                        <div className='tab-text'>\r\n                            <p className='tab-title'>Total Customers</p>\r\n                            <h5 className='tab-amount'>{this.props.total_customers}</h5>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopTabs","import React from \"react\";\r\nimport ReactExport from \"react-export-excel\";\r\nimport { SiMicrosoftexcel} from \"react-icons/si\";\r\nimport {Button} from \"react-bootstrap\"\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\n\r\n\r\nexport default class DownloadFile extends React.Component {\r\n    \r\n    render() {\r\n      \r\n        return (\r\n            <ExcelFile element={<Button variant=\"transparent\" className=\"exports\">\r\n                    <SiMicrosoftexcel size={25} color=\"green\"/>\r\n                </Button>}>\r\n                <ExcelSheet data={this.props.entries} name=\"Employees\">\r\n                    <ExcelColumn label=\"Date\" value=\"date\"/>\r\n                    {/* <ExcelColumn label=\"Product\" value=\"product\"/> */}\r\n                    <ExcelColumn label=\"Order No\" value=\"order_no\"/>\r\n                    <ExcelColumn label=\"Entry No\" value=\"entry_no\"/>\r\n                    <ExcelColumn label=\"S.Price\" value=\"selling_price\"/>\r\n                    <ExcelColumn label=\"OBS Vol\" value=\"vol_obs\"/>\r\n                    <ExcelColumn label=\"Vol@20\" value=\"vol_20\"/>\r\n                    <ExcelColumn label=\"Amount\" value=\"amount\"/>\r\n                </ExcelSheet>\r\n                \r\n            </ExcelFile>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Button} from \"react-bootstrap\"\r\nimport {connect} from \"react-redux\"\r\nimport { ORDER_DATES_ACTION } from \"../../redux/actions/actions\";\r\nimport { MdCalendarToday, MdKeyboardArrowDown} from \"react-icons/md\";\r\nimport { SiMicrosoftexcel} from \"react-icons/si\";\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport Popup from 'reactjs-popup';\r\nimport DownloadFile from \"./excel\";\r\n\r\nimport '../../themes/theme1/orders.css'\r\n\r\n\r\nclass TopComponent extends React.Component {\r\n    state = {\r\n        startDate: new Date(this.props.order_dates.start_date),\r\n        endDate: new Date(this.props.order_dates.end_date),\r\n        key: 'selection', \r\n        date: true,\r\n        cost: false,\r\n      }\r\n    \r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.setState({\r\n            startDate: new Date(nextProps.order_dates.start_date),\r\n            endDate: new Date(nextProps.order_dates.end_date),\r\n        })\r\n    }\r\n    handleSelect = async(ranges) => {\r\n        \r\n        this.setState({\r\n            startDate:ranges.selection.startDate,\r\n            endDate: ranges.selection.endDate\r\n        })\r\n\r\n        const dates = {\r\n            start_date: ranges.selection.startDate,\r\n            end_date: ranges.selection.endDate\r\n        }\r\n        await this.props.ORDER_DATES_ACTION(dates)\r\n      }\r\n    render() {\r\n        \r\n        const start_date = this.state.startDate\r\n        const end_date = this.state.endDate\r\n        return (\r\n            <div>\r\n                 <div className=\"order-top\">\r\n                    \r\n                    <Popup trigger={\r\n                            <Button className='input-dates' size='sm'>\r\n                                <div className='input-display'>\r\n                                    <span><MdCalendarToday color='#D04D30' size={18}/></span>\r\n                                    {start_date.toDateString()} - {end_date.toDateString()}\r\n                                    <span><MdKeyboardArrowDown size={18}/></span>\r\n                                </div>\r\n                                \r\n                            </Button>\r\n                        } \r\n                            position=\"bottom\"\r\n                        >\r\n                        <DateRangePicker\r\n                            onChange={this.handleSelect}\r\n                            showSelectionPreview={true}\r\n                            moveRangeOnFirstSelection={false}\r\n                            months={2}\r\n                            ranges={[this.state]}\r\n                            direction=\"horizontal\"\r\n                            preventSnapRefocus={true}\r\n                            calendarFocus=\"backwards\"\r\n                            className='date-range'\r\n                        />\r\n                    </Popup>\r\n                    {/* <DownloadFile entries={this.props.entries}/> */}\r\n                </div>\r\n\r\n        </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const dates = {\r\n        start_date:new Date(2022, 3, 20), \r\n        end_date: new Date(2022, 3, 30)\r\n    }\r\n    return {\r\n      order_dates: (state.list_reducer.order_dates ? state.list_reducer.order_dates:dates ),\r\n      entries: (state.list_reducer.entries ? state.list_reducer.entries: []),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    ORDER_DATES_ACTION\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(TopComponent);\r\n  ","import React from 'react';\r\nimport {connect} from \"react-redux\"\r\nimport {Form, Row, Col, Button, Alert} from 'react-bootstrap';\r\nimport {Triangle} from \"react-loader-spinner\"\r\n\r\nimport { UPDATE_ENTRY_ACTION, ENTRY_LIST_ACTION } from '../../redux/actions/actions';\r\nimport '../../themes/theme1/home.css'\r\nclass EditForm extends React.Component {\r\n    state = {\r\n        date: this.props.order.date,\r\n        product: this.props.order.product,\r\n        product_id: this.props.order.product_id,\r\n        truck: this.props.order.customer,\r\n        truck_id: this.props.order.truck,\r\n        customer: this.props.order.customer,\r\n        customer_changed: false,\r\n        depot: this.props.order.depot,\r\n        depot_item : this.props.depots.filter(x => x.name == this.props.order.depot)[0].customers,\r\n        depots: this.props.depots.filter(x=>x.name !== this.props.order.depot),\r\n        other_products: this.props.depots.filter(x => x.name == this.props.order.depot)[0].products.filter(x => x.name !== this.props.order.product),\r\n        order_no: this.props.order.order_no,\r\n        entry_no: this.props.order.entry_no ? this.props.order.entry_no: \"\",\r\n        vol_obs: this.props.order.vol_obs,\r\n        vol_20: this.props.order.vol_20,\r\n        selling_price: this.props.order.selling_price,\r\n\r\n        spinner: false,\r\n        success: false,\r\n        null_error: false,\r\n        show_errors: false,\r\n    }\r\n\r\n    customerChange = (id) => {\r\n        let depot = this.props.depots.filter(x => x.id === parseInt(id))[0]\r\n        console.log(depot)\r\n        this.setState({\r\n            depot_item: depot.customers, \r\n            customer_changed:true,\r\n            other_products: depot.products\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps = async(nextProps) => {\r\n        console.log(\"in edit receive\")\r\n        try{\r\n            if (nextProps.updated_entry.entry_no === this.state.entry_no) {\r\n                await this.props.ENTRY_LIST_ACTION()\r\n                this.setState({spinner:false, success:true})\r\n            }else{\r\n                this.setState({spinner: false})\r\n            }\r\n        }catch(e){\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        \r\n        const {product_id, truck_id, entry_no, order_no, date, vol_obs, vol_20, selling_price} = this.state\r\n        let items = [product_id, truck_id, entry_no, order_no, date, vol_obs, vol_20, selling_price]\r\n        let null_error = false\r\n        for(let i=0; i<items.length; i++){\r\n            if(items[i] === null || items[i] === \"\" || items[i] === undefined){\r\n                null_error = true\r\n            }\r\n        }\r\n        if(null_error){\r\n            this.setState({null_error:true})\r\n        }else{\r\n            this.setState({spinner:true}) \r\n            console.log(\"in edit\")\r\n            await this.props.UPDATE_ENTRY_ACTION(this.props.order.id, product_id, truck_id, entry_no, order_no, date, vol_obs, vol_20, selling_price)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {date, depot, customer_changed, customer, depots, truck, product, other_products, order_no, entry_no, vol_obs, vol_20, selling_price} = this.state\r\n        \r\n        return (\r\n            <div className='upload-form'>\r\n                 {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: null}\r\n                <h4 className='upload-title'>Fill the information</h4>\r\n\r\n                {/* If successful */}\r\n                {this.state.success ?\r\n                <Alert variant={\"success\"} size=\"sm\">\r\n                    Entry Updated Successful\r\n                </Alert>: null}\r\n\r\n                 {/* Null error */}\r\n                 {this.state.null_error ?\r\n                <Alert variant={\"danger\"} size=\"sm\">\r\n                    All the fields must be field\r\n                </Alert>: null}\r\n                \r\n                {/* IF errors */}\r\n                {this.state.show_errors ?\r\n                    Object.keys(this.props.error).map((key, idx) => \r\n                        <Alert key={idx} variant=\"danger\">{key}: {this.props.create_customer_error[key][0]}</Alert>\r\n                    )\r\n                : null}\r\n\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Date</Form.Label>\r\n                        <Form.Control type=\"date\" placeholder=\"Date\" size='sm' value={date} onChange={e => this.setState({date:e.target.value})}/>\r\n                    </Form.Group>\r\n                    \r\n                    \r\n                    <Row style={{marginTop:0, height:'auto'}}>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Depot</Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\" size='sm' onChange={e => this.customerChange(e.target.value)}>\r\n                                    <option>{depot}</option>\r\n                                    {depots.map((customer, idx) => \r\n                                        <option key={idx} value={customer.id}>{customer.name}</option>\r\n                                    )}\r\n                                    \r\n                                    \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Truck</Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\" size='sm' onChange={e => this.setState({truck_id:e.target.value})}>\r\n                                    {customer_changed ? <option>Select</option>:\r\n                                    <option>{customer}</option>}\r\n                                    {this.state.depot_item.map((truck) => \r\n                                        <option value={truck.id}>{truck.name}</option>\r\n                                    )}\r\n                                    \r\n                                    \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Product</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={e => this.setState({product_id:e.target.value})}>\r\n                            <option>{product}</option>\r\n                            {other_products.map((product, idx) =>\r\n                                <option key={idx} value={product.id}>{product.name}</option>\r\n                            )}\r\n                            \r\n                            \r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <h6 className='upload-form-details'>Details</h6>\r\n\r\n                    \r\n\r\n                    <Row style={{marginTop:0, height:'auto'}}>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Order No</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' value={order_no} onChange={e => this.setState({order_no:e.target.value})}/>\r\n                            </Form.Group>\r\n                            \r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Entry no</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' value={entry_no} onChange={e => this.setState({entry_no:e.target.value})}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row style={{marginTop:0, height:'auto'}}>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Vol</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' value={vol_obs} onChange={e => this.setState({vol_obs:e.target.value})}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                                <Form.Label>Vol@20</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' value={vol_20} onChange={e => this.setState({vol_20:e.target.value})}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form.Group className=\"mb-2\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Selling Price</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Order No\" size='sm' value={selling_price} onChange={e => this.setState({selling_price:e.target.value})}/>\r\n                    </Form.Group>\r\n                    <div align='center'>\r\n                    <Button variant='primary' type='submit'>Upload</Button>\r\n                    </div>\r\n                    \r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      updated_entry: state.update_reducer.updated_entry,\r\n      error: (state.update_reducer.update_entry_error ? state.update_reducer.update_entry_error: null),\r\n      depots: (state.list_reducer.depot_customer_list ? state.list_reducer.depot_customer_list: []),\r\n      products: (state.list_reducer.products ? state.list_reducer.products: []),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    UPDATE_ENTRY_ACTION,\r\n    ENTRY_LIST_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(EditForm);\r\n  ","import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\n\r\nimport {Button, Table, Form, FormControl, Pagination, Alert} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport {MdEditNote, MdDelete} from \"react-icons/md\";\r\nimport { Triangle } from 'react-loader-spinner';\r\n\r\nimport '../../themes/theme1/orders.css'\r\nimport EditForm from './edit';\r\nimport {DELETE_ENTRY_ACTION, ENTRY_LIST_ACTION} from \"../../redux/actions/actions\"\r\nimport { stackOrderNone } from 'd3';\r\n\r\nclass OrderTable extends React.Component {\r\n    state = {\r\n        orders: this.props.entries,\r\n        order_no: null,\r\n        active: 1,\r\n        spinner: false,\r\n        success: true,\r\n        delete_order: null,\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        let NUM_ORDERS = 50\r\n        let active = this.state.active\r\n        const start_index = (active - 1) * NUM_ORDERS\r\n        const end_index = (active * NUM_ORDERS)\r\n        if (e === \"\" || e === undefined || e === null){\r\n            this.setState({orders: this.props.entries.slice(start_index, end_index)})\r\n        }else {\r\n            this.setState({order_no: e})\r\n        }\r\n    }\r\n    \r\n    onSearch = (e) => {\r\n        e.preventDefault()\r\n        const {order_no} = this.state\r\n        let orders = this.props.entries\r\n        orders = orders.filter(function (or) {\r\n            return or.order_no.includes(order_no)\r\n        });\r\n        this.setState({orders:orders})\r\n    }\r\n\r\n    componentWillReceiveProps = async(nextProps) => {\r\n        this.setState({success:true})\r\n        if(nextProps.deleted_entry){\r\n            if(nextProps.deleted_entry.order_no === this.state.delete_order){\r\n               \r\n                await this.props.ENTRY_LIST_ACTION()\r\n                this.setState({spinner:false, success:true, delete_order:null})\r\n            }\r\n        }\r\n        let orders = nextProps.entries\r\n        var start_date = new Date(nextProps.order_dates.start_date)\r\n        var end_date = new Date(nextProps.order_dates.end_date)\r\n\r\n        orders = orders.filter(function (or) {\r\n            const d = new Date(or.date)\r\n            if(d >= start_date && d <= end_date){\r\n                return true\r\n            }\r\n            return false\r\n          });\r\n        this.setState({\r\n            orders:orders,\r\n            active: 1,\r\n        })\r\n    }\r\n\r\n    numberWithCommas(x) {\r\n        try{\r\n            return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        }catch(e){\r\n            return x\r\n        }\r\n        \r\n    }\r\n\r\n    handleDelete = async(id, order) => {\r\n        this.setState({spinner: true, delete_order:order.order_no})\r\n        await this.props.DELETE_ENTRY_ACTION(id, order)\r\n    }\r\n    componentDidMount = () => {\r\n        // this.setState({orders: this.state.orders.concat(this.props.entries)})\r\n        // console.log(this.props.entries)\r\n        \r\n\r\n        let orders = this.props.entries\r\n        var start_date = new Date(this.props.order_dates.start_date)\r\n        var end_date = new Date(this.props.order_dates.end_date)\r\n\r\n        orders = orders.filter(function (or) {\r\n            const d = new Date(or.date)\r\n            if(d >= start_date && d <= end_date){\r\n                return true\r\n            }\r\n            return false\r\n          });\r\n        this.setState({\r\n            orders:orders,\r\n            delete_order: null,\r\n        })\r\n    }\r\n    render() {\r\n        let items = [];\r\n        const NUM_ORDERS = 50\r\n        let active = this.state.active;\r\n        const start_index = (active - 1) * NUM_ORDERS\r\n        const end_index = (active * NUM_ORDERS)\r\n        for (let number = 1; number <= Math.ceil(this.state.orders.length / NUM_ORDERS); number++) {\r\n            items.push(\r\n                <Pagination.Item key={number} active={number === active} onClick={() => this.setState({active:number})}>\r\n                {number}\r\n                </Pagination.Item>,\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='order-table'>\r\n                <div className='table-header'>\r\n                    <h6></h6>\r\n\r\n                    <Form className=\"d-flex\" onSubmit={this.onSearch}>\r\n                        <FormControl\r\n                            type=\"search\"\r\n                            placeholder=\"Search by order no.\"\r\n                            className=\"me-2\"\r\n                            aria-label=\"Search by order no.\"\r\n                            size='sm'\r\n                            onChange={(e)=> this.onSearchChange(e.target.value)}\r\n                            />\r\n                            <Button variant=\"outline-primary\" type='submit'>Search</Button>\r\n                    </Form>\r\n                </div>\r\n\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Date</th>\r\n                            <th>Product</th>\r\n                            <th>Customer</th>\r\n                            <th>Order No</th>\r\n                            <th>Entry No</th>\r\n                            <th>S.Price</th>\r\n                            <th>OBS Vol</th>\r\n                            <th>Vol@20</th>\r\n                            <th>Amount</th>\r\n                            <th>Edit</th>\r\n                            <th>Del</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.orders.map((order, idx) => \r\n                            <tr key={idx}>\r\n                                <td>{start_index + idx + 1}</td>\r\n                                <td>{order.date}</td>\r\n                                <td>{order.product}</td>\r\n                                <td>{order.customer}</td>\r\n                                <td>{order.order_no}</td>\r\n                                <td>{order.entry_no}</td>\r\n                                <td>{order.selling_price}</td>\r\n                                <td>{this.numberWithCommas(order.vol_obs)}</td>\r\n                                <td>{this.numberWithCommas(order.vol_20)}</td>\r\n                                <td>{this.numberWithCommas(order.vol_obs * order.selling_price)}</td>\r\n                                <td>\r\n                                    <Popup \r\n                                        contentStyle={{width:500, minHeight:400}}\r\n                                        trigger={\r\n                                            <Button variant='transparent' className='action-button'>\r\n                                                <MdEditNote color='blue' size={20}/>\r\n                                            </Button>\r\n                                        }\r\n                                        position=\"left top\"\r\n                                    >\r\n                                        \r\n                                        <EditForm order={order} />\r\n                                    </Popup>\r\n                                </td>\r\n                                <td>\r\n                                    <Popup \r\n                                        contentStyle={{width:300, minHeight:150}}\r\n                                        onOpen= {() => this.setState({success:false})}\r\n                                        trigger={\r\n                                        <Button variant='transparent' className='action-button' onClick={() => this.setState({success:false})}>\r\n                                            <MdDelete color='red' size={20}/>\r\n                                        </Button>\r\n                                        }\r\n                                        position=\"left top\"\r\n                                    >\r\n                                       \r\n                                        <div className='order-delete'>\r\n                                        {this.state.spinner ?\r\n                                            <div className=\"spinner\">\r\n                                                <Triangle \r\n                                                    \r\n                                                    color=\"#00BFFF\"\r\n                                                    height={100}\r\n                                                    width={100}\r\n                                                    timeout={4000} //3 secs\r\n                                                    visible={this.state.spinner}\r\n                                                    \r\n                                                />\r\n                                            </div>: null}\r\n                                            <h6>Are you sure you want to delete this record?</h6>\r\n                                            {this.state.success ?\r\n                                            <Alert variant={\"success\"} size=\"sm\">\r\n                                                Entry Deleted Successful\r\n                                            </Alert>: null}\r\n                                            <div className='delete-buttons'>\r\n\r\n                                               \r\n                                                <Button variant='secondary' className='cancel-button' onClick={() => this.setState({success:false})}>\r\n                                                    Cancel\r\n                                                </Button>\r\n                                                \r\n                                               \r\n                                                <Button variant=\"danger\" onClick={() => this.handleDelete(order.id, order)}>\r\n                                                <MdDelete color='red' size={20}/> Delete\r\n                                                </Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Popup>\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n   \r\n                    </tbody>\r\n                </Table>\r\n                <div>\r\n                                        \r\n\r\n            <Pagination size=\"sm\">{items}</Pagination>\r\n        </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const dates = {\r\n        start_date:new Date(2022, 1, 20), \r\n        end_date: new Date(2022, 1, 28)\r\n    }\r\n    return {\r\n      entries: (state.list_reducer.entries ? state.list_reducer.entries: []),\r\n      deleted_entry: state.update_reducer.deleted_entry,\r\n      order_dates: (state.list_reducer.order_dates ? state.list_reducer.order_dates:dates ),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    DELETE_ENTRY_ACTION,\r\n    ENTRY_LIST_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(OrderTable);\r\n  ","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Triangle } from 'react-loader-spinner'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Layout from '../layout'\r\nimport TopComponent from './top'\r\nimport OrderTable from './table'\r\n\r\nimport {ENTRY_LIST_ACTION} from \"../../redux/actions/actions\"\r\n\r\nclass OrderPage extends React.Component {\r\n    state = {\r\n        spinner: false,\r\n        redirect: false\r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.setState({spinner:false})\r\n    }\r\n    componentWillMount = async() => {\r\n        const token = this.props.token\r\n        if(token === undefined || token===\"\"){\r\n            this.setState({redirect:true})    \r\n        }\r\n        // else{\r\n        //     this.setState({spinner:true})\r\n        //     await this.props.ENTRY_LIST_ACTION()\r\n        // }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.redirect){\r\n            return <Redirect to={\"/login\"} />\r\n        }\r\n        return (\r\n            <Layout headerTitle={\"Orders\"}>\r\n                 {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            \r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: \r\n                    <div>\r\n                        <TopComponent />\r\n                        <OrderTable data={this.props.entries}/>\r\n                    </div>}\r\n                \r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n        entries: (state.list_reducer.entries ? state.list_reducer.entries: []),\r\n\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    ENTRY_LIST_ACTION\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(OrderPage);\r\n  ","import React from \"react\"\r\nimport ReactApexChart from \"react-apexcharts\"\r\n\r\nclass BarChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        series: [{\r\n          name: this.props.data.data.name,\r\n          data: this.props.data.data.values\r\n        }],\r\n        options: {\r\n          chart: {\r\n            type: 'bar',\r\n            height: 350\r\n          },\r\n          title: {\r\n            text: 'Monthly Sale Comparison'\r\n          },\r\n          plotOptions: {\r\n            bar: {\r\n              horizontal: false,\r\n              columnWidth: '55%',\r\n              endingShape: 'rounded'\r\n            },\r\n          },\r\n          dataLabels: {\r\n            enabled: false\r\n          },\r\n          stroke: {\r\n            show: true,\r\n            width: 2,\r\n            colors: ['transparent']\r\n          },\r\n          xaxis: {\r\n            categories: this.props.data.months,\r\n          },\r\n          yaxis: {\r\n            title: {\r\n              text: '$ (Millions)'\r\n            }\r\n          },\r\n          fill: {\r\n            opacity: 1\r\n          },\r\n          tooltip: {\r\n            y: {\r\n              formatter: function (val) {\r\n                return \"$ \" + val + \" thousands\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n      \r\n      \r\n      };\r\n    }\r\n\r\n  \r\n    componentWillReceiveProps = (nextProps) => {\r\n      \r\n      this.setState({series: [{data:nextProps.data.data.values, name:nextProps.data.data.name}]})\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        \r\n\r\n  <div id=\"chart\">\r\n<ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\r\n</div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\nexport default BarChart","import React from 'react'\r\n\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport ApexCharts from 'apexcharts';\r\nvar today = new Date(\"28 Feb 2022\")\r\nvar months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\nclass ProductMainChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {\r\n      \r\n        series: [{\r\n          name: this.props.name,\r\n          data: this.props.data.values\r\n        }],\r\n        options: {\r\n          chart: {\r\n            id: 'area-datetime',\r\n            type: 'area',\r\n            height: 350,\r\n            zoom: {\r\n              autoScaleYaxis: true\r\n            }\r\n          },\r\n          title: {\r\n            text: 'Sales Trend'\r\n          },\r\n          annotations: {\r\n            \r\n            xaxis: [{\r\n              x: new Date(`1 ${months[today.getMonth()]} ${today.getFullYear()}`).getTime(),\r\n              borderColor: '#999',\r\n              yAxisIndex: 0,\r\n              label: {\r\n                show: true,\r\n                text: 'Sales',\r\n                style: {\r\n                  color: \"#fff\",\r\n                  background: '#775DD0'\r\n                }\r\n              }\r\n            }]\r\n          },\r\n          dataLabels: {\r\n            enabled: true\r\n          },\r\n          markers: {\r\n            size: 0,\r\n            style: 'hollow',\r\n          },\r\n          xaxis: {\r\n            type: 'datetime',\r\n            min: new Date(`1 ${months[today.getMonth()]} ${today.getFullYear()}`).getTime(),\r\n            tickAmount: 10,\r\n          },\r\n          yaxis: {\r\n            title: {\r\n              text: '$ (Millions)'\r\n            }\r\n          },\r\n          tooltip: {\r\n            x: {\r\n              format: 'dd MMM yyyy'\r\n            }\r\n          },\r\n          fill: {\r\n            type: 'gradient',\r\n            gradient: {\r\n              shadeIntensity: 1,\r\n              opacityFrom: 0.7,\r\n              opacityTo: 0.9,\r\n              stops: [0, 100]\r\n            }\r\n          },\r\n        },\r\n      \r\n      \r\n        selection: 'one_month',\r\n      \r\n      };\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n      \r\n      this.setState({series: [{data:nextProps.data.values, name:nextProps.name}]})\r\n    }\r\n\r\n    addMonths = (date, months) => {\r\n      date.setMonth(date.getMonth() + months);\r\n      return date;\r\n    }\r\n\r\n    updateData(timeline) {\r\n      this.setState({\r\n        selection: timeline\r\n      })\r\n      const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\n      const month = new Date(`1 ${months[today.getMonth()]} ${today.getFullYear()}`)\r\n\r\n      let six_months = new Date(\"28 Feb 2022\")\r\n      six_months = this.addMonths(six_months, -6)\r\n\r\n      let year = new Date(\"28 Feb 2022\")\r\n      year = this.addMonths(year, -12)\r\n\r\n      \r\n      switch (timeline) {\r\n        case 'one_month':\r\n          ApexCharts.exec(\r\n            'area-datetime',\r\n            'zoomX',\r\n            month.getTime(),\r\n            today.getTime(),\r\n            \r\n          )\r\n          break\r\n        case 'six_months':\r\n          ApexCharts.exec(\r\n            'area-datetime',\r\n            'zoomX',\r\n            six_months.getTime(),\r\n            today.getTime()\r\n          )\r\n          break\r\n        case 'one_year':\r\n          ApexCharts.exec(\r\n            'area-datetime',\r\n            'zoomX',\r\n            year.getTime(),\r\n            today.getTime()\r\n          )\r\n          break\r\n        case 'ytd':\r\n          ApexCharts.exec(\r\n            'area-datetime',\r\n            'zoomX',\r\n            new Date(`01 Jan ${today.getFullYear()}`).getTime(),\r\n            today.getTime()\r\n          )\r\n          break\r\n      \r\n        default:\r\n      }\r\n    }\r\n  \r\n    componentDidMount = () => {\r\n      this.setState({data:this.props.data.values, name:this.props.name, timeline:\"one_month\"})\r\n    }\r\n    render() {\r\n      \r\n      return (\r\n        <div id=\"chart\">\r\n            <div className=\"toolbar\">\r\n            <button id=\"one_month\"\r\n                \r\n                onClick={()=>this.updateData('one_month')} className={ (this.state.selection==='one_month' ? 'date_select active' : 'date_select')}>\r\n            One Month\r\n            </button>\r\n            &nbsp;\r\n            <button id=\"six_months\"\r\n                \r\n                onClick={()=>this.updateData('six_months')} className={ (this.state.selection==='six_months' ? 'date_select active' : 'date_select')}>\r\n            Six Months\r\n            </button>\r\n            &nbsp;\r\n            <button id=\"one_year\"\r\n                \r\n                \r\n                onClick={()=>this.updateData('one_year')} className={ (this.state.selection==='one_year' ? 'date_select active' : 'date_select')}>\r\n            One Year\r\n            </button>\r\n            &nbsp;\r\n            <button id=\"ytd\"\r\n                \r\n                onClick={()=>this.updateData('ytd')} className={ (this.state.selection==='ytd' ? 'date_select active' : 'date_select')}>\r\n            This year\r\n            </button>\r\n            &nbsp;\r\n            \r\n            </div>\r\n\r\n            <div id=\"chart-timeline\">\r\n              <ReactApexChart options={this.state.options} series={this.state.series} type=\"area\" height={350} />\r\n            </div>\r\n        </div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\nexport default ProductMainChart","import React from 'react'\r\nimport ReactApexChart from \"react-apexcharts\"\r\n\r\nclass RadarChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        series: [{\r\n          name: this.props.data.data.name,\r\n          data: this.props.data.data.orders,\r\n        }],\r\n        options: {\r\n            chart: {\r\n              height: 300,\r\n              type: 'radar',\r\n            },\r\n            dataLabels: {\r\n              enabled: true\r\n            },\r\n            plotOptions: {\r\n              radar: {\r\n                size: 140,\r\n                polygons: {\r\n                  strokeColors: '#e9e9e9',\r\n                  fill: {\r\n                    colors: ['aliceblue', '#fff']\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            title: {\r\n              text: 'Monthly Orders'\r\n            },\r\n            colors: ['#008ffb'],\r\n            markers: {\r\n              size: 4,\r\n              colors: ['#fff'],\r\n              strokeColor: '#FF4560',\r\n              strokeWidth: 2,\r\n            },\r\n            tooltip: {\r\n              y: {\r\n                formatter: function(val) {\r\n                  return val\r\n                }\r\n              }\r\n            },\r\n            xaxis: {\r\n              categories: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"]\r\n            },\r\n            yaxis: {\r\n              tickAmount: 7,\r\n              labels: {\r\n                formatter: function(val, i) {\r\n                  if (i % 2 === 0) {\r\n                    return val\r\n                  } else {\r\n                    return ''\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n      \r\n      \r\n      };\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n      \r\n      this.setState({series: [{data:nextProps.data.data.orders, name:nextProps.data.data.name}]})\r\n    }\r\n\r\n\r\n    render() {\r\n      console.log(this.props.data)\r\n      return (\r\n        \r\n\r\n  <div id=\"chart\">\r\n<ReactApexChart options={this.state.options} series={this.state.series} type=\"radar\" height={350} />\r\n</div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\nexport default RadarChart;","import React from \"react\";\r\nimport {Row, Col} from \"react-bootstrap\"\r\nimport '../../../themes/theme1/products.css'\r\nimport BarChart from \"./bar_chart\";\r\nimport ProductMainChart from \"./first\";\r\nimport RadarChart from \"./radar_chart\";\r\n\r\nclass ChartComponent extends React.Component {\r\n    state = {\r\n        data: this.props.data\r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.setState({data:nextProps.data})\r\n    }\r\n    render(){\r\n        \r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"chart-area large-chart\">\r\n                            <ProductMainChart name={this.state.data.name} data={this.state.data.main}/>\r\n                        </div>\r\n                    </Col>\r\n                    {/* <Col>\r\n                        <div className=\"chart-area small-chart\">\r\n\r\n                        </div>\r\n                    </Col> */}\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={7}>\r\n                        <div className=\"chart-area large-chart\">\r\n                            <BarChart data={this.state.data.months}/>\r\n                        </div>\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"chart-area small-chart\">\r\n                            <RadarChart data={this.state.data.months}/>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChartComponent","import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport { connect } from 'react-redux';\r\nimport {Button, Table, Form, FormControl, Pagination} from 'react-bootstrap';\r\n\r\nimport '../../themes/theme1/orders.css'\r\n\r\n\r\nclass ProductOrderTable extends React.Component {\r\n    state = {\r\n        orders: [],\r\n        order_no: null,\r\n        active: 1,\r\n    }\r\n\r\n    numberWithCommas(x) {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        \r\n        if (e === \"\" || e === undefined || e === null){\r\n            this.setState({orders: this.props.entries})\r\n        }else {\r\n            this.setState({order_no: e})\r\n        }\r\n    }\r\n    \r\n    onSearch = (e) => {\r\n        e.preventDefault()\r\n        const {order_no} = this.state\r\n        let orders = this.props.entries\r\n        orders = orders.filter(function (or) {\r\n            return or.order_no === order_no \r\n          });\r\n          this.setState({orders:orders})\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        const name = nextProps.name\r\n        let orders = nextProps.entries\r\n        orders = orders.filter(function (or) {\r\n            return or.product.name === name \r\n        });\r\n          this.setState({orders:orders})\r\n    }\r\n    componentDidMount = () => {\r\n        const name = this.props.name\r\n        let orders = this.props.entries\r\n        orders = orders.filter(function (or) {\r\n            return or.product.name === name \r\n        });\r\n          this.setState({orders:orders})\r\n    }\r\n    render() {\r\n        let items = [];\r\n        const NUM_ORDERS = 10\r\n        let active = this.state.active;\r\n        const start_index = (active - 1) * NUM_ORDERS\r\n        const end_index = (active * NUM_ORDERS)\r\n        \r\n        for (let number = 1; number <= Math.ceil(this.state.orders.length / NUM_ORDERS); number++) {\r\n            items.push(\r\n                <Pagination.Item key={number} active={number === active} onClick={() => this.setState({active:number})}>\r\n                {number}\r\n                </Pagination.Item>,\r\n            );\r\n        }\r\n        return (\r\n            <div className='order-table'>\r\n                <div className='table-header'>\r\n                    <h6>Records</h6>\r\n\r\n                    <Form className=\"d-flex\" onSubmit={this.onSearch}>\r\n                        <FormControl\r\n                            type=\"search\"\r\n                            placeholder=\"Search by order no.\"\r\n                            className=\"me-2\"\r\n                            aria-label=\"Search by order no.\"\r\n                            size='sm'\r\n                            onChange={(e)=> this.onSearchChange(e.target.value)}\r\n                            />\r\n                            <Button variant=\"outline-primary\" type='submit'>Search</Button>\r\n                    </Form>\r\n                </div>\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Date</th>\r\n                            <th>Product</th>\r\n                            <th>Customer</th>\r\n                            <th>Order No</th>\r\n                            <th>Entry No</th>\r\n                            <th>S.Price</th>\r\n                            <th>OBS Vol</th>\r\n                            <th>Vol@20</th>\r\n                            <th>Amount (Kshs)</th>\r\n                           \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.orders.slice(start_index, end_index).map((order, idx) => \r\n                        <tr key={idx}>\r\n                            <td>{idx + 1}</td>\r\n                            <td>{order.date}</td>\r\n                            <td>{order.product.name}</td>\r\n                            <td>{order.truck.customer}</td>\r\n                            <td>{order.order_no}</td>\r\n                            <td>{order.entry_no}</td>\r\n                            <td>{order.selling_price}</td>\r\n                            <td>{this.numberWithCommas(order.vol_obs)}</td>\r\n                            <td>{this.numberWithCommas(order.vol_20)}</td>\r\n                            <td>{this.numberWithCommas(order.vol_obs * order.selling_price)}</td>\r\n                           \r\n                        </tr>\r\n                        )}\r\n                       \r\n                        \r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Pagination size=\"sm\">{items}</Pagination>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        entries: (state.list_reducer.entries ? state.list_reducer.entries: []),\r\n        product_bi_list: (state.list_reducer.product_bi_list ? state.list_reducer.product_bi_list: {}),\r\n        product_index: state.list_reducer.product_index\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    \r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ProductOrderTable);\r\n  ","import React from \"react\";\r\nimport {Button, Form} from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\";\r\nimport {MdOutlineRefresh} from \"react-icons/md\";\r\n\r\nimport {PRODUCT_INDEX_ACTION} from \"../../redux/actions/actions\"\r\nimport '../../themes/theme1/products.css'\r\n\r\nclass ProductTopComponent extends React.Component {\r\n    state = {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: 'selection', \r\n        date: true,\r\n        cost: false,\r\n        index: null,\r\n      }\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const {index} = this.state\r\n        \r\n        await this.props.PRODUCT_INDEX_ACTION(index)\r\n      }\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                 <div className=\"product-top\">\r\n                    <div>\r\n                        <h6>{this.props.products[this.props.product_index].name}</h6>\r\n                    </div>\r\n\r\n                    <Form className=\"product-form\" onSubmit={this.handleSubmit}>\r\n                        <Form.Group className=\"mb-2 product-input\" controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label style={{marginRight: 10}}>Product</Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.setState({index:e.target.value})}>\r\n                                <option>Select</option>\r\n                                {this.props.products.map((product, index) => \r\n                                    <option value={index}>{product.name}</option>\r\n                                )}\r\n                                \r\n                                \r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                        <button type=\"submit\" className=\"product-refresh\">\r\n                            <MdOutlineRefresh size={30} color=\"#008ffb\"/>\r\n                        </button>\r\n                    </Form>\r\n                    \r\n                       \r\n                   \r\n                </div>\r\n            \r\n                 \r\n            \r\n        </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        products: (state.list_reducer.products ? state.list_reducer.products: []),\r\n        product_index: (state.list_reducer.product_index),\r\n        entries: (state.list_reducer.entries ? state.list_reducer.entries: []),\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    PRODUCT_INDEX_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ProductTopComponent);\r\n  ","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Triangle } from 'react-loader-spinner';\r\n\r\nimport { PRODUCT_BI_LIST_ACTION } from \"../../redux/actions/actions\";\r\n\r\nimport Layout from \"../layout\";\r\nimport ChartComponent from \"./graphs\";\r\nimport ProductOrderTable from \"./table\";\r\nimport ProductTopComponent from \"./top\";\r\n\r\nclass ProductPage extends React.Component {\r\n    state = {\r\n        redirect: false,\r\n        spinner: false,\r\n        didnt_load: false,\r\n        data: null\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.product_bi_list[nextProps.product_index].main){\r\n            this.setState({spinner:false, didnt_load:false, data:nextProps.product_bi_list[nextProps.product_index]})\r\n        }else{\r\n            this.setState({spinner:false, didnt_load:true})\r\n        }\r\n        \r\n    }\r\n    componentDidMount = async() => {\r\n        this.setState({data: this.props.product_bi_list[this.props.product_index]})\r\n    }\r\n    componentWillMount = async() => {\r\n        const token = this.props.token\r\n        \r\n        if(token === undefined || token===\"\"){\r\n            this.setState({redirect:true})    \r\n        }else {\r\n            this.setState({spinner:true})\r\n            await this.props.PRODUCT_BI_LIST_ACTION()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect){\r\n            return <Redirect to={\"/login\"} />\r\n        }\r\n        const product_bi_list = this.state.data\r\n        \r\n        return (\r\n            <Layout headerTitle={\"Products\"}>\r\n                {this.state.didnt_load ? \r\n                <div>\r\n                    <Alert variant={\"danger\"} size=\"sm\">\r\n                        Something went wrong. Please contact the Admin.\r\n                    </Alert>\r\n                </div>\r\n                :\r\n                <div>\r\n                    {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: \r\n                    <div>\r\n                        <ProductTopComponent />\r\n                        <ChartComponent data={product_bi_list}/>\r\n                        <ProductOrderTable name={product_bi_list.name}/>\r\n                    </div>\r\n                    }\r\n                </div>}\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n        product_bi_list: (state.list_reducer.product_bi_list ? state.list_reducer.product_bi_list: {}),\r\n        product_index: state.list_reducer.product_index\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    PRODUCT_BI_LIST_ACTION\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ProductPage);\r\n  ","import React from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport ReactApexChart from \"react-apexcharts\"\r\n\r\nclass CustomerBarChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        series: [],\r\n        options: {\r\n          chart: {\r\n            type: 'bar',\r\n            height: 350\r\n          },\r\n          \r\n          title: {\r\n            text: 'Monthly Sale Comparison'\r\n          },\r\n          plotOptions: {\r\n            bar: {\r\n              horizontal: false,\r\n              columnWidth: '55%',\r\n              endingShape: 'rounded'\r\n            },\r\n          },\r\n          dataLabels: {\r\n            enabled: false\r\n          },\r\n          stroke: {\r\n            show: true,\r\n            width: 2,\r\n            colors: ['transparent']\r\n          },\r\n          xaxis: {\r\n            title: {\r\n                text: 'Months'\r\n              },\r\n            categories: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\r\n          },\r\n          yaxis: {\r\n            title: {\r\n              text: this.props.dashboard_metric ? 'Kshs (Millions)': \"Litres\"\r\n            }\r\n          },\r\n          fill: {\r\n            opacity: 1\r\n          },\r\n          tooltip: {\r\n            y: {\r\n              formatter: this.props.dashboard_metric ? function (val) {\r\n                return \"Kshs \" + val + \" Million\"\r\n              }:function (val) {\r\n                return  val + \" Litres\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n      \r\n      \r\n      };\r\n    }\r\n\r\n    update = (props) => {\r\n      let d = props.customer_data\r\n  \r\n      let v = this.mapData(d, parseInt(props.update_customer_year))\r\n      console.log(d)\r\n      this.setState({series:[{\r\n        name: props.dashboard_metric ? \"Revenue\": \"Litres\",\r\n        data: v\r\n      }]})\r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n      this.update(nextProps)\r\n    }\r\n    mapData = (data, year) => {\r\n \r\n      let result = data.filter(obj => {\r\n        return obj.year === parseInt(year)\r\n      })\r\n      \r\n      let months = new Array(12).fill(0)\r\n     \r\n      data =  result[0].data\r\n   \r\n      for(const month in data){\r\n        let month_value = data[month]\r\n        months[month_value.month] = month_value.total\r\n      }\r\n      console.log(months)\r\n      return months\r\n    }\r\n\r\n    componentDidMount = () => {\r\n       this.update(this.props)\r\n    }\r\n    render() {\r\n        \r\n      return (\r\n        \r\n\r\n      <div id=\"chart\">\r\n        <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\r\n        </div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n      customer_data: (state.list_reducer.customer_data ? state.list_reducer.customer_data: {}),\r\n      update_customer_year: state.update_reducer.update_customer_year\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    \r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomerBarChart);\r\n  ","import React from 'react'\r\nimport ReactApexChart from \"react-apexcharts\"\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CustomerRadarChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        series: [],\r\n        options: {\r\n            chart: {\r\n              height: 200,\r\n              type: 'radar',\r\n            },\r\n            dataLabels: {\r\n              enabled: true\r\n            },\r\n            plotOptions: {\r\n              radar: {\r\n                size: 140,\r\n                polygons: {\r\n                  strokeColors: '#e9e9e9',\r\n                  fill: {\r\n                    colors: ['aliceblue', '#fff']\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            title: {\r\n              text: 'Monthly Orders'\r\n            },\r\n            colors: ['#008ffb'],\r\n            markers: {\r\n              size: 4,\r\n              colors: ['#fff'],\r\n              strokeColor: '#FF4560',\r\n              strokeWidth: 2,\r\n            },\r\n            tooltip: {\r\n              y: {\r\n                formatter: function(val) {\r\n                  return val\r\n                }\r\n              }\r\n            },\r\n            xaxis: {\r\n              categories: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"]\r\n            },\r\n            yaxis: {\r\n              tickAmount: 1,\r\n              labels: {\r\n                formatter: function(val, i) {\r\n                  if (i % 2 === 0) {\r\n                    return val\r\n                  } else {\r\n                    return ''\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n      \r\n      \r\n      };\r\n    }\r\n\r\n  \r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.setState({series:[{\r\n            name: nextProps.customer_data.data.name,\r\n            data: nextProps.customer_data.data.orders\r\n          }]})\r\n    }\r\n  \r\n    componentDidMount = () => {\r\n        this.setState({series:[{\r\n            name: this.props.customer_data.data.name,\r\n            data: this.props.customer_data.data.orders\r\n          }]})\r\n    }\r\n    render() {\r\n      return (\r\n        \r\n\r\n  <div id=\"chart\">\r\n<ReactApexChart options={this.state.options} series={this.state.series} type=\"radar\" height={350} />\r\n</div>\r\n\r\n\r\n      );\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = state => {\r\n    return {\r\n      customer_data: (state.list_reducer.customer_data ? state.list_reducer.customer_data.monthly_orders: {})\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    \r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomerRadarChart);","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Table } from \"react-bootstrap\"\r\nclass CustomerTop extends React.Component {\r\n    state = {\r\n        info: []\r\n    }\r\n    numberWithCommas(x) {\r\n        return (x*1000000).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        let result = nextProps.customer_data.filter(obj => {\r\n            return obj.year === parseInt(this.props.update_customer_year)\r\n          })\r\n        this.setState({info: result[0]})\r\n    }\r\n  \r\n    componentDidMount = () => {\r\n        let result = this.props.customer_data.filter(obj => {\r\n            return obj.year === parseInt(this.props.update_customer_year)\r\n          })\r\n        this.setState({info: result[0]})\r\n    }\r\n    render(){\r\n       console.log(this.props.data)\r\n        return (\r\n            <div className=\"customer-content-header\">\r\n                <h5 className=\"customer-content-name\">{this.state.info.name}</h5>\r\n                <div className=\"customer-info\">\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Total Sales</th>\r\n                            <th>Total Amount</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{this.state.info.orders}</td>\r\n                            <td>{this.numberWithCommas(this.state.info.total)}</td>\r\n                        </tr>\r\n                        \r\n                    </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      customer_data: (state.list_reducer.customer_data ? state.list_reducer.customer_data: {}),\r\n      update_customer_year: state.update_reducer.update_customer_year,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    \r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomerTop);\r\n  ","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Table, Pagination} from \"react-bootstrap\"\r\nclass CustomerOrderTable extends React.Component {\r\n    state = {\r\n        orders: [],\r\n        orders_all:[],\r\n        active: 1,\r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        let result = nextProps.customer_data.filter(obj => {\r\n            return obj.year === parseInt(this.props.update_customer_year)\r\n          })\r\n        this.setState({orders: result[0].entries, orders_all:result[0].entries})\r\n    }\r\n    numberWithCommas(x) {\r\n        try{\r\n            return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        }catch(e){\r\n            return x\r\n        }\r\n        \r\n    }\r\n    componentDidMount = () => {\r\n        let result = this.props.customer_data.filter(obj => {\r\n            return obj.year === parseInt(this.props.update_customer_year)\r\n          })\r\n\r\n        console.log(result)\r\n        this.setState({orders: result[0].entries, orders_all:result[0].entries})\r\n    }\r\n    render(){\r\n        let items = [];\r\n        const NUM_ORDERS = 10\r\n        let active = this.state.active;\r\n        const start_index = (active - 1) * NUM_ORDERS\r\n        const end_index = (active * NUM_ORDERS)\r\n        console.log(this.state.orders_all)\r\n        for (let number = 1; number <= Math.ceil(this.state.orders_all.length / NUM_ORDERS); number++) {\r\n            items.push(\r\n                <Pagination.Item key={number} active={number === active} onClick={() => this.setState({active:number})}>\r\n                {number}\r\n                </Pagination.Item>,\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"customer-orders\">\r\n            <div className=\"customer-orders-header\">\r\n                <h6>Orders</h6>\r\n                {/* <Form className=\"d-flex\" onSubmit={this.onSearch}>\r\n                    <FormControl\r\n                        type=\"search\"\r\n                        placeholder=\"Search\"\r\n                        className=\"me-2\"\r\n                        aria-label=\"Search\"\r\n                        size='sm'\r\n                        onChange={(e)=> this.onSearchChange(e.target.value)}\r\n                        />\r\n                        <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\">Search</Button>\r\n                </Form> */}\r\n            </div>\r\n\r\n            <div className=\"customer-orders-table\">\r\n                <Table striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        \r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Date</th>\r\n                            <th>Product</th>\r\n                            <th>Order No</th>\r\n                            <th>Entry No</th>\r\n                            <th>S.Price</th>\r\n                            <th>OBS Vol</th>\r\n                            <th>Vol@20</th>\r\n                            <th>Amount</th>\r\n                        \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        \r\n                    {this.state.orders_all.slice(start_index, end_index).map((order, idx) => \r\n                        <tr key={idx}>\r\n                            <td>{idx + 1}</td>\r\n                            <td>{order.date}</td>\r\n                            <td>{order.product.name}</td>\r\n                            <td>{order.order_no}</td>\r\n                            <td>{order.entry_no}</td>\r\n                            <td>{order.selling_price}</td>\r\n                            <td>{this.numberWithCommas(order.vol_obs)}</td>\r\n                            <td>{this.numberWithCommas(order.vol_20)}</td>\r\n                            <td>{this.numberWithCommas(order.vol_obs * order.selling_price)}</td>\r\n                           \r\n                        </tr>\r\n                    )}\r\n\r\n                        \r\n                        \r\n                    </tbody>\r\n                </Table>\r\n                <Pagination size=\"sm\">{items}</Pagination>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      customer_data: (state.list_reducer.customer_data ? state.list_reducer.customer_data: []),\r\n      update_customer_year: state.update_reducer.update_customer_year,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    \r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomerOrderTable);\r\n  ","import React from \"react\";\r\nimport {Form} from \"react-bootstrap\"\r\nimport {connect} from \"react-redux\"\r\nimport {\r\n    UPDATE_DASHBOARD_CUSTOMER_MONTH_ACTION, \r\n    UPDATE_DASHBOARD_CUSTOMER_YEAR_ACTION,\r\n    UPDATE_DASHBOARD_CUSTOMER_PRODUCT_ACTION,\r\n    UPDATE_CUSTOMER_YEAR_ACTION,\r\n} from \"../../redux/actions/actions\"\r\n\r\n\r\nclass CustomersSelect extends React.Component {\r\n    state = {\r\n        year:this.props.update_customer_year,\r\n        month: parseInt(this.props.update_dashboard_customer_month),\r\n        products: this.props.products,\r\n        product: this.props.update_dashboard_customer_product,\r\n        depot: null,\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        \r\n        this.setState({\r\n            year:nextProps.update_customer_year, \r\n            month:parseInt(nextProps.update_dashboard_customer_month),\r\n            product: nextProps.update_dashboard_customer_product,\r\n        })\r\n    }\r\n\r\n    handleYearChange = async(year) => {\r\n        await this.props.UPDATE_CUSTOMER_YEAR_ACTION(year)\r\n    }\r\n\r\n    handleMonthChange = async(month) => {\r\n        await this.props.UPDATE_DASHBOARD_CUSTOMER_MONTH_ACTION(month)\r\n    }\r\n\r\n    handleProductChange = async(product) => {\r\n       \r\n        await this.props.UPDATE_DASHBOARD_CUSTOMER_PRODUCT_ACTION(product)\r\n    }\r\n\r\n    render (){\r\n        const years = [2022, 2021]\r\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n        const products = this.state.products\r\n        const depots = this.props.depots\r\n        return (\r\n            <div className=\"pie-select-div \">\r\n\r\n                <Form.Group className=\"mb-4 pie-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Year</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleYearChange(e.target.value)}>\r\n                            <option>{this.state.year}</option>\r\n                            {years.map((year) => \r\n                                parseInt(this.state.year) === year ? null : <option value={year}>{year}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                </Form.Group>\r\n\r\n                {/* <Form.Group className=\"mb-4 pie-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Month</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleMonthChange(e.target.value)}>\r\n                            \r\n                            {this.state.month === 13 ? null: <option value={this.state.month}>{months[parseInt(this.state.month)]}</option>}\r\n                            <option value={13}>All</option>\r\n\r\n                            {months.map((month, idx) => \r\n                                parseInt(this.state.month) === idx ? null : <option value={idx}>{month}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-4 pie-select\" controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Product</Form.Label>\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleProductChange(e.target.value)}>\r\n                            <option>{this.state.product === \"All\" ? \"All\":this.state.product}</option>\r\n                            {this.state.product === \"All\" ? null: <option value={\"All\"}>All</option>}\r\n                            {products.map((product) => \r\n                                this.state.product === product.name ? null : <option value={product.name}>{product.name}</option>\r\n                            )}\r\n\r\n                        </Form.Select>\r\n                </Form.Group> */}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      update_dashboard_customer_month: state.update_reducer.update_dashboard_customer_month,\r\n      update_dashboard_customer_year: state.update_reducer.update_dashboard_customer_year,\r\n      update_dashboard_customer_product: state.update_reducer.update_dashboard_customer_product,\r\n      update_customer_year: state.update_reducer.update_customer_year,\r\n      products: state.list_reducer.products,\r\n      depots: state.list_reducer.depot_time_series.depots,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    UPDATE_DASHBOARD_CUSTOMER_MONTH_ACTION,\r\n    UPDATE_DASHBOARD_CUSTOMER_YEAR_ACTION,\r\n    UPDATE_DASHBOARD_CUSTOMER_PRODUCT_ACTION,\r\n    UPDATE_CUSTOMER_YEAR_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomersSelect);\r\n  ","import React from \"react\"\r\n\r\nimport {Alert} from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Triangle } from 'react-loader-spinner';\r\n\r\nimport { \r\n    CUSTOMER_BI_LIST_ACTION, \r\n    CUSTOMER_DATA_ACTION,\r\n    CUSTOMER_LIST_ACTION,\r\n} from '../../redux/actions/actions';\r\n\r\nimport {Row, Col, Button, Form, FormControl, Table} from \"react-bootstrap\"\r\nimport Layout from \"../layout\"\r\nimport \"../../themes/theme1/customers.css\"\r\nimport CustomerBarChart from \"./chart1\";\r\nimport CustomerRadarChart from \"./chart2\";\r\nimport CustomerTop from \"./top_tab\"\r\nimport CustomerOrderTable from \"./orders\"\r\nimport Customers_select from \"../common/customers_select\";\r\n\r\nclass CustomerPage extends React.Component {\r\n    state = {\r\n        orders: [],\r\n        order_no: null,\r\n        redirect:false,\r\n        spinner: false,\r\n        didnt_load: false,\r\n        customer_id: 0,\r\n        customer_data: this.props.dashboard_metric ? this.props.customers[0].revenue_monthly:this.props.customers[0].quantity_monthly,\r\n        customer: null,\r\n        customers: this.props.customers\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        \r\n        if (e === \"\" || e === undefined || e === null){\r\n            this.setState({customers: this.props.customers})\r\n        }else {\r\n            this.setState({customer: e})\r\n        }\r\n    }\r\n    \r\n    onSearch = (e) => {\r\n        e.preventDefault()\r\n        const {customer} = this.state\r\n        let customers = this.props.customers\r\n        customers = customers.filter(function (or) {\r\n            return or.name.toLowerCase().includes(customer.toLowerCase()) \r\n          });\r\n       \r\n        \r\n        this.setState({customers:customers})\r\n    }\r\n\r\n    onClick = async(name) => {\r\n        let index = this.props.customers.findIndex( x => x.name === name );\r\n        console.log(index)\r\n        await this.setState({customer_id:index})\r\n        await this.props.CUSTOMER_DATA_ACTION(this.props.dashboard_metric ? this.props.customers[index].revenue_monthly: this.props.customers[index].quantity_monthly)\r\n        \r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        console.log(nextProps.customers)\r\n        if (nextProps.customers.length > 0){\r\n            this.setState({spinner:false, didnt_load:false})\r\n        }else{\r\n            this.setState({spinner:false, didnt_load:true})\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        \r\n    }\r\n\r\n    componentWillMount = async() => {\r\n        const token = this.props.token\r\n        if(token === undefined || token===\"\"){\r\n            this.setState({redirect:true})    \r\n        }else {\r\n            this.setState({spinner:true})\r\n            \r\n            await this.props.CUSTOMER_DATA_ACTION(this.props.dashboard_metric ? this.props.customers[0].revenue_monthly:this.props.customers[0].quantity_monthly)\r\n            \r\n            \r\n        }\r\n    }\r\n    render(){\r\n        \r\n        if(this.state.redirect){\r\n            return <Redirect to={\"/login\"} />\r\n        }\r\n        \r\n        return (\r\n            <Layout headerTitle={\"Customers\"}>\r\n                {this.state.didnt_load ? \r\n                <div>\r\n                    <Alert variant={\"danger\"} size=\"sm\">\r\n                        Something went wrong. Please contact the Admin.\r\n                    </Alert>\r\n                </div>\r\n            :\r\n            <div>\r\n                {this.state.spinner ?\r\n                    <div className=\"spinner\">\r\n                        <Triangle \r\n                            \r\n                            color=\"#00BFFF\"\r\n                            height={100}\r\n                            width={100}\r\n                            timeout={4000} //3 secs\r\n                            visible={this.state.spinner}\r\n                            \r\n                        />\r\n                    </div>: \r\n                <div> \r\n                    <Customers_select/>\r\n                    <div className=\"chart-area\">\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"customer-side\">\r\n                                    <h6>Pick a customer</h6>\r\n\r\n                                    <Form className=\"d-flex\" onSubmit={this.onSearch}>\r\n                                        <FormControl\r\n                                            type=\"search\"\r\n                                            placeholder=\"Search\"\r\n                                            className=\"me-2\"\r\n                                            aria-label=\"Search\"\r\n                                            size='sm'\r\n                                            onChange = {(e) => this.onSearchChange(e.target.value)}\r\n                                            />\r\n                                            <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\">Search</Button>\r\n                                    </Form>\r\n\r\n                                    <div>\r\n                                        {this.state.customers.map((customer, idx) => \r\n                                            <div key={idx} className={\"customer-scroll\"}>\r\n                                                {this.state.customer_id === idx ? \r\n                                                    \r\n                                                    <Button className='customer active' variant=\"transparent\" onClick={() => this.onClick(customer.name)}>\r\n                                                \r\n                                                        <div className='customer-info'>\r\n                                                            <div className='customer-profile'>\r\n                    \r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <h6 className='customer-name'>{customer.name}</h6>\r\n                                                                <p className='customer-location'>{customer.location}</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Button>:\r\n                                                    <Button className='customer' variant=\"transparent\" onClick={() => this.onClick(customer.name)}>\r\n                                        \r\n                                                        <div className='customer-info'>\r\n                                                            <div className='customer-profile'>\r\n                    \r\n                                                            </div>\r\n                                                            <div>\r\n                                                                <h6 className='customer-name'>{customer.name}</h6>\r\n                                                                <p className='customer-location'>{customer.location}</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Button>}\r\n                                            </div>\r\n                                        )}\r\n                                        \r\n\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </Col>\r\n                            <Col xs={9}>\r\n                                <div className=\"customer-content\">\r\n                                    <CustomerTop\r\n                                        data={this.state.customer_data}\r\n                                    />\r\n\r\n                                    <div>\r\n                                        <Row>\r\n                                            <Col xs={12}>\r\n                                                <div className=\"chart-area\">\r\n                                                    <CustomerBarChart \r\n                                                        data={this.state.customer_data}\r\n                                                        update_customer_year={this.props.update_customer_year}\r\n                                                        dashboard_metric = {this.props.dashboard_metric}\r\n                                                    />\r\n                                                </div>\r\n                                                \r\n                                            </Col>\r\n                                            <Col>\r\n                                                <div className=\"\">\r\n                                                    {/* <CustomerRadarChart data={this.state.customer_data.monthly_orders} /> */}\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n\r\n                                    {/* Records */}\r\n\r\n                                    {/* <CustomerOrderTable /> */}\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n                }\r\n                \r\n                </div>}\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      token: state.auth_reducer.token,\r\n      customers: (state.list_reducer.customers_monthly ? state.list_reducer.customers_monthly: []),\r\n      \r\n      customer_data: (state.list_reducer.customer_data ? state.list_reducer.customer_data: {}),\r\n      customer_expand: (state.list_reducer.customer_data ? state.list_reducer.customer_expand: {}),\r\n      update_customer_year: state.update_reducer.update_customer_year,\r\n      dashboard_metric: state.list_reducer.dashboard_metric,\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps =  {\r\n    CUSTOMER_BI_LIST_ACTION,\r\n    CUSTOMER_DATA_ACTION,\r\n    CUSTOMER_LIST_ACTION,\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomerPage);\r\n  ","import React from \"react\";\r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\n\r\n\r\nimport LoginPage from \"../components/auth\";\r\nimport DepotsPage from \"../components/depots\";\r\nimport HomePage from \"../components/home\";\r\nimport OrderPage from \"../components/orders\";\r\nimport ProductPage from \"../components/products\";\r\nimport CustomerPage from \"../components/customers\";\r\nimport DownloadExcelReport from \"../components/orders/excel\"\r\n\r\n\r\nclass Routes extends React.Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/login\" exact component={LoginPage} />\r\n                    <Route path=\"/\" exact component={HomePage} />\r\n                    <Route path=\"/orders\" exact component={OrderPage} />\r\n                    <Route path=\"/depots\" exact component={DepotsPage} />\r\n                    <Route path=\"/products\" exact component={ProductPage} />\r\n                    <Route path=\"/customers\" exact component={CustomerPage} />\r\n                    <Route path=\"/download_excel\" exact component={DownloadExcelReport} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routes;","import { Provider } from 'react-redux'\n\nimport Routes from './routes';\nimport { store } from './redux/store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './themes/theme1.scss';\nimport './themes/main.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}