{"version":3,"file":"static/js/209.0c27fbab.chunk.js","mappings":"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","sources":["components/sales/sales_table.js","components/sales/sales_date_selector.js","components/sales/index.js","components/utils/header.js","components/utils/layout.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\n\r\nimport { Button, Table, Form, FormControl, Pagination, Alert } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { MdEditNote, MdDelete } from \"react-icons/md\";\r\n\r\nimport { GET_SALES_LIST_ACTION } from \"../../redux/actions/actions\"\r\nimport SpinnerComponent from \"../utils/spinner\"\r\n\r\nclass SalesTable extends React.Component {\r\n    state = {\r\n        sales_list: this.props.sales_list !== undefined ? this.props.sales_list : [],\r\n        sales_date: this.props.sales_date,\r\n        depot: \"All\",\r\n        product: \"All\",\r\n        order_no: null,\r\n        active: 1,\r\n        spinner: false,\r\n        success: true,\r\n        delete_order: null,\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        let NUM_ORDERS = 50\r\n\r\n        let active = this.state.active\r\n        const start_index = (active - 1) * NUM_ORDERS\r\n        const end_index = (active * NUM_ORDERS)\r\n        if (e === \"\" || e === undefined || e === null) {\r\n            this.setState({ sales_list: this.props.sales_list.slice(start_index, end_index) })\r\n        } else {\r\n\r\n            this.setState({ order_no: e })\r\n        }\r\n    }\r\n\r\n    onSearch = (e) => {\r\n        e.preventDefault()\r\n\r\n        const { order_no } = this.state\r\n\r\n        let sales = this.props.sales_list\r\n        sales = sales.filter(function (or) {\r\n            return or.order_no.includes(order_no)\r\n        });\r\n\r\n        this.setState({ sales_list: sales, product: \"All\", depot: \"All\" })\r\n    }\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n        state.success = true\r\n        // state.sales_list = props.sales_list\r\n\r\n        return state\r\n    }\r\n\r\n    numberWithCommas(x) {\r\n        try {\r\n            return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        } catch (e) {\r\n            return x\r\n        }\r\n\r\n    }\r\n\r\n    handleCalc = () => {\r\n        let sales = this.state.sales_list\r\n        let total_vol = 0\r\n        let total_amount = 0\r\n\r\n        for (let i = 0; i < sales.length; i++) {\r\n            let sale = sales[i]\r\n            total_vol = total_vol + sale.vol_obs\r\n            total_amount = total_amount + (sale.vol_obs * sale.selling_price)\r\n        }\r\n\r\n        return [total_amount, total_vol]\r\n    }\r\n    handleProductChange = async (product) => {\r\n        let sales = this.props.sales_list\r\n        if (product !== \"All\") {\r\n            sales = sales.filter(function (or) {\r\n                return or.product.name === product\r\n            });\r\n        }\r\n\r\n\r\n        if (this.state.depot !== \"All\") {\r\n            const name = this.props.depots[parseInt(this.state.depot)].name\r\n            sales = sales.filter(function (or) {\r\n                return or.depot.name === name\r\n            });\r\n        }\r\n\r\n        this.setState({ sales_list: sales, product: product })\r\n\r\n    }\r\n\r\n    handleDepotChange = (idx) => {\r\n        let sales = this.props.sales_list\r\n\r\n        if (idx !== \"All\") {\r\n            const depot = this.props.depots[parseInt(idx)].name\r\n            sales = sales.filter(function (or) {\r\n                return or.depot.name === depot\r\n            });\r\n        }\r\n\r\n        const product = this.state.product\r\n        console.log(product)\r\n        if (product !== \"All\") {\r\n            sales = sales.filter(function (or) {\r\n                return or.product.name === product\r\n            });\r\n        }\r\n        this.setState({ sales_list: sales, depot: idx })\r\n\r\n    }\r\n    // componentDidMount = () => {\r\n    //     let sales_list = this.props.sales_list\r\n\r\n    //     let start_date = this.props.sales_date.start_date\r\n    //     let end_date = this.props.sales_date.end_date\r\n\r\n    //     let _sales_list = await sales_list.filter(function (or) {\r\n    //         const d = new Date(or.date)\r\n    //         if (d >= start_date && d <= end_date) {\r\n    //             return true\r\n    //         }\r\n    //         return false\r\n    //     });\r\n\r\n    //     this.setState({ sales_list: _sales_list })\r\n    //     console.log(this.state.sales_list)\r\n    // }\r\n    render() {\r\n        let items = [];\r\n        const NUM_ORDERS = 50\r\n        let active = this.state.active;\r\n        const start_index = (active - 1) * NUM_ORDERS\r\n        const end_index = active * NUM_ORDERS\r\n\r\n        for (let number = 1; number <= Math.ceil(this.state.sales_list.length / NUM_ORDERS); number++) {\r\n            items.push(\r\n                <Pagination.Item key={number} active={number === active} onClick={() => this.setState({ active: number })}>\r\n                    {number}\r\n                </Pagination.Item>,\r\n            );\r\n        }\r\n\r\n        const { depots, products } = this.props\r\n        const totals = this.handleCalc()\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.spinner ? <SpinnerComponent spinner={this.state.spinner} /> :\r\n                        <div className='sale-table'>\r\n\r\n                            <div className='sale-table__header'>\r\n                                <Form className=\"d-flex\" style={{ alignItems: \"flex-end\" }} onSubmit={this.onSearch}>\r\n                                    <Form.Group className=\"mb-4 pie-select__child sale-table__select\" controlId=\"exampleForm.ControlInput1\" style={{ marginBottom: 0 }}>\r\n                                        <Form.Label>Depot</Form.Label>\r\n                                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleDepotChange(e.target.value)}>\r\n                                            {this.state.depot === \"All\" ? null : <option value={this.state.depot}>{depots[parseInt(this.state.depot)].name}</option>}\r\n                                            <option value={\"All\"}>All</option>\r\n\r\n                                            {depots.map((depot, idx) =>\r\n                                                this.state.depot === idx ? null : <option key={idx} value={idx}>{depot.name}</option>\r\n                                            )}\r\n\r\n                                        </Form.Select>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"mb-4 pie-select__child sale-table__select\" controlId=\"exampleForm.ControlInput1\" style={{ marginBottom: 0 }}>\r\n                                        <Form.Label>Product</Form.Label>\r\n                                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleProductChange(e.target.value)}>\r\n                                            {this.state.product === \"All\" ? null : <option value={this.state.product}>{this.state.product}</option>}\r\n                                            <option value={\"All\"}>All</option>\r\n\r\n                                            {products.map((product, idx) =>\r\n                                                this.state.product === product.name ? null : <option key={idx} value={product.name}>{product.name}</option>\r\n                                            )}\r\n\r\n                                        </Form.Select>\r\n                                    </Form.Group>\r\n\r\n\r\n                                    <FormControl\r\n                                        type=\"search\"\r\n                                        placeholder=\"Search by order no.\"\r\n                                        className=\"me-2 sales-table__search-input\"\r\n                                        aria-label=\"Search by order no.\"\r\n                                        size='sm'\r\n                                        onChange={(e) => this.onSearchChange(e.target.value)}\r\n                                    />\r\n                                    <Button variant=\"outline-primary\" type='submit' >Search</Button>\r\n                                </Form>\r\n                            </div>\r\n\r\n                            <Table striped bordered hover size=\"sm\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th>Date</th>\r\n                                        <th>Depot</th>\r\n                                        <th>Product</th>\r\n                                        <th>Customer</th>\r\n                                        <th>Order No</th>\r\n                                        <th>Lpo No</th>\r\n                                        <th>Entry No</th>\r\n                                        <th>S.Price</th>\r\n                                        <th>OBS Vol</th>\r\n                                        <th>Vol@20</th>\r\n                                        <th>Amount</th>\r\n                                        <th>Paid</th>\r\n                                        {/* <th>Edit</th>\r\n                            <th>Del</th> */}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.sales_list.slice(start_index, end_index).map((sale, idx) =>\r\n                                        <tr key={idx}>\r\n                                            <td>{start_index + idx + 1}</td>\r\n                                            <td>{sale.date}</td>\r\n                                            <td>{sale.depot.name}</td>\r\n                                            <td>{sale.product.name}</td>\r\n                                            <td>{sale.customer.name}</td>\r\n                                            <td>{sale.order_no}</td>\r\n                                            <td>{sale.lpo_no}</td>\r\n                                            <td>{sale.entry_no}</td>\r\n                                            <td>{sale.selling_price}</td>\r\n                                            <td>{this.numberWithCommas(sale.vol_obs)}</td>\r\n                                            <td>{this.numberWithCommas(sale.vol_20)}</td>\r\n                                            <td>{this.numberWithCommas(sale.vol_obs * sale.selling_price)}</td>\r\n                                            <td>{sale.is_paid ? \"True\" : \"False\"}</td>\r\n                                            {/* <td>\r\n                                    <Popup\r\n                                        contentStyle={{ width: 500, minHeight: 400 }}\r\n                                        trigger={\r\n                                            <Button variant='transparent' className='sales-table__action-button'>\r\n                                                <MdEditNote color='blue' size={20} />\r\n                                            </Button>\r\n                                        }\r\n                                        position=\"left top\"\r\n                                    >\r\n\r\n\r\n                                    </Popup>\r\n                                </td>\r\n                                <td>\r\n                                    <Popup\r\n                                        contentStyle={{ width: 300, minHeight: 150 }}\r\n                                        onOpen={() => this.setState({ success: false })}\r\n                                        trigger={\r\n                                            <Button variant='transparent' className='action-button' onClick={() => this.setState({ success: false })}>\r\n                                                <MdDelete color='red' size={20} />\r\n                                            </Button>\r\n                                        }\r\n                                        position=\"left top\"\r\n                                    >\r\n\r\n\r\n                                    </Popup>\r\n                                </td> */}\r\n                                        </tr>\r\n                                    )}\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th>Totals</th>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th>Kshs. {this.numberWithCommas(totals[1])}</th>\r\n                                        <th></th>\r\n                                        <th>Kshs. {this.numberWithCommas(totals[0])}</th>\r\n                                        <th></th>\r\n                                        {/* <th>Edit</th>\r\n                            <th>Del</th> */}\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                            <div>\r\n\r\n\r\n                                <Pagination size=\"sm\">{items}</Pagination>\r\n                            </div>\r\n\r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const dates = {\r\n        start_date: new Date(2022, 1, 20),\r\n        end_date: new Date(2022, 1, 28)\r\n    }\r\n    return {\r\n        // sales_list: (state.list_reducer.sales_list ? state.list_reducer.sales_list : []),\r\n        sales_date: (state.update_reducer.sales_date ? state.update_reducer.sales_date : dates),\r\n        depots: state.list_reducer.depot_list,\r\n        products: state.list_reducer.product_list,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    GET_SALES_LIST_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SalesTable);\r\n","import React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\"\r\nimport { UPDATE_SALES_DATE_ACTION } from \"../../redux/actions/actions\";\r\nimport { MdCalendarToday, MdKeyboardArrowDown } from \"react-icons/md\";\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport Popup from 'reactjs-popup';\r\n\r\n\r\n\r\nclass SalesDateSelector extends React.Component {\r\n    state = {\r\n        startDate: new Date(this.props.sales_date.start_date),\r\n        endDate: new Date(this.props.sales_date.end_date),\r\n        key: 'selection',\r\n        date: true,\r\n        cost: false,\r\n    }\r\n\r\n    static getDerivedStateFromProps = (props, state) => {\r\n\r\n        state.startDate = new Date(props.sales_date.start_date)\r\n        state.endDate = new Date(props.sales_date.end_date)\r\n        return state\r\n    }\r\n    handleSelect = async (ranges) => {\r\n\r\n        this.setState({\r\n            startDate: ranges.selection.startDate,\r\n            endDate: ranges.selection.endDate\r\n        })\r\n\r\n        const dates = {\r\n            start_date: ranges.selection.startDate,\r\n            end_date: ranges.selection.endDate\r\n        }\r\n        await this.props.UPDATE_SALES_DATE_ACTION(dates)\r\n    }\r\n\r\n    render() {\r\n\r\n        const start_date = this.state.startDate\r\n        const end_date = this.state.endDate\r\n        return (\r\n            <div>\r\n                <div className=\"sales-top\">\r\n\r\n                    <Popup trigger={\r\n                        <Button className='input-dates' size='sm'>\r\n                            <div className='input-display'>\r\n                                <span><MdCalendarToday color='#D04D30' size={18} /></span>\r\n                                {start_date.toDateString()} - {end_date.toDateString()}\r\n                                <span><MdKeyboardArrowDown size={18} /></span>\r\n                            </div>\r\n\r\n                        </Button>\r\n                    }\r\n                        position=\"bottom\"\r\n                    >\r\n                        <DateRangePicker\r\n                            onChange={this.handleSelect}\r\n                            showSelectionPreview={true}\r\n                            moveRangeOnFirstSelection={false}\r\n                            months={2}\r\n                            ranges={[this.state]}\r\n                            direction=\"horizontal\"\r\n                            preventSnapRefocus={true}\r\n                            calendarFocus=\"backwards\"\r\n                            className='date-range'\r\n                        />\r\n                    </Popup>\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const dates = {\r\n        start_date: new Date(2022, 3, 20),\r\n        end_date: new Date(2022, 3, 30)\r\n    }\r\n    return {\r\n        sales_date: (state.update_reducer.sales_date ? state.update_reducer.sales_date : dates),\r\n        depots: state.list_reducer.depot_list,\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    UPDATE_SALES_DATE_ACTION\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SalesDateSelector);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom';\r\nimport Layout from '../utils/layout'\r\nimport SpinnerComponent from \"../utils/spinner\"\r\n\r\nimport { GET_SALES_LIST_ACTION } from \"../../redux/actions/actions\"\r\nimport SalesTable from './sales_table';\r\nimport SalesDateSelector from './sales_date_selector';\r\n\r\nclass SalesPage extends React.Component {\r\n    state = {\r\n        spinner: false,\r\n        redirect: false,\r\n        sales_date: this.props.sales_date\r\n    }\r\n    static getDerivedStateFromProps = async (props, state) => {\r\n        const { token, sales_list, sales_date } = props\r\n\r\n        if (token === undefined || token === null) {\r\n            state.redirect = true\r\n            return state\r\n        }\r\n        if (state.sales_date.start_date !== sales_date.start_date || state.sales_date.end_date !== sales_date.end_date) {\r\n            state.spinner = true\r\n            state.sales_date = sales_date\r\n            await props.GET_SALES_LIST_ACTION(sales_date.start_date, sales_date.end_date)\r\n            return state\r\n        }\r\n        else if (sales_list !== undefined) {\r\n            state.spinner = false\r\n            state.redirect = false\r\n        }\r\n        return state\r\n    }\r\n    componentDidMount = async () => {\r\n        const { sales_date } = this.props\r\n        this.setState({ spinner: true })\r\n        await this.props.GET_SALES_LIST_ACTION(sales_date.start_date, sales_date.end_date)\r\n    }\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Navigate to={\"/login\"} />\r\n        }\r\n\r\n        return (\r\n            <Layout header_title={\"Sales\"}>\r\n                {this.state.spinner ? <SpinnerComponent spinner={this.state.spinner} /> :\r\n                    <div>\r\n                        <SalesDateSelector />\r\n                        <SalesTable sales_list={this.props.sales_list} />\r\n                    </div>}\r\n\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n        sales_list: state.list_reducer.sales_list,\r\n        sales_date: state.update_reducer.sales_date,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    GET_SALES_LIST_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SalesPage);\r\n","import React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\"\r\nimport { connect } from \"react-redux\"\r\nimport { UPDATE_CURRENCY_TYPE_ACTION } from \"../../redux/actions/actions\"\r\n\r\nclass HeaderComponent extends React.Component {\r\n    state = {\r\n        currency_type: this.props.currency_type\r\n    }\r\n\r\n    static getDerivedStateFromProps = async (props, state) => {\r\n        state.currency_type = props.currency_type\r\n        return state\r\n    }\r\n\r\n    handleCurrencyTypeChange = async (currency_type) => {\r\n\r\n        this.props.UPDATE_CURRENCY_TYPE_ACTION(currency_type)\r\n    }\r\n    render() {\r\n        const currency_types = [\"Million\", \"Thousand\"]\r\n\r\n        return (\r\n            <div className=\"header\">\r\n                <h5>{this.props.header_title}</h5>\r\n                <div className=\"header__left\">\r\n\r\n                    <Form.Group className=\"header__currency\" controlId=\"exampleForm.ControlInput1\">\r\n                        {/* <Form.Label>Product</Form.Label> */}\r\n                        <Form.Select aria-label=\"Default select example\" size='sm' onChange={(e) => this.handleCurrencyTypeChange(e.target.value)}>\r\n                            <option>{this.state.currency_type}</option>\r\n                            {currency_types.map((currency_type, idx) =>\r\n                                this.state.currency_type === currency_type ? null : <option key={idx} value={currency_type}>{currency_type}</option>\r\n                            )}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"secondary\" size=\"sm\">{this.props.first_name[0]}{this.props.last_name[0]}</Button>\r\n                    <p className=\"header__header-name\">{this.props.first_name} {this.props.last_name}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currency_type: state.update_reducer.currency_type,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    UPDATE_CURRENCY_TYPE_ACTION\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(HeaderComponent);","import React from \"react\";\r\nimport { Container, Button } from 'react-bootstrap'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { MdLogout, MdDashboard, MdOutlineListAlt, MdPeople, MdAnchor } from \"react-icons/md\";\r\nimport { Link, Navigate, NavLink } from \"react-router-dom\";\r\nimport HeaderComponent from \"./header\";\r\nimport { URL } from \"../../utils/_consts\";\r\nimport { USER_LOGGED_OUT_ACTION } from \"../../redux/actions/actions\"\r\n\r\nclass Layout extends React.Component {\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    handleLogOut = () => {\r\n        this.props.USER_LOGGED_OUT_ACTION()\r\n        this.setState({ redirect: true })\r\n\r\n    }\r\n    render() {\r\n\r\n        if (this.state.redirect) {\r\n            return <Navigate to={\"/login\"} />\r\n        }\r\n        return (\r\n            <Container fluid className=\"layout_main\">\r\n\r\n                <div className=\"layout_main__side\">\r\n                    <Link to=\"/\" className=\"layout_main__logo\">\r\n                        <img src={`${URL}/static/opl_logo.png`} alt=\"logo\" className=\"layout_main__logo--img\" />\r\n                    </Link>\r\n\r\n                    <div className=\"layout_main__links\">\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdDashboard size={20} color=\"#D04D30\" /></span>Dashboard</h6>\r\n                            </NavLink> : null}\r\n\r\n                        <NavLink to=\"/depots\" className=\"layout_main__button\">\r\n                            <h6><span className=\"layout_main__links--span\"><MdAnchor /></span>Depots</h6>\r\n                        </NavLink>\r\n\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/sales\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdOutlineListAlt /></span>Sales</h6>\r\n                            </NavLink> : null}\r\n\r\n                        {this.props.token.is_staff === true ?\r\n                            <NavLink to=\"/customers\" className=\"layout_main__button\">\r\n                                <h6><span className=\"layout_main__links--span\"><MdPeople /></span>Customers</h6>\r\n                            </NavLink> : null}\r\n                        <Button variant=\"transparent\" className=\"layout_main__button layout_main__logout\" onClick={this.handleLogOut}>\r\n                            <h6><span className=\"layout_main__links--span\"><MdLogout /></span>Log Out</h6>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"layout_main__component\">\r\n                    <HeaderComponent header_title={this.props.header_title} first_name={this.props.token.data.first_name} last_name={this.props.token.data.last_name} />\r\n                    {this.props.children}\r\n                </div>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth_reducer.token,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    USER_LOGGED_OUT_ACTION,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Layout);\r\n","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active,\n  disabled,\n  className,\n  style,\n  activeLabel,\n  children,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : Anchor;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: \"page-link\",\n      disabled: disabled,\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, { ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\n\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;"],"names":["SalesTable","state","sales_list","undefined","props","sales_date","depot","product","order_no","active","spinner","success","delete_order","onSearchChange","e","start_index","end_index","setState","slice","onSearch","preventDefault","sales","filter","or","includes","handleCalc","total_vol","total_amount","i","length","sale","vol_obs","selling_price","handleProductChange","name","depots","parseInt","handleDepotChange","idx","console","log","x","toString","replace","items","this","number","push","Pagination","onClick","Math","ceil","products","totals","className","Form","style","alignItems","onSubmit","controlId","marginBottom","size","onChange","target","value","map","FormControl","type","placeholder","Button","variant","Table","striped","bordered","hover","date","customer","lpo_no","entry_no","numberWithCommas","vol_20","is_paid","React","getDerivedStateFromProps","mapDispatchToProps","GET_SALES_LIST_ACTION","connect","dates","start_date","Date","end_date","update_reducer","list_reducer","depot_list","product_list","SalesDateSelector","startDate","endDate","key","cost","handleSelect","ranges","selection","UPDATE_SALES_DATE_ACTION","trigger","color","toDateString","position","showSelectionPreview","moveRangeOnFirstSelection","months","direction","preventSnapRefocus","calendarFocus","SalesPage","redirect","componentDidMount","to","header_title","token","auth_reducer","HeaderComponent","currency_type","handleCurrencyTypeChange","UPDATE_CURRENCY_TYPE_ACTION","first_name","last_name","Layout","handleLogOut","USER_LOGGED_OUT_ACTION","Container","fluid","src","URL","alt","is_staff","data","children","PageItem","ref","disabled","activeLabel","Component","Anchor","_jsx","classNames","_jsxs","defaultProps","displayName","createButton","defaultValue","label","First","Prev","Ellipsis","Next","Last","bsPrefix","decoratedBsPrefix","useBootstrapPrefix","Object","assign","Item","borderless","responsive","classes","table","responsiveClass"],"sourceRoot":""}